

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jun 08 17:25:07 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     008F                     	;# 
    96     0090                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0097                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     0105                     	;# 
   115     0107                     	;# 
   116     0108                     	;# 
   117     0109                     	;# 
   118     010C                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     0185                     	;# 
   124     0187                     	;# 
   125     0188                     	;# 
   126     0189                     	;# 
   127     018C                     	;# 
   128     018D                     	;# 
   129     0000                     	;# 
   130     0001                     	;# 
   131     0002                     	;# 
   132     0003                     	;# 
   133     0004                     	;# 
   134     0005                     	;# 
   135     0006                     	;# 
   136     0007                     	;# 
   137     0008                     	;# 
   138     0009                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000D                     	;# 
   143     000E                     	;# 
   144     000E                     	;# 
   145     000F                     	;# 
   146     0010                     	;# 
   147     0011                     	;# 
   148     0012                     	;# 
   149     0013                     	;# 
   150     0014                     	;# 
   151     0015                     	;# 
   152     0015                     	;# 
   153     0016                     	;# 
   154     0017                     	;# 
   155     0018                     	;# 
   156     0019                     	;# 
   157     001A                     	;# 
   158     001B                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001D                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     0081                     	;# 
   165     0085                     	;# 
   166     0086                     	;# 
   167     0087                     	;# 
   168     0088                     	;# 
   169     0089                     	;# 
   170     008C                     	;# 
   171     008D                     	;# 
   172     008E                     	;# 
   173     008F                     	;# 
   174     0090                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0095                     	;# 
   182     0096                     	;# 
   183     0097                     	;# 
   184     0098                     	;# 
   185     0099                     	;# 
   186     009A                     	;# 
   187     009B                     	;# 
   188     009C                     	;# 
   189     009D                     	;# 
   190     009E                     	;# 
   191     009F                     	;# 
   192     0105                     	;# 
   193     0107                     	;# 
   194     0108                     	;# 
   195     0109                     	;# 
   196     010C                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     0185                     	;# 
   202     0187                     	;# 
   203     0188                     	;# 
   204     0189                     	;# 
   205     018C                     	;# 
   206     018D                     	;# 
   207                           
   208                           	psect	idataBANK0
   209     0613                     __pidataBANK0:
   210                           
   211                           ;initializer for main@F1427
   212     0613  3468               	retlw	104
   213     0614  3465               	retlw	101
   214     0615  346C               	retlw	108
   215     0616  346C               	retlw	108
   216     0617  346F               	retlw	111
   217     0618  3420               	retlw	32
   218     0619  3477               	retlw	119
   219     061A  346F               	retlw	111
   220     061B  3472               	retlw	114
   221     061C  346C               	retlw	108
   222     061D  3464               	retlw	100
   223     061E  3421               	retlw	33
   224     061F  3400               	retlw	0
   225     0007                     _PORTC	set	7
   226     001A                     _RCREG	set	26
   227     0019                     _TXREG	set	25
   228     0018                     _RCSTAbits	set	24
   229     0065                     _RCIF	set	101
   230     0064                     _TXIF	set	100
   231     0099                     _SPBRG	set	153
   232     0098                     _TXSTAbits	set	152
   233     0087                     _TRISCbits	set	135
   234     0187                     _BAUDCTLbits	set	391
   235                           
   236                           	psect	cinit
   237     07EE                     start_initialization:	
   238                           ; #config settings
   239                           
   240     07EE                     __initialization:
   241                           
   242                           ; Initialize objects allocated to BANK0
   243     07EE  1383               	bcf	3,7	;select IRP bank0
   244     07EF  3048               	movlw	low (__pdataBANK0+13)
   245     07F0  00FD               	movwf	btemp+-1
   246     07F1  3006               	movlw	high __pidataBANK0
   247     07F2  00FE               	movwf	btemp
   248     07F3  3013               	movlw	low __pidataBANK0
   249     07F4  00FF               	movwf	btemp+1
   250     07F5  303B               	movlw	low __pdataBANK0
   251     07F6  0084               	movwf	4
   252     07F7  120A  118A  2624  120A  118A  	fcall	init_ram0
   253     07FC                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256     07FC                     __end_of__initialization:
   257     07FC  0183               	clrf	3
   258     07FD  120A  118A  2E33   	ljmp	_main	;jump to C main() function
   259                           
   260                           	psect	dataBANK0
   261     003B                     __pdataBANK0:
   262     003B                     main@F1427:
   263     003B                     	ds	13
   264                           
   265                           	psect	inittext
   266     0620                     init_fetch0:	
   267                           ;	Called with low address in FSR and high address in W
   268                           
   269     0620  087E               	movf	btemp,w
   270     0621  008A               	movwf	10
   271     0622  087F               	movf	btemp+1,w
   272     0623  0082               	movwf	2
   273     0624                     init_ram0:	
   274                           ;Called with:
   275                           ;	high address of idata address in btemp 
   276                           ;	low address of idata address in btemp+1 
   277                           ;	low address of data in FSR
   278                           ;	high address + 1 of data in btemp-1
   279                           
   280     0624  120A  118A  2620  120A  118A  	fcall	init_fetch0
   281     0629  0080               	movwf	0
   282     062A  0A84               	incf	4,f
   283     062B  0804               	movf	4,w
   284     062C  067D               	xorwf	btemp+-1,w
   285     062D  1903               	btfsc	3,2
   286     062E  3400               	retlw	0
   287     062F  0AFF               	incf	btemp+1,f
   288     0630  1903               	btfsc	3,2
   289     0631  0AFE               	incf	btemp,f
   290     0632  2E24               	goto	init_ram0
   291                           
   292                           	psect	cstackCOMMON
   293     0070                     __pcstackCOMMON:
   294     0070                     ?_UART_write:
   295     0070                     ??_UART_write:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     ?_main:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ?___aldiv:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     UART_write@ch:	
   305                           ; 4 bytes @ 0x0
   306                           
   307     0070                     ___aldiv@divisor:	
   308                           ; 1 bytes @ 0x0
   309                           
   310                           
   311                           ; 4 bytes @ 0x0
   312     0070                     	ds	4
   313     0074                     ___aldiv@dividend:
   314                           
   315                           ; 4 bytes @ 0x4
   316     0074                     	ds	4
   317     0078                     ??___aldiv:
   318                           
   319                           ; 1 bytes @ 0x8
   320     0078                     	ds	1
   321     0079                     ??_UART_init:
   322                           
   323                           ; 1 bytes @ 0x9
   324     0079                     	ds	4
   325                           
   326                           	psect	cstackBANK0
   327     0020                     __pcstackBANK0:
   328     0020                     ___aldiv@counter:
   329                           
   330                           ; 1 bytes @ 0x0
   331     0020                     	ds	1
   332     0021                     ___aldiv@sign:
   333                           
   334                           ; 1 bytes @ 0x1
   335     0021                     	ds	1
   336     0022                     ___aldiv@quotient:
   337                           
   338                           ; 4 bytes @ 0x2
   339     0022                     	ds	4
   340     0026                     ?_UART_init:
   341     0026                     UART_init@baud:	
   342                           ; 1 bytes @ 0x6
   343                           
   344                           
   345                           ; 2 bytes @ 0x6
   346     0026                     	ds	2
   347     0028                     ??_main:
   348                           
   349                           ; 1 bytes @ 0x8
   350     0028                     	ds	4
   351     002C                     main@t:
   352                           
   353                           ; 13 bytes @ 0xC
   354     002C                     	ds	13
   355     0039                     main@i:
   356                           
   357                           ; 2 bytes @ 0x19
   358     0039                     	ds	2
   359                           
   360                           	psect	maintext
   361     0633                     __pmaintext:	
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 20 in file "newmain.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  t              13   12[BANK0 ] unsigned char [13]
   372 ;;  i               2   25[BANK0 ] int 
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : B00/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         0       0       0       0       0
   383 ;;      Locals:         0      15       0       0       0
   384 ;;      Temps:          0       4       0       0       0
   385 ;;      Totals:         0      19       0       0       0
   386 ;;Total ram usage:       19 bytes
   387 ;; Hardware stack levels required when called: 2
   388 ;; This function calls:
   389 ;;		_UART_init
   390 ;;		_UART_write
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396     0633                     _main:	
   397                           ;psect for function _main
   398                           
   399     0633                     l768:	
   400                           ;incstack = 0
   401                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   402                           
   403                           
   404                           ;newmain.c: 22:     PORTC = 0;
   405     0633  1283               	bcf	3,5	;RP0=0, select bank0
   406     0634  1303               	bcf	3,6	;RP1=0, select bank0
   407     0635  0187               	clrf	7	;volatile
   408     0636                     l770:
   409                           
   410                           ;newmain.c: 23:     UART_init(9600);
   411     0636  3080               	movlw	128
   412     0637  00A6               	movwf	UART_init@baud
   413     0638  3025               	movlw	37
   414     0639  00A7               	movwf	UART_init@baud+1
   415     063A  120A  118A  2730  120A  118A  	fcall	_UART_init
   416     063F                     l772:
   417     063F                     l774:
   418                           
   419                           ;newmain.c: 25:     char t[] = {"hello world!"};
   420     063F  302C               	movlw	main@t& (0+255)
   421     0640  0084               	movwf	4
   422     0641  303B               	movlw	low main@F1427
   423     0642  1283               	bcf	3,5	;RP0=0, select bank0
   424     0643  1303               	bcf	3,6	;RP1=0, select bank0
   425     0644  00A8               	movwf	??_main
   426     0645  0804               	movf	4,w
   427     0646  00A9               	movwf	??_main+1
   428     0647  300D               	movlw	13
   429     0648  00AA               	movwf	??_main+2
   430     0649                     u360:
   431     0649  0828               	movf	??_main,w
   432     064A  0084               	movwf	4
   433     064B  1383               	bcf	3,7	;select IRP bank0
   434     064C  0800               	movf	0,w
   435     064D  00AB               	movwf	??_main+3
   436     064E  0AA8               	incf	??_main,f
   437     064F  0829               	movf	??_main+1,w
   438     0650  0084               	movwf	4
   439     0651  082B               	movf	??_main+3,w
   440     0652  0080               	movwf	0
   441     0653  0AA9               	incf	??_main+1,f
   442     0654  0BAA               	decfsz	??_main+2,f
   443     0655  2E49               	goto	u360
   444     0656                     l776:
   445                           
   446                           ;newmain.c: 27:     {;newmain.c: 28:         for(i=0; t[i] != 0; i++)
   447     0656  1283               	bcf	3,5	;RP0=0, select bank0
   448     0657  1303               	bcf	3,6	;RP1=0, select bank0
   449     0658  01B9               	clrf	main@i
   450     0659  01BA               	clrf	main@i+1
   451     065A  2E6C               	goto	l782
   452     065B                     l778:
   453                           
   454                           ;newmain.c: 29:         {;newmain.c: 30:             UART_write(t[i]);
   455     065B  0839               	movf	main@i,w
   456     065C  3E2C               	addlw	(low (main@t| 0))& (0+255)
   457     065D  0084               	movwf	4
   458     065E  0800               	movf	0,w
   459     065F  120A  118A  2608  120A  118A  	fcall	_UART_write
   460     0664                     l780:
   461                           
   462                           ;newmain.c: 33:         }
   463     0664  3001               	movlw	1
   464     0665  1283               	bcf	3,5	;RP0=0, select bank0
   465     0666  1303               	bcf	3,6	;RP1=0, select bank0
   466     0667  07B9               	addwf	main@i,f
   467     0668  1803               	skipnc
   468     0669  0ABA               	incf	main@i+1,f
   469     066A  3000               	movlw	0
   470     066B  07BA               	addwf	main@i+1,f
   471     066C                     l782:
   472     066C  0839               	movf	main@i,w
   473     066D  3E2C               	addlw	(low (main@t| 0))& (0+255)
   474     066E  0084               	movwf	4
   475     066F  1383               	bcf	3,7	;select IRP bank0
   476     0670  0800               	movf	0,w
   477     0671  1D03               	btfss	3,2
   478     0672  2E74               	goto	u371
   479     0673  2E75               	goto	u370
   480     0674                     u371:
   481     0674  2E5B               	goto	l778
   482     0675                     u370:
   483     0675                     l784:
   484                           
   485                           ;newmain.c: 34:         UART_write('\n');
   486     0675  300A               	movlw	10
   487     0676  120A  118A  2608  120A  118A  	fcall	_UART_write
   488                           
   489                           ;newmain.c: 35:         UART_write('\r');
   490     067B  300D               	movlw	13
   491     067C  120A  118A  2608  120A  118A  	fcall	_UART_write
   492     0681                     l786:
   493                           
   494                           ;newmain.c: 36:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   495     0681  3006               	movlw	6
   496     0682  1283               	bcf	3,5	;RP0=0, select bank0
   497     0683  1303               	bcf	3,6	;RP1=0, select bank0
   498     0684  00AA               	movwf	??_main+2
   499     0685  3013               	movlw	19
   500     0686  00A9               	movwf	??_main+1
   501     0687  30AD               	movlw	173
   502     0688  00A8               	movwf	??_main
   503     0689                     u387:
   504     0689  0BA8               	decfsz	??_main,f
   505     068A  2E89               	goto	u387
   506     068B  0BA9               	decfsz	??_main+1,f
   507     068C  2E89               	goto	u387
   508     068D  0BAA               	decfsz	??_main+2,f
   509     068E  2E89               	goto	u387
   510     068F  2E56               	goto	l776
   511     0690  120A  118A  2800   	ljmp	start
   512     0693                     __end_of_main:
   513                           
   514                           	psect	text1
   515     0608                     __ptext1:	
   516 ;; *************** function _UART_write *****************
   517 ;; Defined at:
   518 ;;		line 37 in file "./uart.h"
   519 ;; Parameters:    Size  Location     Type
   520 ;;  ch              1    wreg     unsigned char 
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  ch              1    0[COMMON] unsigned char 
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0       0       0       0       0
   533 ;;      Locals:         1       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0
   535 ;;      Totals:         1       0       0       0       0
   536 ;;Total ram usage:        1 bytes
   537 ;; Hardware stack levels used: 1
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545     0608                     _UART_write:	
   546                           ;psect for function _UART_write
   547                           
   548                           
   549                           ;incstack = 0
   550                           ; Regs used in _UART_write: [wreg]
   551                           ;UART_write@ch stored from wreg
   552     0608  00F0               	movwf	UART_write@ch
   553     0609                     l764:
   554     0609                     l32:	
   555                           ;./uart.h: 38:     while (TXIF == 0);
   556                           
   557     0609  1283               	bcf	3,5	;RP0=0, select bank0
   558     060A  1303               	bcf	3,6	;RP1=0, select bank0
   559     060B  1E0C               	btfss	12,4	;volatile
   560     060C  2E0E               	goto	u351
   561     060D  2E0F               	goto	u350
   562     060E                     u351:
   563     060E  2E09               	goto	l32
   564     060F                     u350:
   565     060F                     l34:
   566                           
   567                           ;./uart.h: 39:     TXIF = 0;
   568     060F  120C               	bcf	12,4	;volatile
   569     0610                     l766:
   570                           
   571                           ;./uart.h: 40:     TXREG = ch;
   572     0610  0870               	movf	UART_write@ch,w
   573     0611  0099               	movwf	25	;volatile
   574     0612                     l35:
   575     0612  0008               	return
   576     0613                     __end_of_UART_write:
   577                           
   578                           	psect	text2
   579     0730                     __ptext2:	
   580 ;; *************** function _UART_init *****************
   581 ;; Defined at:
   582 ;;		line 5 in file "./uart.h"
   583 ;; Parameters:    Size  Location     Type
   584 ;;  baud            2    6[BANK0 ] int 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         0       2       0       0       0
   597 ;;      Locals:         0       0       0       0       0
   598 ;;      Temps:          4       0       0       0       0
   599 ;;      Totals:         4       2       0       0       0
   600 ;;Total ram usage:        6 bytes
   601 ;; Hardware stack levels used: 1
   602 ;; Hardware stack levels required when called: 1
   603 ;; This function calls:
   604 ;;		___aldiv
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610     0730                     _UART_init:	
   611                           ;psect for function _UART_init
   612                           
   613     0730                     l738:	
   614                           ;incstack = 0
   615                           ; Regs used in _UART_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   616                           
   617                           
   618                           ;./uart.h: 6:     TRISCbits.TRISC6 = 0;
   619     0730  1683               	bsf	3,5	;RP0=1, select bank1
   620     0731  1303               	bcf	3,6	;RP1=0, select bank1
   621     0732  1307               	bcf	7,6	;volatile
   622                           
   623                           ;./uart.h: 7:     TRISCbits.TRISC7 = 1;
   624     0733  1787               	bsf	7,7	;volatile
   625                           
   626                           ;./uart.h: 9:     TXSTAbits.SYNC = 0;
   627     0734  1218               	bcf	24,4	;volatile
   628                           
   629                           ;./uart.h: 11:     TXSTAbits.TXEN = 1;
   630     0735  1698               	bsf	24,5	;volatile
   631     0736                     l740:
   632                           
   633                           ;./uart.h: 12:     if(baud < 9600)
   634     0736  1283               	bcf	3,5	;RP0=0, select bank0
   635     0737  1303               	bcf	3,6	;RP1=0, select bank0
   636     0738  0827               	movf	UART_init@baud+1,w
   637     0739  3A80               	xorlw	128
   638     073A  00FF               	movwf	btemp+1
   639     073B  30A5               	movlw	165
   640     073C  027F               	subwf	btemp+1,w
   641     073D  1D03               	skipz
   642     073E  2F41               	goto	u305
   643     073F  3080               	movlw	128
   644     0740  0226               	subwf	UART_init@baud,w
   645     0741                     u305:
   646     0741  1803               	skipnc
   647     0742  2F44               	goto	u301
   648     0743  2F45               	goto	u300
   649     0744                     u301:
   650     0744  2F75               	goto	l746
   651     0745                     u300:
   652     0745                     l742:
   653                           
   654                           ;./uart.h: 13:     {;./uart.h: 14:         SPBRG = (4000000 / (long) (64UL * baud)) - 1;
   655     0745  1283               	bcf	3,5	;RP0=0, select bank0
   656     0746  1303               	bcf	3,6	;RP1=0, select bank0
   657     0747  0826               	movf	UART_init@baud,w
   658     0748  00F9               	movwf	??_UART_init
   659     0749  0827               	movf	UART_init@baud+1,w
   660     074A  00FA               	movwf	??_UART_init+1
   661     074B  3000               	movlw	0
   662     074C  1BFA               	btfsc	??_UART_init+1,7
   663     074D  30FF               	movlw	255
   664     074E  00FB               	movwf	??_UART_init+2
   665     074F  00FC               	movwf	??_UART_init+3
   666     0750  3006               	movlw	6
   667     0751                     u315:
   668     0751  1003               	clrc
   669     0752  0DF9               	rlf	??_UART_init,f
   670     0753  0DFA               	rlf	??_UART_init+1,f
   671     0754  0DFB               	rlf	??_UART_init+2,f
   672     0755  0DFC               	rlf	??_UART_init+3,f
   673     0756                     u310:
   674     0756  3EFF               	addlw	-1
   675     0757  1D03               	skipz
   676     0758  2F51               	goto	u315
   677     0759  087C               	movf	??_UART_init+3,w
   678     075A  00F3               	movwf	___aldiv@divisor+3
   679     075B  087B               	movf	??_UART_init+2,w
   680     075C  00F2               	movwf	___aldiv@divisor+2
   681     075D  087A               	movf	??_UART_init+1,w
   682     075E  00F1               	movwf	___aldiv@divisor+1
   683     075F  0879               	movf	??_UART_init,w
   684     0760  00F0               	movwf	___aldiv@divisor
   685     0761  3000               	movlw	0
   686     0762  00F7               	movwf	___aldiv@dividend+3
   687     0763  303D               	movlw	61
   688     0764  00F6               	movwf	___aldiv@dividend+2
   689     0765  3009               	movlw	9
   690     0766  00F5               	movwf	___aldiv@dividend+1
   691     0767  3000               	movlw	0
   692     0768  00F4               	movwf	___aldiv@dividend
   693     0769  120A  118A  2693  120A  118A  	fcall	___aldiv
   694     076E  0870               	movf	?___aldiv,w
   695     076F  3EFF               	addlw	255
   696     0770  1683               	bsf	3,5	;RP0=1, select bank1
   697     0771  1303               	bcf	3,6	;RP1=0, select bank1
   698     0772  0099               	movwf	25	;volatile
   699     0773                     l744:
   700                           
   701                           ;./uart.h: 15:         TXSTAbits.BRGH = 0;
   702     0773  1118               	bcf	24,2	;volatile
   703                           
   704                           ;./uart.h: 16:     }
   705     0774  2FE9               	goto	l760
   706     0775                     l746:
   707     0775  1283               	bcf	3,5	;RP0=0, select bank0
   708     0776  1303               	bcf	3,6	;RP1=0, select bank0
   709     0777  0827               	movf	UART_init@baud+1,w
   710     0778  3A80               	xorlw	128
   711     0779  00FF               	movwf	btemp+1
   712     077A  30CB               	movlw	203
   713     077B  027F               	subwf	btemp+1,w
   714     077C  1D03               	skipz
   715     077D  2F80               	goto	u325
   716     077E  3001               	movlw	1
   717     077F  0226               	subwf	UART_init@baud,w
   718     0780                     u325:
   719     0780  1803               	skipnc
   720     0781  2F83               	goto	u321
   721     0782  2F84               	goto	u320
   722     0783                     u321:
   723     0783  2FB4               	goto	l752
   724     0784                     u320:
   725     0784                     l748:
   726                           
   727                           ;./uart.h: 18:     {;./uart.h: 19:         SPBRG = (4000000 / (long) (16UL * baud)) - 1;
   728     0784  1283               	bcf	3,5	;RP0=0, select bank0
   729     0785  1303               	bcf	3,6	;RP1=0, select bank0
   730     0786  0826               	movf	UART_init@baud,w
   731     0787  00F9               	movwf	??_UART_init
   732     0788  0827               	movf	UART_init@baud+1,w
   733     0789  00FA               	movwf	??_UART_init+1
   734     078A  3000               	movlw	0
   735     078B  1BFA               	btfsc	??_UART_init+1,7
   736     078C  30FF               	movlw	255
   737     078D  00FB               	movwf	??_UART_init+2
   738     078E  00FC               	movwf	??_UART_init+3
   739     078F  3004               	movlw	4
   740     0790                     u335:
   741     0790  1003               	clrc
   742     0791  0DF9               	rlf	??_UART_init,f
   743     0792  0DFA               	rlf	??_UART_init+1,f
   744     0793  0DFB               	rlf	??_UART_init+2,f
   745     0794  0DFC               	rlf	??_UART_init+3,f
   746     0795                     u330:
   747     0795  3EFF               	addlw	-1
   748     0796  1D03               	skipz
   749     0797  2F90               	goto	u335
   750     0798  087C               	movf	??_UART_init+3,w
   751     0799  00F3               	movwf	___aldiv@divisor+3
   752     079A  087B               	movf	??_UART_init+2,w
   753     079B  00F2               	movwf	___aldiv@divisor+2
   754     079C  087A               	movf	??_UART_init+1,w
   755     079D  00F1               	movwf	___aldiv@divisor+1
   756     079E  0879               	movf	??_UART_init,w
   757     079F  00F0               	movwf	___aldiv@divisor
   758     07A0  3000               	movlw	0
   759     07A1  00F7               	movwf	___aldiv@dividend+3
   760     07A2  303D               	movlw	61
   761     07A3  00F6               	movwf	___aldiv@dividend+2
   762     07A4  3009               	movlw	9
   763     07A5  00F5               	movwf	___aldiv@dividend+1
   764     07A6  3000               	movlw	0
   765     07A7  00F4               	movwf	___aldiv@dividend
   766     07A8  120A  118A  2693  120A  118A  	fcall	___aldiv
   767     07AD  0870               	movf	?___aldiv,w
   768     07AE  3EFF               	addlw	255
   769     07AF  1683               	bsf	3,5	;RP0=1, select bank1
   770     07B0  1303               	bcf	3,6	;RP1=0, select bank1
   771     07B1  0099               	movwf	25	;volatile
   772     07B2                     l750:
   773                           
   774                           ;./uart.h: 20:         TXSTAbits.BRGH = 1;
   775     07B2  1518               	bsf	24,2	;volatile
   776                           
   777                           ;./uart.h: 21:     }
   778     07B3  2FE9               	goto	l760
   779     07B4                     l752:
   780                           
   781                           ;./uart.h: 23:     {;./uart.h: 24:         SPBRG = (4000000 / (long) (4UL * baud)) - 1;
   782     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   783     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   784     07B6  0826               	movf	UART_init@baud,w
   785     07B7  00F9               	movwf	??_UART_init
   786     07B8  0827               	movf	UART_init@baud+1,w
   787     07B9  00FA               	movwf	??_UART_init+1
   788     07BA  3000               	movlw	0
   789     07BB  1BFA               	btfsc	??_UART_init+1,7
   790     07BC  30FF               	movlw	255
   791     07BD  00FB               	movwf	??_UART_init+2
   792     07BE  00FC               	movwf	??_UART_init+3
   793     07BF  3002               	movlw	2
   794     07C0                     u345:
   795     07C0  1003               	clrc
   796     07C1  0DF9               	rlf	??_UART_init,f
   797     07C2  0DFA               	rlf	??_UART_init+1,f
   798     07C3  0DFB               	rlf	??_UART_init+2,f
   799     07C4  0DFC               	rlf	??_UART_init+3,f
   800     07C5                     u340:
   801     07C5  3EFF               	addlw	-1
   802     07C6  1D03               	skipz
   803     07C7  2FC0               	goto	u345
   804     07C8  087C               	movf	??_UART_init+3,w
   805     07C9  00F3               	movwf	___aldiv@divisor+3
   806     07CA  087B               	movf	??_UART_init+2,w
   807     07CB  00F2               	movwf	___aldiv@divisor+2
   808     07CC  087A               	movf	??_UART_init+1,w
   809     07CD  00F1               	movwf	___aldiv@divisor+1
   810     07CE  0879               	movf	??_UART_init,w
   811     07CF  00F0               	movwf	___aldiv@divisor
   812     07D0  3000               	movlw	0
   813     07D1  00F7               	movwf	___aldiv@dividend+3
   814     07D2  303D               	movlw	61
   815     07D3  00F6               	movwf	___aldiv@dividend+2
   816     07D4  3009               	movlw	9
   817     07D5  00F5               	movwf	___aldiv@dividend+1
   818     07D6  3000               	movlw	0
   819     07D7  00F4               	movwf	___aldiv@dividend
   820     07D8  120A  118A  2693  120A  118A  	fcall	___aldiv
   821     07DD  0870               	movf	?___aldiv,w
   822     07DE  3EFF               	addlw	255
   823     07DF  1683               	bsf	3,5	;RP0=1, select bank1
   824     07E0  1303               	bcf	3,6	;RP1=0, select bank1
   825     07E1  0099               	movwf	25	;volatile
   826     07E2                     l754:
   827                           
   828                           ;./uart.h: 25:         TXSTAbits.BRGH = 1;
   829     07E2  1518               	bsf	24,2	;volatile
   830     07E3                     l756:
   831                           
   832                           ;./uart.h: 26:         BAUDCTLbits.BRG16 = 1;
   833     07E3  1683               	bsf	3,5	;RP0=1, select bank3
   834     07E4  1703               	bsf	3,6	;RP1=1, select bank3
   835     07E5  1587               	bsf	7,3	;volatile
   836     07E6                     l758:
   837                           
   838                           ;./uart.h: 27:         TXSTAbits.SYNC = 1;
   839     07E6  1683               	bsf	3,5	;RP0=1, select bank1
   840     07E7  1303               	bcf	3,6	;RP1=0, select bank1
   841     07E8  1618               	bsf	24,4	;volatile
   842     07E9                     l760:
   843                           
   844                           ;./uart.h: 31:     RCSTAbits.SPEN = 1;
   845     07E9  1283               	bcf	3,5	;RP0=0, select bank0
   846     07EA  1303               	bcf	3,6	;RP1=0, select bank0
   847     07EB  1798               	bsf	24,7	;volatile
   848     07EC                     l762:
   849                           
   850                           ;./uart.h: 32:     RCSTAbits.CREN = 1;
   851     07EC  1618               	bsf	24,4	;volatile
   852     07ED                     l29:
   853     07ED  0008               	return
   854     07EE                     __end_of_UART_init:
   855                           
   856                           	psect	text3
   857     0693                     __ptext3:	
   858 ;; *************** function ___aldiv *****************
   859 ;; Defined at:
   860 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  divisor         4    0[COMMON] long 
   863 ;;  dividend        4    4[COMMON] long 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  quotient        4    2[BANK0 ] long 
   866 ;;  sign            1    1[BANK0 ] unsigned char 
   867 ;;  counter         1    0[BANK0 ] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  4    0[COMMON] long 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, btemp+1
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         8       0       0       0       0
   878 ;;      Locals:         0       6       0       0       0
   879 ;;      Temps:          1       0       0       0       0
   880 ;;      Totals:         9       6       0       0       0
   881 ;;Total ram usage:       15 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_UART_init
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890     0693                     ___aldiv:	
   891                           ;psect for function ___aldiv
   892                           
   893     0693                     l696:	
   894                           ;incstack = 0
   895                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
   896                           
   897     0693  1283               	bcf	3,5	;RP0=0, select bank0
   898     0694  1303               	bcf	3,6	;RP1=0, select bank0
   899     0695  01A1               	clrf	___aldiv@sign
   900     0696                     l698:
   901     0696  1FF3               	btfss	___aldiv@divisor+3,7
   902     0697  2E99               	goto	u201
   903     0698  2E9A               	goto	u200
   904     0699                     u201:
   905     0699  2EA7               	goto	l205
   906     069A                     u200:
   907     069A                     l700:
   908     069A  09F0               	comf	___aldiv@divisor,f
   909     069B  09F1               	comf	___aldiv@divisor+1,f
   910     069C  09F2               	comf	___aldiv@divisor+2,f
   911     069D  09F3               	comf	___aldiv@divisor+3,f
   912     069E  0AF0               	incf	___aldiv@divisor,f
   913     069F  1903               	skipnz
   914     06A0  0AF1               	incf	___aldiv@divisor+1,f
   915     06A1  1903               	skipnz
   916     06A2  0AF2               	incf	___aldiv@divisor+2,f
   917     06A3  1903               	skipnz
   918     06A4  0AF3               	incf	___aldiv@divisor+3,f
   919     06A5  01A1               	clrf	___aldiv@sign
   920     06A6  0AA1               	incf	___aldiv@sign,f
   921     06A7                     l205:
   922     06A7  1FF7               	btfss	___aldiv@dividend+3,7
   923     06A8  2EAA               	goto	u211
   924     06A9  2EAB               	goto	u210
   925     06AA                     u211:
   926     06AA  2EBA               	goto	l706
   927     06AB                     u210:
   928     06AB                     l702:
   929     06AB  09F4               	comf	___aldiv@dividend,f
   930     06AC  09F5               	comf	___aldiv@dividend+1,f
   931     06AD  09F6               	comf	___aldiv@dividend+2,f
   932     06AE  09F7               	comf	___aldiv@dividend+3,f
   933     06AF  0AF4               	incf	___aldiv@dividend,f
   934     06B0  1903               	skipnz
   935     06B1  0AF5               	incf	___aldiv@dividend+1,f
   936     06B2  1903               	skipnz
   937     06B3  0AF6               	incf	___aldiv@dividend+2,f
   938     06B4  1903               	skipnz
   939     06B5  0AF7               	incf	___aldiv@dividend+3,f
   940     06B6                     l704:
   941     06B6  3001               	movlw	1
   942     06B7  00FF               	movwf	btemp+1
   943     06B8  087F               	movf	btemp+1,w
   944     06B9  06A1               	xorwf	___aldiv@sign,f
   945     06BA                     l706:
   946     06BA  3000               	movlw	0
   947     06BB  00A5               	movwf	___aldiv@quotient+3
   948     06BC  3000               	movlw	0
   949     06BD  00A4               	movwf	___aldiv@quotient+2
   950     06BE  3000               	movlw	0
   951     06BF  00A3               	movwf	___aldiv@quotient+1
   952     06C0  3000               	movlw	0
   953     06C1  00A2               	movwf	___aldiv@quotient
   954     06C2                     l708:
   955     06C2  0873               	movf	___aldiv@divisor+3,w
   956     06C3  0472               	iorwf	___aldiv@divisor+2,w
   957     06C4  0471               	iorwf	___aldiv@divisor+1,w
   958     06C5  0470               	iorwf	___aldiv@divisor,w
   959     06C6  1903               	skipnz
   960     06C7  2EC9               	goto	u221
   961     06C8  2ECA               	goto	u220
   962     06C9                     u221:
   963     06C9  2F17               	goto	l730
   964     06CA                     u220:
   965     06CA                     l710:
   966     06CA  01A0               	clrf	___aldiv@counter
   967     06CB  0AA0               	incf	___aldiv@counter,f
   968     06CC  2EDA               	goto	l716
   969     06CD                     l712:
   970     06CD  3001               	movlw	1
   971     06CE  00F8               	movwf	??___aldiv
   972     06CF                     u235:
   973     06CF  1003               	clrc
   974     06D0  0DF0               	rlf	___aldiv@divisor,f
   975     06D1  0DF1               	rlf	___aldiv@divisor+1,f
   976     06D2  0DF2               	rlf	___aldiv@divisor+2,f
   977     06D3  0DF3               	rlf	___aldiv@divisor+3,f
   978     06D4  0BF8               	decfsz	??___aldiv,f
   979     06D5  2ECF               	goto	u235
   980     06D6                     l714:
   981     06D6  3001               	movlw	1
   982     06D7  00FF               	movwf	btemp+1
   983     06D8  087F               	movf	btemp+1,w
   984     06D9  07A0               	addwf	___aldiv@counter,f
   985     06DA                     l716:
   986     06DA  1FF3               	btfss	___aldiv@divisor+3,7
   987     06DB  2EDD               	goto	u241
   988     06DC  2EDE               	goto	u240
   989     06DD                     u241:
   990     06DD  2ECD               	goto	l712
   991     06DE                     u240:
   992     06DE                     l718:
   993     06DE  3001               	movlw	1
   994     06DF  00F8               	movwf	??___aldiv
   995     06E0                     u255:
   996     06E0  1003               	clrc
   997     06E1  0DA2               	rlf	___aldiv@quotient,f
   998     06E2  0DA3               	rlf	___aldiv@quotient+1,f
   999     06E3  0DA4               	rlf	___aldiv@quotient+2,f
  1000     06E4  0DA5               	rlf	___aldiv@quotient+3,f
  1001     06E5  0BF8               	decfsz	??___aldiv,f
  1002     06E6  2EE0               	goto	u255
  1003     06E7                     l720:
  1004     06E7  0873               	movf	___aldiv@divisor+3,w
  1005     06E8  0277               	subwf	___aldiv@dividend+3,w
  1006     06E9  1D03               	skipz
  1007     06EA  2EF5               	goto	u265
  1008     06EB  0872               	movf	___aldiv@divisor+2,w
  1009     06EC  0276               	subwf	___aldiv@dividend+2,w
  1010     06ED  1D03               	skipz
  1011     06EE  2EF5               	goto	u265
  1012     06EF  0871               	movf	___aldiv@divisor+1,w
  1013     06F0  0275               	subwf	___aldiv@dividend+1,w
  1014     06F1  1D03               	skipz
  1015     06F2  2EF5               	goto	u265
  1016     06F3  0870               	movf	___aldiv@divisor,w
  1017     06F4  0274               	subwf	___aldiv@dividend,w
  1018     06F5                     u265:
  1019     06F5  1C03               	skipc
  1020     06F6  2EF8               	goto	u261
  1021     06F7  2EF9               	goto	u260
  1022     06F8                     u261:
  1023     06F8  2F08               	goto	l726
  1024     06F9                     u260:
  1025     06F9                     l722:
  1026     06F9  0870               	movf	___aldiv@divisor,w
  1027     06FA  02F4               	subwf	___aldiv@dividend,f
  1028     06FB  0871               	movf	___aldiv@divisor+1,w
  1029     06FC  1C03               	skipc
  1030     06FD  0F71               	incfsz	___aldiv@divisor+1,w
  1031     06FE  02F5               	subwf	___aldiv@dividend+1,f
  1032     06FF  0872               	movf	___aldiv@divisor+2,w
  1033     0700  1C03               	skipc
  1034     0701  0F72               	incfsz	___aldiv@divisor+2,w
  1035     0702  02F6               	subwf	___aldiv@dividend+2,f
  1036     0703  0873               	movf	___aldiv@divisor+3,w
  1037     0704  1C03               	skipc
  1038     0705  0F73               	incfsz	___aldiv@divisor+3,w
  1039     0706  02F7               	subwf	___aldiv@dividend+3,f
  1040     0707                     l724:
  1041     0707  1422               	bsf	___aldiv@quotient,0
  1042     0708                     l726:
  1043     0708  3001               	movlw	1
  1044     0709                     u275:
  1045     0709  1003               	clrc
  1046     070A  0CF3               	rrf	___aldiv@divisor+3,f
  1047     070B  0CF2               	rrf	___aldiv@divisor+2,f
  1048     070C  0CF1               	rrf	___aldiv@divisor+1,f
  1049     070D  0CF0               	rrf	___aldiv@divisor,f
  1050     070E  3EFF               	addlw	-1
  1051     070F  1D03               	skipz
  1052     0710  2F09               	goto	u275
  1053     0711                     l728:
  1054     0711  3001               	movlw	1
  1055     0712  02A0               	subwf	___aldiv@counter,f
  1056     0713  1D03               	btfss	3,2
  1057     0714  2F16               	goto	u281
  1058     0715  2F17               	goto	u280
  1059     0716                     u281:
  1060     0716  2EDE               	goto	l718
  1061     0717                     u280:
  1062     0717                     l730:
  1063     0717  0821               	movf	___aldiv@sign,w
  1064     0718  1903               	btfsc	3,2
  1065     0719  2F1B               	goto	u291
  1066     071A  2F1C               	goto	u290
  1067     071B                     u291:
  1068     071B  2F27               	goto	l734
  1069     071C                     u290:
  1070     071C                     l732:
  1071     071C  09A2               	comf	___aldiv@quotient,f
  1072     071D  09A3               	comf	___aldiv@quotient+1,f
  1073     071E  09A4               	comf	___aldiv@quotient+2,f
  1074     071F  09A5               	comf	___aldiv@quotient+3,f
  1075     0720  0AA2               	incf	___aldiv@quotient,f
  1076     0721  1903               	skipnz
  1077     0722  0AA3               	incf	___aldiv@quotient+1,f
  1078     0723  1903               	skipnz
  1079     0724  0AA4               	incf	___aldiv@quotient+2,f
  1080     0725  1903               	skipnz
  1081     0726  0AA5               	incf	___aldiv@quotient+3,f
  1082     0727                     l734:
  1083     0727  0825               	movf	___aldiv@quotient+3,w
  1084     0728  00F3               	movwf	?___aldiv+3
  1085     0729  0824               	movf	___aldiv@quotient+2,w
  1086     072A  00F2               	movwf	?___aldiv+2
  1087     072B  0823               	movf	___aldiv@quotient+1,w
  1088     072C  00F1               	movwf	?___aldiv+1
  1089     072D  0822               	movf	___aldiv@quotient,w
  1090     072E  00F0               	movwf	?___aldiv
  1091     072F                     l215:
  1092     072F  0008               	return
  1093     0730                     __end_of___aldiv:
  1094     007E                     btemp	set	126	;btemp
  1095     007E                     wtemp0	set	126
  1096                           
  1097                           	psect	config
  1098                           
  1099                           ;Config register CONFIG1 @ 0x2007
  1100                           ;	Oscillator Selection bits
  1101                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1102                           ;	Watchdog Timer Enable bit
  1103                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1104                           ;	Power-up Timer Enable bit
  1105                           ;	PWRTE = OFF, PWRT disabled
  1106                           ;	RE3/MCLR pin function select bit
  1107                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1108                           ;	Code Protection bit
  1109                           ;	CP = OFF, Program memory code protection is disabled
  1110                           ;	Data Code Protection bit
  1111                           ;	CPD = OFF, Data memory code protection is disabled
  1112                           ;	Brown Out Reset Selection bits
  1113                           ;	BOREN = OFF, BOR disabled
  1114                           ;	Internal External Switchover bit
  1115                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1116                           ;	Fail-Safe Clock Monitor Enabled bit
  1117                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1118                           ;	Low Voltage Programming Enable bit
  1119                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1120                           ;	In-Circuit Debugger Mode bit
  1121                           ;	DEBUG = 0x1, unprogrammed default
  1122     2007                     	org	8199
  1123     2007  20D2               	dw	8402
  1124                           
  1125                           ;Config register CONFIG2 @ 0x2008
  1126                           ;	Brown-out Reset Selection bit
  1127                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1128                           ;	Flash Program Memory Self Write Enable bits
  1129                           ;	WRT = OFF, Write protection off
  1130     2008                     	org	8200
  1131     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     27      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_init
    _UART_init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_init
    _UART_init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    1058
                                              8 BANK0     19    19      0
                          _UART_init
                         _UART_write
 ---------------------------------------------------------------------------------
 (1) _UART_write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            6     4      2     942
                                              9 COMMON     4     4      0
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     756
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _UART_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jun 08 17:25:07 2024

                      pc 0002                       l32 0609                       l34 060F  
                     l35 0612                       l29 07ED                       fsr 0004  
                    l205 06A7                      l215 072F                      l700 069A  
                    l710 06CA                      l702 06AB                      l720 06E7  
                    l712 06CD                      l704 06B6                      l722 06F9  
                    l714 06D6                      l730 0717                      l706 06BA  
                    l732 071C                      l724 0707                      l716 06DA  
                    l708 06C2                      l740 0736                      l734 0727  
                    l726 0708                      l718 06DE                      l750 07B2  
                    l742 0745                      l728 0711                      l752 07B4  
                    l760 07E9                      l744 0773                      l762 07EC  
                    l754 07E2                      l746 0775                      l738 0730  
                    l770 0636                      l756 07E3                      l748 0784  
                    l764 0609                      l780 0664                      l772 063F  
                    l758 07E6                      l766 0610                      l782 066C  
                    l774 063F                      l696 0693                      l784 0675  
                    l776 0656                      l768 0633                      l698 0696  
                    l786 0681                      l778 065B                      u200 069A  
                    u201 0699                      u210 06AB                      u211 06AA  
                    u220 06CA                      u300 0745                      u221 06C9  
                    u301 0744                      u310 0756                      u240 06DE  
                    u320 0784                      u241 06DD                      u321 0783  
                    u305 0741                      u330 0795                      u235 06CF  
                    u315 0751                      u260 06F9                      u340 07C5  
                    u261 06F8                      u325 0780                      u350 060F  
                    u255 06E0                      u335 0790                      u351 060E  
                    u280 0717                      u360 0649                      u281 0716  
                    u265 06F5                      u345 07C0                      u290 071C  
                    u370 0675                      u291 071B                      u275 0709  
                    u371 0674                      u387 0689                      fsr0 0004  
                    indf 0000                     _RCIF 0065                     _TXIF 0064  
                   _main 0633                     btemp 007E                     start 0000  
        __end_of___aldiv 0730                    ?_main 0070                    _RCREG 001A  
                  _SPBRG 0099                    _PORTC 0007                    _TXREG 0019  
            ?_UART_write 0070                    main@i 0039                    main@t 002C  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 0693                   ??_main 0028  
              ??___aldiv 0078        __end_of_UART_init 07EE  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0613               __pmaintext 0633  
           ??_UART_write 0070                  ___aldiv 0693       __end_of_UART_write 0613  
                __ptext1 0608                  __ptext2 0730                  __ptext3 0693  
       ___aldiv@dividend 0074     end_of_initialization 07FC                _RCSTAbits 0018  
       ___aldiv@quotient 0022                _UART_init 0730                _TRISCbits 0087  
              _TXSTAbits 0098              _BAUDCTLbits 0187               ?_UART_init 0026  
    start_initialization 07EE               init_fetch0 0620              __pdataBANK0 003B  
              ___latbits 0002            __pcstackBANK0 0020                 ?___aldiv 0070  
            ??_UART_init 0079          ___aldiv@divisor 0070          ___aldiv@counter 0020  
              main@F1427 003B            UART_init@baud 0026                 init_ram0 0624  
           UART_write@ch 0070             ___aldiv@sign 0021               _UART_write 0608  
