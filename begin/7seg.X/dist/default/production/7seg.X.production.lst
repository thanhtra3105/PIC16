

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jun 08 15:08:24 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173     06DF                     __pidataBANK0:
   174                           
   175                           ;initializer for _number_7seg
   176     06DF  34C0               	retlw	192
   177     06E0  34F9               	retlw	249
   178     06E1  34A4               	retlw	164
   179     06E2  34B0               	retlw	176
   180     06E3  3499               	retlw	153
   181     06E4  3492               	retlw	146
   182     06E5  3482               	retlw	130
   183     06E6  34F8               	retlw	248
   184     06E7  3480               	retlw	128
   185     06E8  3490               	retlw	144
   186     0007                     _PORTCbits	set	7
   187     0006                     _PORTB	set	6
   188     0087                     _TRISC	set	135
   189     0086                     _TRISB	set	134
   190                           
   191                           	psect	cinit
   192     07EE                     start_initialization:	
   193                           ; #config settings
   194                           
   195     07EE                     __initialization:
   196                           
   197                           ; Initialize objects allocated to BANK0
   198     07EE  1383               	bcf	3,7	;select IRP bank0
   199     07EF  302A               	movlw	low (__pdataBANK0+10)
   200     07F0  00FD               	movwf	btemp+-1
   201     07F1  3006               	movlw	high __pidataBANK0
   202     07F2  00FE               	movwf	btemp
   203     07F3  30DF               	movlw	low __pidataBANK0
   204     07F4  00FF               	movwf	btemp+1
   205     07F5  3020               	movlw	low __pdataBANK0
   206     07F6  0084               	movwf	4
   207     07F7  120A  118A  26ED  120A  118A  	fcall	init_ram0
   208     07FC                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211     07FC                     __end_of__initialization:
   212     07FC  0183               	clrf	3
   213     07FD  120A  118A  2EFC   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	dataBANK0
   216     0020                     __pdataBANK0:
   217     0020                     _number_7seg:
   218     0020                     	ds	10
   219                           
   220                           	psect	inittext
   221     06E9                     init_fetch0:	
   222                           ;	Called with low address in FSR and high address in W
   223                           
   224     06E9  087E               	movf	btemp,w
   225     06EA  008A               	movwf	10
   226     06EB  087F               	movf	btemp+1,w
   227     06EC  0082               	movwf	2
   228     06ED                     init_ram0:	
   229                           ;Called with:
   230                           ;	high address of idata address in btemp 
   231                           ;	low address of idata address in btemp+1 
   232                           ;	low address of data in FSR
   233                           ;	high address + 1 of data in btemp-1
   234                           
   235     06ED  120A  118A  26E9  120A  118A  	fcall	init_fetch0
   236     06F2  0080               	movwf	0
   237     06F3  0A84               	incf	4,f
   238     06F4  0804               	movf	4,w
   239     06F5  067D               	xorwf	btemp+-1,w
   240     06F6  1903               	btfsc	3,2
   241     06F7  3400               	retlw	0
   242     06F8  0AFF               	incf	btemp+1,f
   243     06F9  1903               	btfsc	3,2
   244     06FA  0AFE               	incf	btemp,f
   245     06FB  2EED               	goto	init_ram0
   246                           
   247                           	psect	cstackCOMMON
   248     0070                     __pcstackCOMMON:
   249     0070                     ?_main:
   250     0070                     ?___lwdiv:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ?___lwmod:	
   254                           ; 2 bytes @ 0x0
   255                           
   256     0070                     ___lwdiv@divisor:	
   257                           ; 2 bytes @ 0x0
   258                           
   259     0070                     ___lwmod@divisor:	
   260                           ; 2 bytes @ 0x0
   261                           
   262                           
   263                           ; 2 bytes @ 0x0
   264     0070                     	ds	2
   265     0072                     ___lwdiv@dividend:
   266     0072                     ___lwmod@dividend:	
   267                           ; 2 bytes @ 0x2
   268                           
   269                           
   270                           ; 2 bytes @ 0x2
   271     0072                     	ds	2
   272     0074                     ??___lwdiv:
   273     0074                     ??___lwmod:	
   274                           ; 1 bytes @ 0x4
   275                           
   276     0074                     ___lwmod@counter:	
   277                           ; 1 bytes @ 0x4
   278                           
   279     0074                     ___lwdiv@quotient:	
   280                           ; 1 bytes @ 0x4
   281                           
   282                           
   283                           ; 2 bytes @ 0x4
   284     0074                     	ds	2
   285     0076                     ___lwdiv@counter:
   286                           
   287                           ; 1 bytes @ 0x6
   288     0076                     	ds	1
   289     0077                     ?_set_number:
   290     0077                     set_number@num:	
   291                           ; 1 bytes @ 0x7
   292                           
   293                           
   294                           ; 2 bytes @ 0x7
   295     0077                     	ds	2
   296     0079                     ??_set_number:
   297                           
   298                           ; 1 bytes @ 0x9
   299     0079                     	ds	1
   300     007A                     set_number@digit:
   301                           
   302                           ; 2 bytes @ 0xA
   303     007A                     	ds	2
   304     007C                     main@i:
   305                           
   306                           ; 2 bytes @ 0xC
   307     007C                     	ds	2
   308                           
   309                           	psect	cstackBANK0
   310     002A                     __pcstackBANK0:
   311     002A                     ??_main:
   312                           
   313                           ; 1 bytes @ 0x0
   314     002A                     	ds	3
   315                           
   316                           	psect	maintext
   317     06FC                     __pmaintext:	
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 180 in file "newmain.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;  i               2   12[COMMON] int 
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         2       0       0       0       0
   339 ;;      Temps:          0       3       0       0       0
   340 ;;      Totals:         2       3       0       0       0
   341 ;;Total ram usage:        5 bytes
   342 ;; Hardware stack levels required when called: 2
   343 ;; This function calls:
   344 ;;		_set_number
   345 ;; This function is called by:
   346 ;;		Startup code after reset
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350     06FC                     _main:	
   351                           ;psect for function _main
   352                           
   353     06FC                     l711:	
   354                           ;incstack = 0
   355                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   356                           
   357                           
   358                           ;newmain.c: 182:     TRISB = 0;
   359     06FC  1683               	bsf	3,5	;RP0=1, select bank1
   360     06FD  1303               	bcf	3,6	;RP1=0, select bank1
   361     06FE  0186               	clrf	6	;volatile
   362                           
   363                           ;newmain.c: 183:     TRISC = 0;
   364     06FF  0187               	clrf	7	;volatile
   365     0700                     l20:	
   366                           ;newmain.c: 184:     int i;;newmain.c: 185:     while(1)
   367                           
   368                           
   369                           ;newmain.c: 186:         for(i=0;i<100;i++)
   370     0700  01FC               	clrf	main@i
   371     0701  01FD               	clrf	main@i+1
   372     0702                     l717:
   373                           
   374                           ;newmain.c: 187:         {;newmain.c: 188:             set_number(i);
   375     0702  087D               	movf	main@i+1,w
   376     0703  00F8               	movwf	set_number@num+1
   377     0704  087C               	movf	main@i,w
   378     0705  00F7               	movwf	set_number@num
   379     0706  120A  118A  276A  120A  118A  	fcall	_set_number
   380     070B                     l719:
   381                           
   382                           ;newmain.c: 189:             _delay((unsigned long)((1000)*(1000000/4000.0)));
   383     070B  3002               	movlw	2
   384     070C  1283               	bcf	3,5	;RP0=0, select bank0
   385     070D  1303               	bcf	3,6	;RP1=0, select bank0
   386     070E  00AC               	movwf	??_main+2
   387     070F  3045               	movlw	69
   388     0710  00AB               	movwf	??_main+1
   389     0711  30A9               	movlw	169
   390     0712  00AA               	movwf	??_main
   391     0713                     u297:
   392     0713  0BAA               	decfsz	??_main,f
   393     0714  2F13               	goto	u297
   394     0715  0BAB               	decfsz	??_main+1,f
   395     0716  2F13               	goto	u297
   396     0717  0BAC               	decfsz	??_main+2,f
   397     0718  2F13               	goto	u297
   398     0719                     l721:
   399                           
   400                           ;newmain.c: 190:         }
   401     0719  3001               	movlw	1
   402     071A  07FC               	addwf	main@i,f
   403     071B  1803               	skipnc
   404     071C  0AFD               	incf	main@i+1,f
   405     071D  3000               	movlw	0
   406     071E  07FD               	addwf	main@i+1,f
   407     071F                     l723:
   408     071F  087D               	movf	main@i+1,w
   409     0720  3A80               	xorlw	128
   410     0721  00FF               	movwf	btemp+1
   411     0722  3080               	movlw	128
   412     0723  027F               	subwf	btemp+1,w
   413     0724  1D03               	skipz
   414     0725  2F28               	goto	u285
   415     0726  3064               	movlw	100
   416     0727  027C               	subwf	main@i,w
   417     0728                     u285:
   418     0728  1C03               	skipc
   419     0729  2F2B               	goto	u281
   420     072A  2F2C               	goto	u280
   421     072B                     u281:
   422     072B  2F02               	goto	l717
   423     072C                     u280:
   424     072C  2F00               	goto	l20
   425     072D  120A  118A  2800   	ljmp	start
   426     0730                     __end_of_main:
   427                           
   428                           	psect	text1
   429     076A                     __ptext1:	
   430 ;; *************** function _set_number *****************
   431 ;; Defined at:
   432 ;;		line 164 in file "newmain.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;  num             2    7[COMMON] unsigned int 
   435 ;; Auto vars:     Size  Location     Type
   436 ;;  digit           2   10[COMMON] int 
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   446 ;;      Params:         2       0       0       0       0
   447 ;;      Locals:         2       0       0       0       0
   448 ;;      Temps:          1       0       0       0       0
   449 ;;      Totals:         5       0       0       0       0
   450 ;;Total ram usage:        5 bytes
   451 ;; Hardware stack levels used: 1
   452 ;; Hardware stack levels required when called: 1
   453 ;; This function calls:
   454 ;;		___lwdiv
   455 ;;		___lwmod
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461     076A                     _set_number:	
   462                           ;psect for function _set_number
   463                           
   464     076A                     l695:	
   465                           ;incstack = 0
   466                           ; Regs used in _set_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   467                           
   468                           
   469                           ;newmain.c: 164: void set_number(unsigned int num);newmain.c: 165: {;newmain.c: 166:    
      +                           int digit = num/10;
   470     076A  300A               	movlw	10
   471     076B  00F0               	movwf	___lwdiv@divisor
   472     076C  3000               	movlw	0
   473     076D  00F1               	movwf	___lwdiv@divisor+1
   474     076E  0878               	movf	set_number@num+1,w
   475     076F  00F3               	movwf	___lwdiv@dividend+1
   476     0770  0877               	movf	set_number@num,w
   477     0771  00F2               	movwf	___lwdiv@dividend
   478     0772  120A  118A  27AA  120A  118A  	fcall	___lwdiv
   479     0777  0871               	movf	?___lwdiv+1,w
   480     0778  00FB               	movwf	set_number@digit+1
   481     0779  0870               	movf	?___lwdiv,w
   482     077A  00FA               	movwf	set_number@digit
   483     077B                     l697:
   484                           
   485                           ;newmain.c: 167:     PORTB = number_7seg[digit];
   486     077B  087A               	movf	set_number@digit,w
   487     077C  3E20               	addlw	(low (_number_7seg| 0))& (0+255)
   488     077D  0084               	movwf	4
   489     077E  1383               	bcf	3,7	;select IRP bank0
   490     077F  0800               	movf	0,w
   491     0780  1283               	bcf	3,5	;RP0=0, select bank0
   492     0781  1303               	bcf	3,6	;RP1=0, select bank0
   493     0782  0086               	movwf	6	;volatile
   494     0783                     l699:
   495                           
   496                           ;newmain.c: 168:     PORTCbits.RC0 = 1;
   497     0783  1407               	bsf	7,0	;volatile
   498     0784                     l701:
   499                           
   500                           ;newmain.c: 169:     _delay((unsigned long)((1)*(1000000/4000.0)));
   501     0784  3053               	movlw	83
   502     0785  00F9               	movwf	??_set_number
   503     0786                     u307:
   504     0786  0BF9               	decfsz	??_set_number,f
   505     0787  2F86               	goto	u307
   506     0788                     l703:
   507                           
   508                           ;newmain.c: 170:     PORTCbits.RC0 = 0;
   509     0788  1283               	bcf	3,5	;RP0=0, select bank0
   510     0789  1303               	bcf	3,6	;RP1=0, select bank0
   511     078A  1007               	bcf	7,0	;volatile
   512     078B                     l705:
   513                           
   514                           ;newmain.c: 172:     num = num%10;
   515     078B  300A               	movlw	10
   516     078C  00F0               	movwf	___lwmod@divisor
   517     078D  3000               	movlw	0
   518     078E  00F1               	movwf	___lwmod@divisor+1
   519     078F  0878               	movf	set_number@num+1,w
   520     0790  00F3               	movwf	___lwmod@dividend+1
   521     0791  0877               	movf	set_number@num,w
   522     0792  00F2               	movwf	___lwmod@dividend
   523     0793  120A  118A  2730  120A  118A  	fcall	___lwmod
   524     0798  0871               	movf	?___lwmod+1,w
   525     0799  00F8               	movwf	set_number@num+1
   526     079A  0870               	movf	?___lwmod,w
   527     079B  00F7               	movwf	set_number@num
   528     079C                     l707:
   529                           
   530                           ;newmain.c: 173:     PORTB = number_7seg[num];
   531     079C  0877               	movf	set_number@num,w
   532     079D  3E20               	addlw	(low (_number_7seg| 0))& (0+255)
   533     079E  0084               	movwf	4
   534     079F  1383               	bcf	3,7	;select IRP bank0
   535     07A0  0800               	movf	0,w
   536     07A1  1283               	bcf	3,5	;RP0=0, select bank0
   537     07A2  1303               	bcf	3,6	;RP1=0, select bank0
   538     07A3  0086               	movwf	6	;volatile
   539     07A4                     l709:
   540                           
   541                           ;newmain.c: 174:     PORTCbits.RC1 = 1;
   542     07A4  1487               	bsf	7,1	;volatile
   543                           
   544                           ;newmain.c: 175:     _delay((unsigned long)((1)*(1000000/4000.0)));
   545     07A5  3053               	movlw	83
   546     07A6  00F9               	movwf	??_set_number
   547     07A7                     u317:
   548     07A7  0BF9               	decfsz	??_set_number,f
   549     07A8  2FA7               	goto	u317
   550     07A9                     l15:
   551     07A9  0008               	return
   552     07AA                     __end_of_set_number:
   553                           
   554                           	psect	text2
   555     0730                     __ptext2:	
   556 ;; *************** function ___lwmod *****************
   557 ;; Defined at:
   558 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  divisor         2    0[COMMON] unsigned int 
   561 ;;  dividend        2    2[COMMON] unsigned int 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  counter         1    4[COMMON] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  2    0[COMMON] unsigned int 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0, btemp+1
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         4       0       0       0       0
   574 ;;      Locals:         1       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0
   576 ;;      Totals:         5       0       0       0       0
   577 ;;Total ram usage:        5 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_set_number
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586     0730                     ___lwmod:	
   587                           ;psect for function ___lwmod
   588                           
   589     0730                     l673:	
   590                           ;incstack = 0
   591                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   592                           
   593     0730  0870               	movf	___lwmod@divisor,w
   594     0731  0471               	iorwf	___lwmod@divisor+1,w
   595     0732  1903               	btfsc	3,2
   596     0733  2F35               	goto	u221
   597     0734  2F36               	goto	u220
   598     0735                     u221:
   599     0735  2F65               	goto	l691
   600     0736                     u220:
   601     0736                     l675:
   602     0736  01F4               	clrf	___lwmod@counter
   603     0737  0AF4               	incf	___lwmod@counter,f
   604     0738  2F44               	goto	l681
   605     0739                     l677:
   606     0739  3001               	movlw	1
   607     073A                     u235:
   608     073A  1003               	clrc
   609     073B  0DF0               	rlf	___lwmod@divisor,f
   610     073C  0DF1               	rlf	___lwmod@divisor+1,f
   611     073D  3EFF               	addlw	-1
   612     073E  1D03               	skipz
   613     073F  2F3A               	goto	u235
   614     0740                     l679:
   615     0740  3001               	movlw	1
   616     0741  00FF               	movwf	btemp+1
   617     0742  087F               	movf	btemp+1,w
   618     0743  07F4               	addwf	___lwmod@counter,f
   619     0744                     l681:
   620     0744  1FF1               	btfss	___lwmod@divisor+1,7
   621     0745  2F47               	goto	u241
   622     0746  2F48               	goto	u240
   623     0747                     u241:
   624     0747  2F39               	goto	l677
   625     0748                     u240:
   626     0748                     l683:
   627     0748  0871               	movf	___lwmod@divisor+1,w
   628     0749  0273               	subwf	___lwmod@dividend+1,w
   629     074A  1D03               	skipz
   630     074B  2F4E               	goto	u255
   631     074C  0870               	movf	___lwmod@divisor,w
   632     074D  0272               	subwf	___lwmod@dividend,w
   633     074E                     u255:
   634     074E  1C03               	skipc
   635     074F  2F51               	goto	u251
   636     0750  2F52               	goto	u250
   637     0751                     u251:
   638     0751  2F58               	goto	l687
   639     0752                     u250:
   640     0752                     l685:
   641     0752  0870               	movf	___lwmod@divisor,w
   642     0753  02F2               	subwf	___lwmod@dividend,f
   643     0754  0871               	movf	___lwmod@divisor+1,w
   644     0755  1C03               	skipc
   645     0756  03F3               	decf	___lwmod@dividend+1,f
   646     0757  02F3               	subwf	___lwmod@dividend+1,f
   647     0758                     l687:
   648     0758  3001               	movlw	1
   649     0759                     u265:
   650     0759  1003               	clrc
   651     075A  0CF1               	rrf	___lwmod@divisor+1,f
   652     075B  0CF0               	rrf	___lwmod@divisor,f
   653     075C  3EFF               	addlw	-1
   654     075D  1D03               	skipz
   655     075E  2F59               	goto	u265
   656     075F                     l689:
   657     075F  3001               	movlw	1
   658     0760  02F4               	subwf	___lwmod@counter,f
   659     0761  1D03               	btfss	3,2
   660     0762  2F64               	goto	u271
   661     0763  2F65               	goto	u270
   662     0764                     u271:
   663     0764  2F48               	goto	l683
   664     0765                     u270:
   665     0765                     l691:
   666     0765  0873               	movf	___lwmod@dividend+1,w
   667     0766  00F1               	movwf	?___lwmod+1
   668     0767  0872               	movf	___lwmod@dividend,w
   669     0768  00F0               	movwf	?___lwmod
   670     0769                     l401:
   671     0769  0008               	return
   672     076A                     __end_of___lwmod:
   673                           
   674                           	psect	text3
   675     07AA                     __ptext3:	
   676 ;; *************** function ___lwdiv *****************
   677 ;; Defined at:
   678 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  divisor         2    0[COMMON] unsigned int 
   681 ;;  dividend        2    2[COMMON] unsigned int 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  quotient        2    4[COMMON] unsigned int 
   684 ;;  counter         1    6[COMMON] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  2    0[COMMON] unsigned int 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, btemp+1
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         4       0       0       0       0
   695 ;;      Locals:         3       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0
   697 ;;      Totals:         7       0       0       0       0
   698 ;;Total ram usage:        7 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_set_number
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707     07AA                     ___lwdiv:	
   708                           ;psect for function ___lwdiv
   709                           
   710     07AA                     l647:	
   711                           ;incstack = 0
   712                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   713                           
   714     07AA  01F4               	clrf	___lwdiv@quotient
   715     07AB  01F5               	clrf	___lwdiv@quotient+1
   716     07AC                     l649:
   717     07AC  0870               	movf	___lwdiv@divisor,w
   718     07AD  0471               	iorwf	___lwdiv@divisor+1,w
   719     07AE  1903               	btfsc	3,2
   720     07AF  2FB1               	goto	u151
   721     07B0  2FB2               	goto	u150
   722     07B1                     u151:
   723     07B1  2FE9               	goto	l669
   724     07B2                     u150:
   725     07B2                     l651:
   726     07B2  01F6               	clrf	___lwdiv@counter
   727     07B3  0AF6               	incf	___lwdiv@counter,f
   728     07B4  2FC0               	goto	l657
   729     07B5                     l653:
   730     07B5  3001               	movlw	1
   731     07B6                     u165:
   732     07B6  1003               	clrc
   733     07B7  0DF0               	rlf	___lwdiv@divisor,f
   734     07B8  0DF1               	rlf	___lwdiv@divisor+1,f
   735     07B9  3EFF               	addlw	-1
   736     07BA  1D03               	skipz
   737     07BB  2FB6               	goto	u165
   738     07BC                     l655:
   739     07BC  3001               	movlw	1
   740     07BD  00FF               	movwf	btemp+1
   741     07BE  087F               	movf	btemp+1,w
   742     07BF  07F6               	addwf	___lwdiv@counter,f
   743     07C0                     l657:
   744     07C0  1FF1               	btfss	___lwdiv@divisor+1,7
   745     07C1  2FC3               	goto	u171
   746     07C2  2FC4               	goto	u170
   747     07C3                     u171:
   748     07C3  2FB5               	goto	l653
   749     07C4                     u170:
   750     07C4                     l659:
   751     07C4  3001               	movlw	1
   752     07C5                     u185:
   753     07C5  1003               	clrc
   754     07C6  0DF4               	rlf	___lwdiv@quotient,f
   755     07C7  0DF5               	rlf	___lwdiv@quotient+1,f
   756     07C8  3EFF               	addlw	-1
   757     07C9  1D03               	skipz
   758     07CA  2FC5               	goto	u185
   759     07CB  0871               	movf	___lwdiv@divisor+1,w
   760     07CC  0273               	subwf	___lwdiv@dividend+1,w
   761     07CD  1D03               	skipz
   762     07CE  2FD1               	goto	u195
   763     07CF  0870               	movf	___lwdiv@divisor,w
   764     07D0  0272               	subwf	___lwdiv@dividend,w
   765     07D1                     u195:
   766     07D1  1C03               	skipc
   767     07D2  2FD4               	goto	u191
   768     07D3  2FD5               	goto	u190
   769     07D4                     u191:
   770     07D4  2FDC               	goto	l665
   771     07D5                     u190:
   772     07D5                     l661:
   773     07D5  0870               	movf	___lwdiv@divisor,w
   774     07D6  02F2               	subwf	___lwdiv@dividend,f
   775     07D7  0871               	movf	___lwdiv@divisor+1,w
   776     07D8  1C03               	skipc
   777     07D9  03F3               	decf	___lwdiv@dividend+1,f
   778     07DA  02F3               	subwf	___lwdiv@dividend+1,f
   779     07DB                     l663:
   780     07DB  1474               	bsf	___lwdiv@quotient,0
   781     07DC                     l665:
   782     07DC  3001               	movlw	1
   783     07DD                     u205:
   784     07DD  1003               	clrc
   785     07DE  0CF1               	rrf	___lwdiv@divisor+1,f
   786     07DF  0CF0               	rrf	___lwdiv@divisor,f
   787     07E0  3EFF               	addlw	-1
   788     07E1  1D03               	skipz
   789     07E2  2FDD               	goto	u205
   790     07E3                     l667:
   791     07E3  3001               	movlw	1
   792     07E4  02F6               	subwf	___lwdiv@counter,f
   793     07E5  1D03               	btfss	3,2
   794     07E6  2FE8               	goto	u211
   795     07E7  2FE9               	goto	u210
   796     07E8                     u211:
   797     07E8  2FC4               	goto	l659
   798     07E9                     u210:
   799     07E9                     l669:
   800     07E9  0875               	movf	___lwdiv@quotient+1,w
   801     07EA  00F1               	movwf	?___lwdiv+1
   802     07EB  0874               	movf	___lwdiv@quotient,w
   803     07EC  00F0               	movwf	?___lwdiv
   804     07ED                     l391:
   805     07ED  0008               	return
   806     07EE                     __end_of___lwdiv:
   807     007E                     btemp	set	126	;btemp
   808     007E                     wtemp0	set	126
   809                           
   810                           	psect	config
   811                           
   812                           ;Config register CONFIG @ 0x2007
   813                           ;	Oscillator Selection bits
   814                           ;	FOSC = HS, HS oscillator
   815                           ;	Watchdog Timer Enable bit
   816                           ;	WDTE = OFF, WDT disabled
   817                           ;	Power-up Timer Enable bit
   818                           ;	PWRTE = OFF, PWRT disabled
   819                           ;	Brown-out Reset Enable bit
   820                           ;	BOREN = OFF, BOR disabled
   821                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   822                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   823                           ;	Data EEPROM Memory Code Protection bit
   824                           ;	CPD = OFF, Data EEPROM code protection off
   825                           ;	Flash Program Memory Write Enable bits
   826                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   827                           ;	In-Circuit Debugger Mode bit
   828                           ;	DEBUG = 0x1, unprogrammed default
   829                           ;	Flash Program Memory Code Protection bit
   830                           ;	CP = OFF, Code protection off
   831     2007                     	org	8199
   832     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_set_number
    _set_number->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     859
                                             12 COMMON     2     2      0
                                              0 BANK0      3     3      0
                         _set_number
 ---------------------------------------------------------------------------------
 (1) _set_number                                           5     3      2     791
                                              7 COMMON     5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _set_number
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       D       5       16.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1B      12        0.0%
ABS                  0      0      1B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jun 08 15:08:24 2024

                      pc 0002                       l20 0700                       l15 07A9  
                     fsr 0004                      l401 0769                      l701 0784  
                    l391 07ED                      l703 0788                      l711 06FC  
                    l705 078B                      l721 0719                      l651 07B2  
                    l707 079C                      l723 071F                      l661 07D5  
                    l653 07B5                      l709 07A4                      l717 0702  
                    l663 07DB                      l655 07BC                      l647 07AA  
                    l719 070B                      l665 07DC                      l657 07C0  
                    l649 07AC                      l681 0744                      l673 0730  
                    l667 07E3                      l659 07C4                      l683 0748  
                    l675 0736                      l691 0765                      l669 07E9  
                    l685 0752                      l677 0739                      l687 0758  
                    l679 0740                      l695 076A                      l689 075F  
                    l697 077B                      l699 0783                      u210 07E9  
                    u211 07E8                      u220 0736                      u205 07DD  
                    u221 0735                      u150 07B2                      u151 07B1  
                    u240 0748                      u241 0747                      u170 07C4  
                    u250 0752                      u171 07C3                      u251 0751  
                    u235 073A                      u307 0786                      u165 07B6  
                    u317 07A7                      u190 07D5                      u270 0765  
                    u191 07D4                      u271 0764                      u255 074E  
                    u280 072C                      u185 07C5                      u265 0759  
                    u281 072B                      u195 07D1                      u285 0728  
                    u297 0713                      fsr0 0004                      indf 0000  
                   _main 06FC                     btemp 007E                     start 0000  
                  ?_main 0070          __end_of___lwdiv 07EE          __end_of___lwmod 076A  
                  _PORTB 0006                    _TRISB 0086                    _TRISC 0087  
                  main@i 007C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 0730  
                 ??_main 002A                ??___lwdiv 0074                ??___lwmod 0074  
__end_of__initialization 07FC          set_number@digit 007A           __pcstackCOMMON 0070  
           __pidataBANK0 06DF               __pmaintext 06FC                  ___lwdiv 07AA  
                ___lwmod 0730                  __ptext1 076A                  __ptext2 0730  
                __ptext3 07AA     end_of_initialization 07FC               _set_number 076A  
              _PORTCbits 0007      start_initialization 07EE              ?_set_number 0077  
             init_fetch0 06E9              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 002A         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0070         ___lwdiv@quotient 0074            set_number@num 0077  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076             ??_set_number 0079  
               init_ram0 06ED       __end_of_set_number 07AA         ___lwmod@dividend 0072  
            _number_7seg 0020          ___lwmod@divisor 0070          ___lwmod@counter 0074  
