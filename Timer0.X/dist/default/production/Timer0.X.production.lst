

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 22:15:49 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0006                     _PORTB	set	6
   170     0006                     _PORTBbits	set	6
   171     0011                     _TMR2	set	17
   172     000E                     _TMR1L	set	14
   173     000F                     _TMR1H	set	15
   174     0010                     _T1CONbits	set	16
   175     0001                     _TMR0	set	1
   176     000B                     _INTCONbits	set	11
   177     005D                     _TMR0IE	set	93
   178     0090                     _T2CKPS0	set	144
   179     0091                     _T2CKPS1	set	145
   180     0092                     _TMR2ON	set	146
   181     0093                     _TOUTPS0	set	147
   182     0094                     _TOUTPS1	set	148
   183     0095                     _TOUTPS2	set	149
   184     0096                     _TOUTPS3	set	150
   185     0061                     _TMR2IF	set	97
   186     0080                     _TMR1ON	set	128
   187     0060                     _TMR1IF	set	96
   188     005E                     _PEIE	set	94
   189     005F                     _GIE	set	95
   190     0086                     _TRISB	set	134
   191     0081                     _OPTION_REGbits	set	129
   192     0461                     _TMR2IE	set	1121
   193     0460                     _TMR1IE	set	1120
   194                           
   195                           	psect	cinit
   196     000F                     start_initialization:	
   197                           ; #config settings
   198                           
   199     000F                     __initialization:
   200                           
   201                           ; Clear objects allocated to COMMON
   202     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   203     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   204     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   205     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   206     0013                     end_of_initialization:	
   207                           ;End of C runtime variable initialization code
   208                           
   209     0013                     __end_of__initialization:
   210     0013  0183               	clrf	3
   211     0014  120A  118A  2871   	ljmp	_main	;jump to C main() function
   212                           
   213                           	psect	bssCOMMON
   214     0070                     __pbssCOMMON:
   215     0070                     _count2:
   216     0070                     	ds	2
   217     0072                     _count:
   218     0072                     	ds	2
   219                           
   220                           	psect	cstackCOMMON
   221     0074                     __pcstackCOMMON:
   222     0074                     ?_Timer2_cfg:
   223     0074                     ?_IRS:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0074                     ??_IRS:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0074                     ?_main:	
   230                           ; 1 bytes @ 0x0
   231                           
   232                           
   233                           ; 1 bytes @ 0x0
   234     0074                     	ds	2
   235     0076                     ??_Timer2_cfg:
   236     0076                     ?_delay_ms_TMR2:	
   237                           ; 1 bytes @ 0x2
   238                           
   239     0076                     delay_ms_TMR2@time:	
   240                           ; 1 bytes @ 0x2
   241                           
   242                           
   243                           ; 2 bytes @ 0x2
   244     0076                     	ds	2
   245     0078                     ??_delay_ms_TMR2:
   246     0078                     ??_main:	
   247                           ; 1 bytes @ 0x4
   248                           
   249                           
   250                           	psect	maintext
   251     0071                     __pmaintext:	
   252                           ; 1 bytes @ 0x4
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 126 in file "newmain.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0, pclath, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : B00/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   272 ;;      Params:         0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels required when called: 2
   278 ;; This function calls:
   279 ;;		_Timer2_cfg
   280 ;;		_delay_ms_TMR2
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286     0071                     _main:	
   287                           ;psect for function _main
   288                           
   289     0071                     l727:	
   290                           ;incstack = 0
   291                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   292                           
   293                           
   294                           ;newmain.c: 127:     TRISB = 0;
   295     0071  1683               	bsf	3,5	;RP0=1, select bank1
   296     0072  1303               	bcf	3,6	;RP1=0, select bank1
   297     0073  0186               	clrf	6	;volatile
   298                           
   299                           ;newmain.c: 128:     PORTB = 0;
   300     0074  1283               	bcf	3,5	;RP0=0, select bank0
   301     0075  1303               	bcf	3,6	;RP1=0, select bank0
   302     0076  0186               	clrf	6	;volatile
   303     0077                     l729:
   304                           
   305                           ;newmain.c: 131:     Timer2_cfg();
   306     0077  120A  118A  20A5  120A  118A  	fcall	_Timer2_cfg
   307     007C                     l731:
   308                           
   309                           ;newmain.c: 133:         delay_ms_TMR2(1);
   310     007C  3001               	movlw	1
   311     007D  00F6               	movwf	delay_ms_TMR2@time
   312     007E  3000               	movlw	0
   313     007F  00F7               	movwf	delay_ms_TMR2@time+1
   314     0080  120A  118A  208C  120A  118A  	fcall	_delay_ms_TMR2
   315     0085                     l733:
   316                           
   317                           ;newmain.c: 134:         PORTB = ~PORTB;
   318     0085  1283               	bcf	3,5	;RP0=0, select bank0
   319     0086  1303               	bcf	3,6	;RP1=0, select bank0
   320     0087  0986               	comf	6,f	;volatile
   321     0088  287C               	goto	l731
   322     0089  120A  118A  280C   	ljmp	start
   323     008C                     __end_of_main:
   324                           
   325                           	psect	text1
   326     008C                     __ptext1:	
   327 ;; *************** function _delay_ms_TMR2 *****************
   328 ;; Defined at:
   329 ;;		line 92 in file "newmain.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;  time            2    2[COMMON] int 
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   343 ;;      Params:         2       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0
   346 ;;      Totals:         2       0       0       0       0
   347 ;;Total ram usage:        2 bytes
   348 ;; Hardware stack levels used: 1
   349 ;; Hardware stack levels required when called: 1
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357     008C                     _delay_ms_TMR2:	
   358                           ;psect for function _delay_ms_TMR2
   359                           
   360     008C                     l719:	
   361                           ;incstack = 0
   362                           ; Regs used in _delay_ms_TMR2: [wreg+status,2+status,0]
   363                           
   364                           
   365                           ;newmain.c: 93:     while (time--) {
   366     008C  2896               	goto	l725
   367     008D                     l721:
   368                           
   369                           ;newmain.c: 94:         TMR2 = 6;
   370     008D  3006               	movlw	6
   371     008E  1283               	bcf	3,5	;RP0=0, select bank0
   372     008F  1303               	bcf	3,6	;RP1=0, select bank0
   373     0090  0091               	movwf	17	;volatile
   374     0091                     l723:
   375                           
   376                           ;newmain.c: 95:         TMR2IF = 0;
   377     0091  108C               	bcf	12,1	;volatile
   378     0092                     l86:	
   379                           ;newmain.c: 96:         while (!TMR2IF);
   380                           
   381     0092  1C8C               	btfss	12,1	;volatile
   382     0093  2895               	goto	u171
   383     0094  2896               	goto	u170
   384     0095                     u171:
   385     0095  2892               	goto	l86
   386     0096                     u170:
   387     0096                     l725:
   388                           
   389                           ;newmain.c: 93:     while (time--) {
   390     0096  30FF               	movlw	255
   391     0097  07F6               	addwf	delay_ms_TMR2@time,f
   392     0098  1803               	skipnc
   393     0099  0AF7               	incf	delay_ms_TMR2@time+1,f
   394     009A  30FF               	movlw	255
   395     009B  07F7               	addwf	delay_ms_TMR2@time+1,f
   396     009C  0A76               	incf	delay_ms_TMR2@time,w
   397     009D  1D03               	skipz
   398     009E  28A3               	goto	u181
   399     009F  0A77               	incf	delay_ms_TMR2@time+1,w
   400     00A0  1D03               	btfss	3,2
   401     00A1  28A3               	goto	u181
   402     00A2  28A4               	goto	u180
   403     00A3                     u181:
   404     00A3  288D               	goto	l721
   405     00A4                     u180:
   406     00A4                     l90:
   407     00A4  0008               	return
   408     00A5                     __end_of_delay_ms_TMR2:
   409                           
   410                           	psect	text2
   411     00A5                     __ptext2:	
   412 ;; *************** function _Timer2_cfg *****************
   413 ;; Defined at:
   414 ;;		line 57 in file "newmain.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		None
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   428 ;;      Params:         0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0
   430 ;;      Temps:          0       0       0       0       0
   431 ;;      Totals:         0       0       0       0       0
   432 ;;Total ram usage:        0 bytes
   433 ;; Hardware stack levels used: 1
   434 ;; Hardware stack levels required when called: 1
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_main
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442     00A5                     _Timer2_cfg:	
   443                           ;psect for function _Timer2_cfg
   444                           
   445     00A5                     l651:	
   446                           ;incstack = 0
   447                           ; Regs used in _Timer2_cfg: []
   448                           
   449                           
   450                           ;newmain.c: 59:     GIE = 0;
   451     00A5  138B               	bcf	11,7	;volatile
   452                           
   453                           ;newmain.c: 61:     TMR2IE = 0;
   454     00A6  1683               	bsf	3,5	;RP0=1, select bank1
   455     00A7  1303               	bcf	3,6	;RP1=0, select bank1
   456     00A8  108C               	bcf	12,1	;volatile
   457                           
   458                           ;newmain.c: 62:     TMR2IF = 0;
   459     00A9  1283               	bcf	3,5	;RP0=0, select bank0
   460     00AA  1303               	bcf	3,6	;RP1=0, select bank0
   461     00AB  108C               	bcf	12,1	;volatile
   462                           
   463                           ;newmain.c: 64:     TOUTPS3 = 0;
   464     00AC  1312               	bcf	18,6	;volatile
   465                           
   466                           ;newmain.c: 65:     TOUTPS2 = 0;
   467     00AD  1292               	bcf	18,5	;volatile
   468                           
   469                           ;newmain.c: 66:     TOUTPS1 = 0;
   470     00AE  1212               	bcf	18,4	;volatile
   471                           
   472                           ;newmain.c: 67:     TOUTPS0 = 0;
   473     00AF  1192               	bcf	18,3	;volatile
   474                           
   475                           ;newmain.c: 68:     TMR2ON = 1;
   476     00B0  1512               	bsf	18,2	;volatile
   477                           
   478                           ;newmain.c: 69:     T2CKPS1 = 0;
   479     00B1  1092               	bcf	18,1	;volatile
   480                           
   481                           ;newmain.c: 70:     T2CKPS0 = 1;
   482     00B2  1412               	bsf	18,0	;volatile
   483     00B3                     l63:
   484     00B3  0008               	return
   485     00B4                     __end_of_Timer2_cfg:
   486                           
   487                           	psect	text3
   488     0017                     __ptext3:	
   489 ;; *************** function _IRS *****************
   490 ;; Defined at:
   491 ;;		line 100 in file "newmain.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          2       0       0       0       0
   508 ;;      Totals:         2       0       0       0       0
   509 ;;Total ram usage:        2 bytes
   510 ;; Hardware stack levels used: 1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		Interrupt level 1
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518     0017                     _IRS:	
   519                           ;psect for function _IRS
   520                           
   521     0017                     i1l683:
   522                           
   523                           ;newmain.c: 102:     if ((INTCONbits.TMR0IF == 1) && (INTCONbits.TMR0IE == 1)) {
   524     0017  1D0B               	btfss	11,2	;volatile
   525     0018  281A               	goto	u7_21
   526     0019  281B               	goto	u7_20
   527     001A                     u7_21:
   528     001A  282A               	goto	i1l691
   529     001B                     u7_20:
   530     001B                     i1l685:
   531     001B  1E8B               	btfss	11,5	;volatile
   532     001C  281E               	goto	u8_21
   533     001D  281F               	goto	u8_20
   534     001E                     u8_21:
   535     001E  282A               	goto	i1l691
   536     001F                     u8_20:
   537     001F                     i1l687:
   538                           
   539                           ;newmain.c: 103:         count++;
   540     001F  3001               	movlw	1
   541     0020  07F2               	addwf	_count,f
   542     0021  1803               	skipnc
   543     0022  0AF3               	incf	_count+1,f
   544     0023  3000               	movlw	0
   545     0024  07F3               	addwf	_count+1,f
   546                           
   547                           ;newmain.c: 104:         TMR0 = 225;
   548     0025  30E1               	movlw	225
   549     0026  1283               	bcf	3,5	;RP0=0, select bank0
   550     0027  1303               	bcf	3,6	;RP1=0, select bank0
   551     0028  0081               	movwf	1	;volatile
   552     0029                     i1l689:
   553                           
   554                           ;newmain.c: 105:         INTCONbits.TMR0IF = 0;
   555     0029  110B               	bcf	11,2	;volatile
   556     002A                     i1l691:
   557                           
   558                           ;newmain.c: 108:     if ((TMR1IF == 1) && (TMR0IE == 1)) {
   559     002A  1283               	bcf	3,5	;RP0=0, select bank0
   560     002B  1303               	bcf	3,6	;RP1=0, select bank0
   561     002C  1C0C               	btfss	12,0	;volatile
   562     002D  282F               	goto	u9_21
   563     002E  2830               	goto	u9_20
   564     002F                     u9_21:
   565     002F  283F               	goto	i1l699
   566     0030                     u9_20:
   567     0030                     i1l693:
   568     0030  1E8B               	btfss	11,5	;volatile
   569     0031  2833               	goto	u10_21
   570     0032  2834               	goto	u10_20
   571     0033                     u10_21:
   572     0033  283F               	goto	i1l699
   573     0034                     u10_20:
   574     0034                     i1l695:
   575                           
   576                           ;newmain.c: 109:         count2++;
   577     0034  3001               	movlw	1
   578     0035  07F0               	addwf	_count2,f
   579     0036  1803               	skipnc
   580     0037  0AF1               	incf	_count2+1,f
   581     0038  3000               	movlw	0
   582     0039  07F1               	addwf	_count2+1,f
   583                           
   584                           ;newmain.c: 110:         TMR1H = 254;
   585     003A  30FE               	movlw	254
   586     003B  008F               	movwf	15	;volatile
   587                           
   588                           ;newmain.c: 111:         TMR1L = 12;
   589     003C  300C               	movlw	12
   590     003D  008E               	movwf	14	;volatile
   591     003E                     i1l697:
   592                           
   593                           ;newmain.c: 112:         TMR1IF = 0;
   594     003E  100C               	bcf	12,0	;volatile
   595     003F                     i1l699:
   596                           
   597                           ;newmain.c: 114:     if(count == 1)
   598     003F  0372               	decf	_count,w
   599     0040  0473               	iorwf	_count+1,w
   600     0041  1D03               	btfss	3,2
   601     0042  2844               	goto	u11_21
   602     0043  2845               	goto	u11_20
   603     0044                     u11_21:
   604     0044  2854               	goto	i1l705
   605     0045                     u11_20:
   606     0045                     i1l701:
   607                           
   608                           ;newmain.c: 115:     {;newmain.c: 116:         PORTBbits.RB0 = ~PORTBbits.RB0;
   609     0045  1003               	clrc
   610     0046  1C06               	btfss	6,0	;volatile
   611     0047  1403               	setc
   612     0048  1803               	btfsc	3,0
   613     0049  284B               	goto	u12_21
   614     004A  284F               	goto	u12_20
   615     004B                     u12_21:
   616     004B  1283               	bcf	3,5	;RP0=0, select bank0
   617     004C  1303               	bcf	3,6	;RP1=0, select bank0
   618     004D  1406               	bsf	6,0	;volatile
   619     004E  2852               	goto	u13_24
   620     004F                     u12_20:
   621     004F  1283               	bcf	3,5	;RP0=0, select bank0
   622     0050  1303               	bcf	3,6	;RP1=0, select bank0
   623     0051  1006               	bcf	6,0	;volatile
   624     0052                     u13_24:
   625     0052                     i1l703:
   626                           
   627                           ;newmain.c: 117:         count = 0;
   628     0052  01F2               	clrf	_count
   629     0053  01F3               	clrf	_count+1
   630     0054                     i1l705:
   631                           
   632                           ;newmain.c: 119:     if(count2 == 2)
   633     0054  3002               	movlw	2
   634     0055  0670               	xorwf	_count2,w
   635     0056  0471               	iorwf	_count2+1,w
   636     0057  1D03               	btfss	3,2
   637     0058  285A               	goto	u14_21
   638     0059  285B               	goto	u14_20
   639     005A                     u14_21:
   640     005A  286A               	goto	i1l99
   641     005B                     u14_20:
   642     005B                     i1l707:
   643                           
   644                           ;newmain.c: 120:     {;newmain.c: 121:         PORTBbits.RB1 = ~PORTBbits.RB1;
   645     005B  1003               	clrc
   646     005C  1C86               	btfss	6,1	;volatile
   647     005D  1403               	setc
   648     005E  1803               	btfsc	3,0
   649     005F  2861               	goto	u15_21
   650     0060  2865               	goto	u15_20
   651     0061                     u15_21:
   652     0061  1283               	bcf	3,5	;RP0=0, select bank0
   653     0062  1303               	bcf	3,6	;RP1=0, select bank0
   654     0063  1486               	bsf	6,1	;volatile
   655     0064  2868               	goto	u16_24
   656     0065                     u15_20:
   657     0065  1283               	bcf	3,5	;RP0=0, select bank0
   658     0066  1303               	bcf	3,6	;RP1=0, select bank0
   659     0067  1086               	bcf	6,1	;volatile
   660     0068                     u16_24:
   661     0068                     i1l709:
   662                           
   663                           ;newmain.c: 122:         count2 =0;
   664     0068  01F0               	clrf	_count2
   665     0069  01F1               	clrf	_count2+1
   666     006A                     i1l99:
   667     006A  0875               	movf	??_IRS+1,w
   668     006B  008A               	movwf	10
   669     006C  0E74               	swapf	??_IRS,w
   670     006D  0083               	movwf	3
   671     006E  0EFE               	swapf	btemp,f
   672     006F  0E7E               	swapf	btemp,w
   673     0070  0009               	retfie
   674     0071                     __end_of_IRS:
   675     007E                     btemp	set	126	;btemp
   676     007E                     wtemp0	set	126
   677                           
   678                           	psect	intentry
   679     0004                     __pintentry:	
   680                           ;incstack = 0
   681                           ; Regs used in _IRS: [wreg+status,2+status,0]
   682                           
   683     0004                     interrupt_function:
   684     007E                     saved_w	set	btemp
   685     0004  00FE               	movwf	btemp
   686     0005  0E03               	swapf	3,w
   687     0006  00F4               	movwf	??_IRS
   688     0007  080A               	movf	10,w
   689     0008  00F5               	movwf	??_IRS+1
   690     0009  120A  118A  2817   	ljmp	_IRS
   691                           
   692                           	psect	config
   693                           
   694                           ;Config register CONFIG @ 0x2007
   695                           ;	Oscillator Selection bits
   696                           ;	FOSC = HS, HS oscillator
   697                           ;	Watchdog Timer Enable bit
   698                           ;	WDTE = OFF, WDT disabled
   699                           ;	Power-up Timer Enable bit
   700                           ;	PWRTE = OFF, PWRT disabled
   701                           ;	Brown-out Reset Enable bit
   702                           ;	BOREN = OFF, BOR disabled
   703                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   704                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   705                           ;	Data EEPROM Memory Code Protection bit
   706                           ;	CPD = OFF, Data EEPROM code protection off
   707                           ;	Flash Program Memory Write Enable bits
   708                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   709                           ;	In-Circuit Debugger Mode bit
   710                           ;	DEBUG = 0x1, unprogrammed default
   711                           ;	Flash Program Memory Code Protection bit
   712                           ;	CP = OFF, Code protection off
   713     2007                     	org	8199
   714     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay_ms_TMR2

Critical Paths under _IRS in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _IRS in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IRS in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IRS in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IRS in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      98
                         _Timer2_cfg
                      _delay_ms_TMR2
 ---------------------------------------------------------------------------------
 (1) _delay_ms_TMR2                                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer2_cfg                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _IRS                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer2_cfg
   _delay_ms_TMR2

 _IRS (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 22:15:49 2024

                     l63 00B3                       l90 00A4                       l86 0092  
                    l721 008D                      l651 00A5                      l723 0091  
                    l731 007C                      l725 0096                      l733 0085  
                    l719 008C                      l727 0071                      l729 0077  
                    _GIE 005F                      u170 0096                      u171 0095  
                    u180 00A4                      u181 00A3                      _IRS 0017  
                   ?_IRS 0074                     _PEIE 005E                     i1l99 006A  
                   _TMR0 0001                     _TMR2 0011                     u7_20 001B  
                   u7_21 001A                     u8_20 001F                     u8_21 001E  
                   u9_20 0030                     u9_21 002F                     _main 0071  
                   btemp 007E                     start 000C                    ??_IRS 0074  
                  ?_main 0074                    i1l701 0045                    i1l703 0052  
                  i1l705 0054                    i1l707 005B                    i1l709 0068  
                  i1l691 002A                    i1l683 0017                    i1l693 0030  
                  i1l685 001B                    i1l695 0034                    i1l687 001F  
                  i1l697 003E                    i1l689 0029                    i1l699 003F  
                  u10_20 0034                    u10_21 0033                    u11_20 0045  
                  u11_21 0044                    u12_20 004F                    u12_21 004B  
                  u13_24 0052                    u14_20 005B                    u14_21 005A  
                  u15_20 0065                    u15_21 0061                    u16_24 0068  
                  _TMR1H 000F                    _TMR1L 000E                    _PORTB 0006  
                  _TRISB 0086                    _count 0072                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 008C                   ??_main 0078    __end_of_delay_ms_TMR2 00A5  
                 _TMR0IE 005D                   _TMR1IE 0460                   _TMR1IF 0060  
                 _TMR2IE 0461                   _TMR2IF 0061                   _TMR1ON 0080  
                 _TMR2ON 0092               _Timer2_cfg 00A5                   _count2 0070  
                 saved_w 007E  __end_of__initialization 0013           __pcstackCOMMON 0074  
         _OPTION_REGbits 0081              ?_Timer2_cfg 0074               __pmaintext 0071  
             __pintentry 0004                  _T2CKPS0 0090                  _T2CKPS1 0091  
                _TOUTPS0 0093                  _TOUTPS1 0094                  _TOUTPS2 0095  
                _TOUTPS3 0096                  __ptext1 008C                  __ptext2 00A5  
                __ptext3 0017                _T1CONbits 0010     end_of_initialization 0013  
              _PORTBbits 0006      start_initialization 000F              __end_of_IRS 0071  
           ??_Timer2_cfg 0076              __pbssCOMMON 0070                ___latbits 0002  
          _delay_ms_TMR2 008C       __end_of_Timer2_cfg 00B4           ?_delay_ms_TMR2 0076  
      interrupt_function 0004        delay_ms_TMR2@time 0076          ??_delay_ms_TMR2 0078  
             _INTCONbits 000B                 intlevel1 0000  
