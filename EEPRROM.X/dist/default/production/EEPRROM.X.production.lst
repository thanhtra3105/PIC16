

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed May 01 10:59:58 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     000D                     _PIR2bits	set	13
   168     000B                     _INTCONbits	set	11
   169     010C                     _EEDATA	set	268
   170     010D                     _EEADR	set	269
   171     018D                     _EECON2	set	397
   172     018C                     _EECON1bits	set	396
   173                           
   174                           	psect	cinit
   175     07FB                     start_initialization:	
   176                           ; #config settings
   177                           
   178     07FB                     __initialization:
   179                           
   180                           ; Clear objects allocated to COMMON
   181     07FB  01F2               	clrf	__pbssCOMMON& (0+127)
   182     07FC                     end_of_initialization:	
   183                           ;End of C runtime variable initialization code
   184                           
   185     07FC                     __end_of__initialization:
   186     07FC  0183               	clrf	3
   187     07FD  120A  118A  2FCF   	ljmp	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMMON
   190     0072                     __pbssCOMMON:
   191     0072                     _Value:
   192     0072                     	ds	1
   193                           
   194                           	psect	cstackCOMMON
   195     0070                     __pcstackCOMMON:
   196     0070                     ?_write_EEPROM:
   197     0070                     ?_read_EEPROM:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ??_read_EEPROM:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_main:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     write_EEPROM@Data:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     read_EEPROM@adr:	
   210                           ; 1 bytes @ 0x0
   211                           
   212                           
   213                           ; 1 bytes @ 0x0
   214     0070                     	ds	1
   215     0071                     ??_write_EEPROM:
   216     0071                     write_EEPROM@adr:	
   217                           ; 1 bytes @ 0x1
   218                           
   219                           
   220                           ; 1 bytes @ 0x1
   221     0071                     	ds	1
   222     0072                     ??_main:
   223                           
   224                           	psect	maintext
   225     07CF                     __pmaintext:	
   226                           ; 1 bytes @ 0x2
   227 ;;
   228 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   229 ;;
   230 ;; *************** function _main *****************
   231 ;; Defined at:
   232 ;;		line 44 in file "newmain.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;		None
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2, status,0, pclath, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : B00/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   246 ;;      Params:         0       0       0       0       0
   247 ;;      Locals:         0       0       0       0       0
   248 ;;      Temps:          0       0       0       0       0
   249 ;;      Totals:         0       0       0       0       0
   250 ;;Total ram usage:        0 bytes
   251 ;; Hardware stack levels required when called: 1
   252 ;; This function calls:
   253 ;;		_read_EEPROM
   254 ;;		_write_EEPROM
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260     07CF                     _main:	
   261                           ;psect for function _main
   262                           
   263     07CF                     l612:	
   264                           ;incstack = 0
   265                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   266                           
   267                           
   268                           ;newmain.c: 46:     write_EEPROM(0xF0, 22);
   269     07CF  3016               	movlw	22
   270     07D0  00F0               	movwf	write_EEPROM@Data
   271     07D1  30F0               	movlw	240
   272     07D2  120A  118A  27E1  120A  118A  	fcall	_write_EEPROM
   273     07D7                     l614:
   274                           
   275                           ;newmain.c: 47:     Value = read_EEPROM(0xF0);
   276     07D7  30F0               	movlw	240
   277     07D8  120A  118A  27C2  120A  118A  	fcall	_read_EEPROM
   278     07DD  00F2               	movwf	_Value
   279     07DE                     l28:
   280     07DE  120A  118A  2800   	ljmp	start
   281     07E1                     __end_of_main:
   282                           
   283                           	psect	text1
   284     07E1                     __ptext1:	
   285 ;; *************** function _write_EEPROM *****************
   286 ;; Defined at:
   287 ;;		line 19 in file "newmain.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;  adr             1    wreg     unsigned char 
   290 ;;  Data            1    0[COMMON] unsigned char 
   291 ;; Auto vars:     Size  Location     Type
   292 ;;  adr             1    1[COMMON] unsigned char 
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         1       0       0       0       0
   303 ;;      Locals:         1       0       0       0       0
   304 ;;      Temps:          0       0       0       0       0
   305 ;;      Totals:         2       0       0       0       0
   306 ;;Total ram usage:        2 bytes
   307 ;; Hardware stack levels used: 1
   308 ;; This function calls:
   309 ;;		Nothing
   310 ;; This function is called by:
   311 ;;		_main
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315     07E1                     _write_EEPROM:	
   316                           ;psect for function _write_EEPROM
   317                           
   318                           
   319                           ;incstack = 0
   320                           ; Regs used in _write_EEPROM: [wreg]
   321                           ;write_EEPROM@adr stored from wreg
   322     07E1  00F1               	movwf	write_EEPROM@adr
   323     07E2                     l598:
   324                           
   325                           ;newmain.c: 19: void write_EEPROM(unsigned char adr, unsigned char Data);newmain.c: 20: 
      +                          {;newmain.c: 21:     EEADR = adr;
   326     07E2  0871               	movf	write_EEPROM@adr,w
   327     07E3  1283               	bcf	3,5	;RP0=0, select bank2
   328     07E4  1703               	bsf	3,6	;RP1=1, select bank2
   329     07E5  008D               	movwf	13	;volatile
   330                           
   331                           ;newmain.c: 22:     EEDATA = Data;
   332     07E6  0870               	movf	write_EEPROM@Data,w
   333     07E7  008C               	movwf	12	;volatile
   334     07E8                     l600:
   335                           
   336                           ;newmain.c: 24:     EECON1bits.EEPGD = 0;
   337     07E8  1683               	bsf	3,5	;RP0=1, select bank3
   338     07E9  1703               	bsf	3,6	;RP1=1, select bank3
   339     07EA  138C               	bcf	12,7	;volsfr
   340     07EB                     l602:
   341                           
   342                           ;newmain.c: 25:     EECON1bits.WREN = 1;
   343     07EB  150C               	bsf	12,2	;volsfr
   344     07EC                     l604:
   345                           
   346                           ;newmain.c: 26:     INTCONbits.GIE = 0;
   347     07EC  138B               	bcf	11,7	;volatile
   348                           
   349                           ;newmain.c: 27:     EECON2 = 0x55;
   350     07ED  3055               	movlw	85
   351     07EE  008D               	movwf	13	;volsfr
   352                           
   353                           ;newmain.c: 28:     EECON2 = 0xAA;
   354     07EF  30AA               	movlw	170
   355     07F0  008D               	movwf	13	;volsfr
   356     07F1                     l606:
   357                           
   358                           ;newmain.c: 30:     EECON1bits.WR = 1;
   359     07F1  148C               	bsf	12,1	;volsfr
   360     07F2                     l608:
   361                           
   362                           ;newmain.c: 31:     EECON1bits.WREN = 0;
   363     07F2  110C               	bcf	12,2	;volsfr
   364     07F3                     l17:	
   365                           ;newmain.c: 32:     while(PIR2bits.EEIF == 0);
   366                           
   367     07F3  1283               	bcf	3,5	;RP0=0, select bank0
   368     07F4  1303               	bcf	3,6	;RP1=0, select bank0
   369     07F5  1E0D               	btfss	13,4	;volatile
   370     07F6  2FF8               	goto	u21
   371     07F7  2FF9               	goto	u20
   372     07F8                     u21:
   373     07F8  2FF3               	goto	l17
   374     07F9                     u20:
   375     07F9                     l610:
   376                           
   377                           ;newmain.c: 33:     PIR2bits.EEIF == 0;
   378     07F9  080D               	movf	13,w	;volatile
   379     07FA                     l20:
   380     07FA  0008               	return
   381     07FB                     __end_of_write_EEPROM:
   382                           
   383                           	psect	text2
   384     07C2                     __ptext2:	
   385 ;; *************** function _read_EEPROM *****************
   386 ;; Defined at:
   387 ;;		line 36 in file "newmain.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;  adr             1    wreg     unsigned char 
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  adr             1    0[COMMON] unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      unsigned char 
   394 ;; Registers used:
   395 ;;		wreg
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         1       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0
   404 ;;      Totals:         1       0       0       0       0
   405 ;;Total ram usage:        1 bytes
   406 ;; Hardware stack levels used: 1
   407 ;; This function calls:
   408 ;;		Nothing
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414     07C2                     _read_EEPROM:	
   415                           ;psect for function _read_EEPROM
   416                           
   417                           
   418                           ;incstack = 0
   419                           ; Regs used in _read_EEPROM: [wreg]
   420                           ;read_EEPROM@adr stored from wreg
   421     07C2  00F0               	movwf	read_EEPROM@adr
   422     07C3                     l586:
   423                           
   424                           ;newmain.c: 36: unsigned char read_EEPROM(unsigned char adr);newmain.c: 37: {;newmain.c:
      +                           38:     EEADR = adr;
   425     07C3  0870               	movf	read_EEPROM@adr,w
   426     07C4  1283               	bcf	3,5	;RP0=0, select bank2
   427     07C5  1703               	bsf	3,6	;RP1=1, select bank2
   428     07C6  008D               	movwf	13	;volatile
   429     07C7                     l588:
   430                           
   431                           ;newmain.c: 39:     EECON1bits.EEPGD = 0x00;
   432     07C7  1683               	bsf	3,5	;RP0=1, select bank3
   433     07C8  1703               	bsf	3,6	;RP1=1, select bank3
   434     07C9  138C               	bcf	12,7	;volsfr
   435     07CA                     l590:
   436                           
   437                           ;newmain.c: 40:     EECON1bits.RD = 1;
   438     07CA  140C               	bsf	12,0	;volsfr
   439                           
   440                           ;newmain.c: 41:     return EEDATA;
   441     07CB  1283               	bcf	3,5	;RP0=0, select bank2
   442     07CC  1703               	bsf	3,6	;RP1=1, select bank2
   443     07CD  080C               	movf	12,w	;volatile
   444     07CE                     l23:
   445     07CE  0008               	return
   446     07CF                     __end_of_read_EEPROM:
   447     007E                     btemp	set	126	;btemp
   448     007E                     wtemp0	set	126
   449                           
   450                           	psect	config
   451                           
   452                           ;Config register CONFIG @ 0x2007
   453                           ;	Oscillator Selection bits
   454                           ;	FOSC = HS, HS oscillator
   455                           ;	Watchdog Timer Enable bit
   456                           ;	WDTE = OFF, WDT disabled
   457                           ;	Power-up Timer Enable bit
   458                           ;	PWRTE = OFF, PWRT disabled
   459                           ;	Brown-out Reset Enable bit
   460                           ;	BOREN = OFF, BOR disabled
   461                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   462                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   463                           ;	Data EEPROM Memory Code Protection bit
   464                           ;	CPD = OFF, Data EEPROM code protection off
   465                           ;	Flash Program Memory Write Enable bits
   466                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   467                           ;	In-Circuit Debugger Mode bit
   468                           ;	DEBUG = 0x1, unprogrammed default
   469                           ;	Flash Program Memory Code Protection bit
   470                           ;	CP = OFF, Code protection off
   471     2007                     	org	8199
   472     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_write_EEPROM

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     135
                        _read_EEPROM
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (1) _write_EEPROM                                         2     1      1     120
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _read_EEPROM                                          1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _read_EEPROM
   _write_EEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed May 01 10:59:58 2024

                     l20 07FA                       l23 07CE                       l17 07F3  
                     l28 07DE                       u20 07F9                       u21 07F8  
                    l600 07E8                      l610 07F9                      l602 07EB  
                    l604 07EC                      l612 07CF                      l606 07F1  
                    l614 07D7                      l608 07F2                      l590 07CA  
                    l586 07C3                      l588 07C7                      l598 07E2  
                   _main 07CF                     btemp 007E                     start 0000  
           ?_read_EEPROM 0070                    ?_main 0070                    _EEADR 010D  
                  _Value 0072                    status 0003                    wtemp0 007E  
        __initialization 07FB             __end_of_main 07E1                   ??_main 0072  
           _write_EEPROM 07E1                   _EEDATA 010C                   _EECON2 018D  
__end_of__initialization 07FC           __pcstackCOMMON 0070         write_EEPROM@Data 0070  
         read_EEPROM@adr 0070               __pmaintext 07CF                  __ptext1 07E1  
                __ptext2 07C2     end_of_initialization 07FC      start_initialization 07FB  
          ??_read_EEPROM 0070              __pbssCOMMON 0072                ___latbits 0002  
        write_EEPROM@adr 0071      __end_of_read_EEPROM 07CF            ?_write_EEPROM 0070  
               _PIR2bits 000D           ??_write_EEPROM 0071               _EECON1bits 018C  
            _read_EEPROM 07C2               _INTCONbits 000B     __end_of_write_EEPROM 07FB  
