

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jun 15 12:16:13 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 12/10/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0013                     _SSPBUF	set	19
   223     0014                     _SSPCON	set	20
   224     0008                     _PORTD	set	8
   225     0007                     _PORTCbits	set	7
   226     0088                     _TRISD	set	136
   227     0091                     _SSPCON2bits	set	145
   228     0093                     _SSPADD	set	147
   229     0087                     _TRISCbits	set	135
   230     04A0                     _BF	set	1184
   231     048A                     _PEN	set	1162
   232     0489                     _RSEN	set	1161
   233     0488                     _SEN	set	1160
   234                           
   235                           	psect	strings
   236     0003                     __pstrings:
   237     0003                     stringtab:
   238     0003                     __stringtab:
   239     0003                     stringcode:	
   240                           ;	String table - string pointers are 1 byte each
   241                           
   242     0003                     stringdir:
   243     0003  3000               	movlw	high stringdir
   244     0004  008A               	movwf	10
   245     0005  0804               	movf	4,w
   246     0006  0A84               	incf	4,f
   247     0007  0782               	addwf	2,f
   248     0008                     __stringbase:
   249     0008  3400               	retlw	0
   250     0009                     __end_of__stringtab:
   251     0009                     STR_1:
   252     0009  3464               	retlw	100	;'d'
   253     000A  3461               	retlw	97	;'a'
   254     000B  3420               	retlw	32	;' '
   255     000C  3473               	retlw	115	;'s'
   256     000D  3465               	retlw	101	;'e'
   257     000E  3474               	retlw	116	;'t'
   258     000F  3420               	retlw	32	;' '
   259     0010  3474               	retlw	116	;'t'
   260     0011  3467               	retlw	103	;'g'
   261     0012  3469               	retlw	105	;'i'
   262     0013  3461               	retlw	97	;'a'
   263     0014  346E               	retlw	110	;'n'
   264     0015  3400               	retlw	0
   265     0016                     STR_5:
   266     0016  3443               	retlw	67	;'C'
   267     0017  344E               	retlw	78	;'N'
   268     0018  3400               	retlw	0
   269     0019                     STR_6:
   270     0019  3420               	retlw	32	;' '
   271     001A  3400               	retlw	0
   272     001B                     STR_7:
   273     001B  342F               	retlw	47	;'/'
   274     001C  3400               	retlw	0
   275     001D                     STR_2:
   276     001D  343A               	retlw	58	;':'
   277     001E  3400               	retlw	0
   278     001F                     STR_4:
   279     001F  3454               	retlw	84	;'T'
   280     0020  3400               	retlw	0
   281     001B                     
   282                           	psect	cinit
   283     07F3                     start_initialization:	
   284                           ; #config settings
   285                           
   286     07F3                     __initialization:
   287                           
   288                           ; Clear objects allocated to COMMON
   289     07F3  01FD               	clrf	__pbssCOMMON& (0+127)
   290                           
   291                           ; Clear objects allocated to BANK0
   292     07F4  1283               	bcf	3,5	;RP0=0, select bank0
   293     07F5  1303               	bcf	3,6	;RP1=0, select bank0
   294     07F6  01C4               	clrf	__pbssBANK0& (0+127)
   295     07F7  01C5               	clrf	(__pbssBANK0+1)& (0+127)
   296     07F8  01C6               	clrf	(__pbssBANK0+2)& (0+127)
   297     07F9  01C7               	clrf	(__pbssBANK0+3)& (0+127)
   298     07FA  01C8               	clrf	(__pbssBANK0+4)& (0+127)
   299     07FB  01C9               	clrf	(__pbssBANK0+5)& (0+127)
   300     07FC                     end_of_initialization:	
   301                           ;End of C runtime variable initialization code
   302                           
   303     07FC                     __end_of__initialization:
   304     07FC  0183               	clrf	3
   305     07FD  120A  118A  2DD0   	ljmp	_main	;jump to C main() function
   306                           
   307                           	psect	bssCOMMON
   308     007D                     __pbssCOMMON:
   309     007D                     _weekDay:
   310     007D                     	ds	1
   311                           
   312                           	psect	bssBANK0
   313     0044                     __pbssBANK0:
   314     0044                     _year:
   315     0044                     	ds	1
   316     0045                     _month:
   317     0045                     	ds	1
   318     0046                     _day:
   319     0046                     	ds	1
   320     0047                     _hour:
   321     0047                     	ds	1
   322     0048                     _minute:
   323     0048                     	ds	1
   324     0049                     _second:
   325     0049                     	ds	1
   326                           
   327                           	psect	cstackCOMMON
   328     0070                     __pcstackCOMMON:
   329     0070                     ?_lcd_command:
   330     0070                     ??_lcd_command:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_lcd_data:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ??_lcd_data:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?_lcd_init:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ?_lcd_string:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ?_i2c_init:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ??_i2c_init:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0070                     ?_i2c_start:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ??_i2c_start:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ?_i2c_repeat_start:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ??_i2c_repeat_start:	
   361                           ; 1 bytes @ 0x0
   362                           
   363     0070                     ?_i2c_stop:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0070                     ??_i2c_stop:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ?_i2c_write:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ??_i2c_write:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     ?_i2c_read:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ??_i2c_read:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ?_BCD_To_Decimal:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0070                     ?_ds1307_init:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0070                     ?_i2c_readTime:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0070                     ?_main:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0070                     ?___bmul:	
   394                           ; 1 bytes @ 0x0
   395                           
   396     0070                     ?___lwdiv:	
   397                           ; 1 bytes @ 0x0
   398                           
   399     0070                     ?___lwmod:	
   400                           ; 2 bytes @ 0x0
   401                           
   402     0070                     i2c_write@Data:	
   403                           ; 2 bytes @ 0x0
   404                           
   405     0070                     i2c_read@u8Ack:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ___bmul@multiplicand:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ___lwdiv@divisor:	
   412                           ; 1 bytes @ 0x0
   413                           
   414     0070                     ___lwmod@divisor:	
   415                           ; 2 bytes @ 0x0
   416                           
   417                           
   418                           ; 2 bytes @ 0x0
   419     0070                     	ds	1
   420     0071                     ??_ds1307_init:
   421     0071                     ??___bmul:	
   422                           ; 1 bytes @ 0x1
   423                           
   424     0071                     lcd_command@cmd:	
   425                           ; 1 bytes @ 0x1
   426                           
   427     0071                     lcd_data@Data:	
   428                           ; 1 bytes @ 0x1
   429                           
   430     0071                     i2c_read@tmp:	
   431                           ; 1 bytes @ 0x1
   432                           
   433     0071                     ___bmul@product:	
   434                           ; 1 bytes @ 0x1
   435                           
   436                           
   437                           ; 1 bytes @ 0x1
   438     0071                     	ds	1
   439     0072                     ??_lcd_init:
   440     0072                     ??_lcd_string:	
   441                           ; 1 bytes @ 0x2
   442                           
   443     0072                     ?_lcd_setCursor:	
   444                           ; 1 bytes @ 0x2
   445                           
   446     0072                     lcd_setCursor@y:	
   447                           ; 1 bytes @ 0x2
   448                           
   449     0072                     ___bmul@multiplier:	
   450                           ; 1 bytes @ 0x2
   451                           
   452     0072                     lcd_string@i:	
   453                           ; 1 bytes @ 0x2
   454                           
   455     0072                     ___lwdiv@dividend:	
   456                           ; 2 bytes @ 0x2
   457                           
   458     0072                     ___lwmod@dividend:	
   459                           ; 2 bytes @ 0x2
   460                           
   461                           
   462                           ; 2 bytes @ 0x2
   463     0072                     	ds	1
   464     0073                     ??_lcd_setCursor:
   465     0073                     ??_BCD_To_Decimal:	
   466                           ; 1 bytes @ 0x3
   467                           
   468     0073                     lcd_setCursor@x:	
   469                           ; 1 bytes @ 0x3
   470                           
   471                           
   472                           ; 1 bytes @ 0x3
   473     0073                     	ds	1
   474     0074                     ??___lwdiv:
   475     0074                     ??___lwmod:	
   476                           ; 1 bytes @ 0x4
   477                           
   478     0074                     lcd_string@string_data:	
   479                           ; 1 bytes @ 0x4
   480                           
   481     0074                     ___lwmod@counter:	
   482                           ; 1 bytes @ 0x4
   483                           
   484     0074                     ___lwdiv@quotient:	
   485                           ; 1 bytes @ 0x4
   486                           
   487                           
   488                           ; 2 bytes @ 0x4
   489     0074                     	ds	1
   490     0075                     BCD_To_Decimal@number:
   491                           
   492                           ; 1 bytes @ 0x5
   493     0075                     	ds	1
   494     0076                     ??_i2c_readTime:
   495     0076                     ___lwdiv@counter:	
   496                           ; 1 bytes @ 0x6
   497                           
   498                           
   499                           ; 1 bytes @ 0x6
   500     0076                     	ds	1
   501     0077                     ?_lcd_number:
   502     0077                     lcd_number@num:	
   503                           ; 1 bytes @ 0x7
   504                           
   505                           
   506                           ; 2 bytes @ 0x7
   507     0077                     	ds	2
   508     0079                     ??_lcd_number:
   509                           
   510                           ; 1 bytes @ 0x9
   511     0079                     	ds	1
   512     007A                     ??_main:
   513                           
   514                           ; 1 bytes @ 0xA
   515     007A                     	ds	3
   516                           
   517                           	psect	cstackBANK0
   518     0020                     __pcstackBANK0:
   519     0020                     lcd_number@a:
   520                           
   521                           ; 32 bytes @ 0x0
   522     0020                     	ds	32
   523     0040                     lcd_number@temp:
   524                           
   525                           ; 2 bytes @ 0x20
   526     0040                     	ds	2
   527     0042                     lcd_number@count:
   528                           
   529                           ; 2 bytes @ 0x22
   530     0042                     	ds	2
   531                           
   532                           	psect	maintext
   533     05D0                     __pmaintext:	
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 25 in file "newmain.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : B00/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          3       0       0       0       0
   556 ;;      Totals:         3       0       0       0       0
   557 ;;Total ram usage:        3 bytes
   558 ;; Hardware stack levels required when called: 3
   559 ;; This function calls:
   560 ;;		_ds1307_init
   561 ;;		_i2c_readTime
   562 ;;		_lcd_command
   563 ;;		_lcd_init
   564 ;;		_lcd_number
   565 ;;		_lcd_setCursor
   566 ;;		_lcd_string
   567 ;; This function is called by:
   568 ;;		Startup code after reset
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572     05D0                     _main:	
   573                           ;psect for function _main
   574                           
   575     05D0                     l1261:	
   576                           ;incstack = 0
   577                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   578                           
   579                           
   580                           ;newmain.c: 27:     TRISCbits.TRISC0 = 0;
   581     05D0  1683               	bsf	3,5	;RP0=1, select bank1
   582     05D1  1303               	bcf	3,6	;RP1=0, select bank1
   583     05D2  1007               	bcf	7,0	;volatile
   584                           
   585                           ;newmain.c: 28:     TRISCbits.TRISC1 = 0;
   586     05D3  1087               	bcf	7,1	;volatile
   587                           
   588                           ;newmain.c: 29:     TRISCbits.TRISC2 = 0;
   589     05D4  1107               	bcf	7,2	;volatile
   590                           
   591                           ;newmain.c: 30:     TRISCbits.TRISC3 = 1;
   592     05D5  1587               	bsf	7,3	;volatile
   593                           
   594                           ;newmain.c: 31:     TRISCbits.TRISC4 = 1;
   595     05D6  1607               	bsf	7,4	;volatile
   596     05D7                     l1263:
   597                           
   598                           ;newmain.c: 32:     TRISD = 0;
   599     05D7  0188               	clrf	8	;volatile
   600     05D8                     l1265:
   601                           
   602                           ;newmain.c: 33:     lcd_init();
   603     05D8  120A  118A  2439  120A  118A  	fcall	_lcd_init
   604     05DD                     l1267:
   605                           
   606                           ;newmain.c: 34:     ds1307_init();
   607     05DD  120A  118A  248D  120A  118A  	fcall	_ds1307_init
   608     05E2                     l1269:
   609                           
   610                           ;newmain.c: 36:     lcd_setCursor(0,0);
   611     05E2  01F2               	clrf	lcd_setCursor@y
   612     05E3  3000               	movlw	0
   613     05E4  120A  118A  246C  120A  118A  	fcall	_lcd_setCursor
   614     05E9                     l1271:
   615                           
   616                           ;newmain.c: 37:     lcd_string("da set tgian");
   617     05E9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   618     05EA  120A  118A  24AF  120A  118A  	fcall	_lcd_string
   619     05EF                     l1273:
   620                           
   621                           ;newmain.c: 38:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   622     05EF  3006               	movlw	6
   623     05F0  00FC               	movwf	??_main+2
   624     05F1  3013               	movlw	19
   625     05F2  00FB               	movwf	??_main+1
   626     05F3  30AD               	movlw	173
   627     05F4  00FA               	movwf	??_main
   628     05F5                     u627:
   629     05F5  0BFA               	decfsz	??_main,f
   630     05F6  2DF5               	goto	u627
   631     05F7  0BFB               	decfsz	??_main+1,f
   632     05F8  2DF5               	goto	u627
   633     05F9  0BFC               	decfsz	??_main+2,f
   634     05FA  2DF5               	goto	u627
   635     05FB  2DFC               	nop2
   636     05FC                     l1275:
   637                           
   638                           ;newmain.c: 39:     lcd_command(0x01);
   639     05FC  3001               	movlw	1
   640     05FD  120A  118A  23EC  120A  118A  	fcall	_lcd_command
   641     0602                     l1277:
   642                           
   643                           ;newmain.c: 41:     {;newmain.c: 43:         i2c_readTime();
   644     0602  120A  118A  26AB  120A  118A  	fcall	_i2c_readTime
   645     0607                     l1279:
   646                           
   647                           ;newmain.c: 44:         lcd_setCursor(0,0);
   648     0607  01F2               	clrf	lcd_setCursor@y
   649     0608  3000               	movlw	0
   650     0609  120A  118A  246C  120A  118A  	fcall	_lcd_setCursor
   651     060E                     l1281:
   652                           
   653                           ;newmain.c: 46:         lcd_number(hour);
   654     060E  1283               	bcf	3,5	;RP0=0, select bank0
   655     060F  1303               	bcf	3,6	;RP1=0, select bank0
   656     0610  0847               	movf	_hour,w
   657     0611  00FA               	movwf	??_main
   658     0612  01FB               	clrf	??_main+1
   659     0613  087A               	movf	??_main,w
   660     0614  00F7               	movwf	lcd_number@num
   661     0615  087B               	movf	??_main+1,w
   662     0616  00F8               	movwf	lcd_number@num+1
   663     0617  120A  118A  2554  120A  118A  	fcall	_lcd_number
   664     061C                     l1283:
   665                           
   666                           ;newmain.c: 47:         lcd_string(":");
   667     061C  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   668     061D  120A  118A  24AF  120A  118A  	fcall	_lcd_string
   669     0622                     l1285:
   670                           
   671                           ;newmain.c: 48:         lcd_number(minute);
   672     0622  1283               	bcf	3,5	;RP0=0, select bank0
   673     0623  1303               	bcf	3,6	;RP1=0, select bank0
   674     0624  0848               	movf	_minute,w
   675     0625  00FA               	movwf	??_main
   676     0626  01FB               	clrf	??_main+1
   677     0627  087A               	movf	??_main,w
   678     0628  00F7               	movwf	lcd_number@num
   679     0629  087B               	movf	??_main+1,w
   680     062A  00F8               	movwf	lcd_number@num+1
   681     062B  120A  118A  2554  120A  118A  	fcall	_lcd_number
   682     0630                     l1287:
   683                           
   684                           ;newmain.c: 49:         lcd_string(":");
   685     0630  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   686     0631  120A  118A  24AF  120A  118A  	fcall	_lcd_string
   687     0636                     l1289:
   688                           
   689                           ;newmain.c: 50:         lcd_number(second);
   690     0636  1283               	bcf	3,5	;RP0=0, select bank0
   691     0637  1303               	bcf	3,6	;RP1=0, select bank0
   692     0638  0849               	movf	_second,w
   693     0639  00FA               	movwf	??_main
   694     063A  01FB               	clrf	??_main+1
   695     063B  087A               	movf	??_main,w
   696     063C  00F7               	movwf	lcd_number@num
   697     063D  087B               	movf	??_main+1,w
   698     063E  00F8               	movwf	lcd_number@num+1
   699     063F  120A  118A  2554  120A  118A  	fcall	_lcd_number
   700     0644                     l1291:
   701                           
   702                           ;newmain.c: 52:         lcd_setCursor(0,1);
   703     0644  01F2               	clrf	lcd_setCursor@y
   704     0645  0AF2               	incf	lcd_setCursor@y,f
   705     0646  3000               	movlw	0
   706     0647  120A  118A  246C  120A  118A  	fcall	_lcd_setCursor
   707     064C                     l1293:
   708                           
   709                           ;newmain.c: 53:         if(weekDay > 1)
   710     064C  3002               	movlw	2
   711     064D  027D               	subwf	_weekDay,w
   712     064E  1C03               	skipc
   713     064F  2E51               	goto	u611
   714     0650  2E52               	goto	u610
   715     0651                     u611:
   716     0651  2E65               	goto	l1299
   717     0652                     u610:
   718     0652                     l1295:
   719                           
   720                           ;newmain.c: 54:         {;newmain.c: 55:             lcd_string("T");
   721     0652  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   722     0653  120A  118A  24AF  120A  118A  	fcall	_lcd_string
   723     0658                     l1297:
   724                           
   725                           ;newmain.c: 56:             lcd_number(weekDay);
   726     0658  087D               	movf	_weekDay,w
   727     0659  00FA               	movwf	??_main
   728     065A  01FB               	clrf	??_main+1
   729     065B  087A               	movf	??_main,w
   730     065C  00F7               	movwf	lcd_number@num
   731     065D  087B               	movf	??_main+1,w
   732     065E  00F8               	movwf	lcd_number@num+1
   733     065F  120A  118A  2554  120A  118A  	fcall	_lcd_number
   734                           
   735                           ;newmain.c: 57:         }
   736     0664  2E6B               	goto	l130
   737     0665                     l1299:
   738                           
   739                           ;newmain.c: 59:             lcd_string("CN");
   740     0665  300E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   741     0666  120A  118A  24AF  120A  118A  	fcall	_lcd_string
   742     066B                     l130:
   743                           
   744                           ;newmain.c: 60:         lcd_string(" ");
   745     066B  3011               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   746     066C  120A  118A  24AF  120A  118A  	fcall	_lcd_string
   747     0671                     l1301:
   748                           
   749                           ;newmain.c: 61:         lcd_number(day);
   750     0671  1283               	bcf	3,5	;RP0=0, select bank0
   751     0672  1303               	bcf	3,6	;RP1=0, select bank0
   752     0673  0846               	movf	_day,w
   753     0674  00FA               	movwf	??_main
   754     0675  01FB               	clrf	??_main+1
   755     0676  087A               	movf	??_main,w
   756     0677  00F7               	movwf	lcd_number@num
   757     0678  087B               	movf	??_main+1,w
   758     0679  00F8               	movwf	lcd_number@num+1
   759     067A  120A  118A  2554  120A  118A  	fcall	_lcd_number
   760     067F                     l1303:
   761                           
   762                           ;newmain.c: 62:         lcd_string("/");
   763     067F  3013               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   764     0680  120A  118A  24AF  120A  118A  	fcall	_lcd_string
   765                           
   766                           ;newmain.c: 63:         lcd_number(month);
   767     0685  1283               	bcf	3,5	;RP0=0, select bank0
   768     0686  1303               	bcf	3,6	;RP1=0, select bank0
   769     0687  0845               	movf	_month,w
   770     0688  00FA               	movwf	??_main
   771     0689  01FB               	clrf	??_main+1
   772     068A  087A               	movf	??_main,w
   773     068B  00F7               	movwf	lcd_number@num
   774     068C  087B               	movf	??_main+1,w
   775     068D  00F8               	movwf	lcd_number@num+1
   776     068E  120A  118A  2554  120A  118A  	fcall	_lcd_number
   777     0693                     l1305:
   778                           
   779                           ;newmain.c: 64:         lcd_string("/");
   780     0693  3013               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   781     0694  120A  118A  24AF  120A  118A  	fcall	_lcd_string
   782     0699                     l1307:
   783                           
   784                           ;newmain.c: 65:         lcd_number(year);
   785     0699  1283               	bcf	3,5	;RP0=0, select bank0
   786     069A  1303               	bcf	3,6	;RP1=0, select bank0
   787     069B  0844               	movf	_year,w
   788     069C  00FA               	movwf	??_main
   789     069D  01FB               	clrf	??_main+1
   790     069E  087A               	movf	??_main,w
   791     069F  00F7               	movwf	lcd_number@num
   792     06A0  087B               	movf	??_main+1,w
   793     06A1  00F8               	movwf	lcd_number@num+1
   794     06A2  120A  118A  2554  120A  118A  	fcall	_lcd_number
   795     06A7  2E02               	goto	l1277
   796     06A8  120A  118A  2800   	ljmp	start
   797     06AB                     __end_of_main:
   798                           
   799                           	psect	text1
   800     04AF                     __ptext1:	
   801 ;; *************** function _lcd_string *****************
   802 ;; Defined at:
   803 ;;		line 40 in file "./lcd_8bit.h"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  string_data     1    wreg     PTR unsigned char 
   806 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(3), 
   807 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(13), 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  string_data     1    4[COMMON] PTR unsigned char 
   810 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(3), 
   811 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(13), 
   812 ;;  i               2    2[COMMON] int 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         3       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0
   825 ;;      Totals:         3       0       0       0       0
   826 ;;Total ram usage:        3 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 1
   829 ;; This function calls:
   830 ;;		_lcd_data
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836     04AF                     _lcd_string:	
   837                           ;psect for function _lcd_string
   838                           
   839                           
   840                           ;incstack = 0
   841                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   842                           ;lcd_string@string_data stored from wreg
   843     04AF  00F4               	movwf	lcd_string@string_data
   844     04B0                     l1103:
   845                           
   846                           ;./lcd_8bit.h: 41:     int i = 0;
   847     04B0  01F2               	clrf	lcd_string@i
   848     04B1  01F3               	clrf	lcd_string@i+1
   849                           
   850                           ;./lcd_8bit.h: 42:     for (i = 0; string_data[i] != 0; i++) {
   851     04B2  01F2               	clrf	lcd_string@i
   852     04B3  01F3               	clrf	lcd_string@i+1
   853     04B4  2CC8               	goto	l1109
   854     04B5                     l1105:
   855                           
   856                           ;./lcd_8bit.h: 43:         lcd_data(string_data[i]);
   857     04B5  0872               	movf	lcd_string@i,w
   858     04B6  0774               	addwf	lcd_string@string_data,w
   859     04B7  0084               	movwf	4
   860     04B8  120A  118A  2003  120A  118A  	fcall	stringdir
   861     04BD  120A  118A  23FD  120A  118A  	fcall	_lcd_data
   862     04C2                     l1107:
   863                           
   864                           ;./lcd_8bit.h: 44:     }
   865     04C2  3001               	movlw	1
   866     04C3  07F2               	addwf	lcd_string@i,f
   867     04C4  1803               	skipnc
   868     04C5  0AF3               	incf	lcd_string@i+1,f
   869     04C6  3000               	movlw	0
   870     04C7  07F3               	addwf	lcd_string@i+1,f
   871     04C8                     l1109:
   872     04C8  0872               	movf	lcd_string@i,w
   873     04C9  0774               	addwf	lcd_string@string_data,w
   874     04CA  0084               	movwf	4
   875     04CB  120A  118A  2003  120A  118A  	fcall	stringdir
   876     04D0  3A00               	xorlw	0
   877     04D1  1D03               	skipz
   878     04D2  2CD4               	goto	u541
   879     04D3  2CD5               	goto	u540
   880     04D4                     u541:
   881     04D4  2CB5               	goto	l1105
   882     04D5                     u540:
   883     04D5                     l41:
   884     04D5  0008               	return
   885     04D6                     __end_of_lcd_string:
   886                           
   887                           	psect	text2
   888     046C                     __ptext2:	
   889 ;; *************** function _lcd_setCursor *****************
   890 ;; Defined at:
   891 ;;		line 70 in file "./lcd_8bit.h"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  x               1    wreg     unsigned char 
   894 ;;  y               1    2[COMMON] unsigned char 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  x               1    3[COMMON] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         1       0       0       0       0
   907 ;;      Locals:         1       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0
   909 ;;      Totals:         2       0       0       0       0
   910 ;;Total ram usage:        2 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; Hardware stack levels required when called: 1
   913 ;; This function calls:
   914 ;;		_lcd_command
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920     046C                     _lcd_setCursor:	
   921                           ;psect for function _lcd_setCursor
   922                           
   923                           
   924                           ;incstack = 0
   925                           ; Regs used in _lcd_setCursor: [wreg+status,2+status,0+pclath+cstack]
   926                           ;lcd_setCursor@x stored from wreg
   927     046C  00F3               	movwf	lcd_setCursor@x
   928     046D                     l1135:
   929                           
   930                           ;./lcd_8bit.h: 70: void lcd_setCursor(unsigned char x, unsigned char y);./lcd_8bit.h: 71
      +                          : {;./lcd_8bit.h: 72:     if (x >= 0 && x < 16) {
   931     046D  3010               	movlw	16
   932     046E  0273               	subwf	lcd_setCursor@x,w
   933     046F  1803               	skipnc
   934     0470  2C72               	goto	u581
   935     0471  2C73               	goto	u580
   936     0472                     u581:
   937     0472  2C8C               	goto	l59
   938     0473                     u580:
   939     0473                     l1137:
   940                           
   941                           ;./lcd_8bit.h: 73:         if (y == 0)
   942     0473  0872               	movf	lcd_setCursor@y,w
   943     0474  1D03               	btfss	3,2
   944     0475  2C77               	goto	u591
   945     0476  2C78               	goto	u590
   946     0477                     u591:
   947     0477  2C80               	goto	l1141
   948     0478                     u590:
   949     0478                     l1139:
   950                           
   951                           ;./lcd_8bit.h: 74:         {;./lcd_8bit.h: 75:             lcd_command(0x80 + x);
   952     0478  0873               	movf	lcd_setCursor@x,w
   953     0479  3E80               	addlw	128
   954     047A  120A  118A  23EC  120A  118A  	fcall	_lcd_command
   955                           
   956                           ;./lcd_8bit.h: 77:         } else if (y == 1)
   957     047F  2C8C               	goto	l59
   958     0480                     l1141:
   959     0480  0372               	decf	lcd_setCursor@y,w
   960     0481  1D03               	btfss	3,2
   961     0482  2C84               	goto	u601
   962     0483  2C85               	goto	u600
   963     0484                     u601:
   964     0484  2C8C               	goto	l59
   965     0485                     u600:
   966     0485                     l1143:
   967                           
   968                           ;./lcd_8bit.h: 78:         {;./lcd_8bit.h: 79:             lcd_command(0xC0 + x);
   969     0485  0873               	movf	lcd_setCursor@x,w
   970     0486  3EC0               	addlw	192
   971     0487  120A  118A  23EC  120A  118A  	fcall	_lcd_command
   972     048C                     l59:
   973     048C  0008               	return
   974     048D                     __end_of_lcd_setCursor:
   975                           
   976                           	psect	text3
   977     0554                     __ptext3:	
   978 ;; *************** function _lcd_number *****************
   979 ;; Defined at:
   980 ;;		line 47 in file "./lcd_8bit.h"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  num             2    7[COMMON] unsigned int 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  a              32    0[BANK0 ] int [16]
   985 ;;  count           2   34[BANK0 ] int 
   986 ;;  temp            2   32[BANK0 ] unsigned int 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         2       0       0       0       0
   997 ;;      Locals:         0      36       0       0       0
   998 ;;      Temps:          1       0       0       0       0
   999 ;;      Totals:         3      36       0       0       0
  1000 ;;Total ram usage:       39 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; Hardware stack levels required when called: 1
  1003 ;; This function calls:
  1004 ;;		___lwdiv
  1005 ;;		___lwmod
  1006 ;;		_lcd_data
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012     0554                     _lcd_number:	
  1013                           ;psect for function _lcd_number
  1014                           
  1015     0554                     l1111:	
  1016                           ;incstack = 0
  1017                           ; Regs used in _lcd_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1018                           
  1019                           
  1020                           ;./lcd_8bit.h: 48:     if (num < 10)
  1021     0554  3000               	movlw	0
  1022     0555  0278               	subwf	lcd_number@num+1,w
  1023     0556  300A               	movlw	10
  1024     0557  1903               	skipnz
  1025     0558  0277               	subwf	lcd_number@num,w
  1026     0559  1803               	skipnc
  1027     055A  2D5C               	goto	u551
  1028     055B  2D5D               	goto	u550
  1029     055C                     u551:
  1030     055C  2D65               	goto	l1115
  1031     055D                     u550:
  1032     055D                     l1113:
  1033                           
  1034                           ;./lcd_8bit.h: 49:     {;./lcd_8bit.h: 50:         lcd_data(num+48);
  1035     055D  0877               	movf	lcd_number@num,w
  1036     055E  3E30               	addlw	48
  1037     055F  120A  118A  23FD  120A  118A  	fcall	_lcd_data
  1038                           
  1039                           ;./lcd_8bit.h: 51:     }
  1040     0564  2DCF               	goto	l52
  1041     0565                     l1115:
  1042                           
  1043                           ;./lcd_8bit.h: 53:         unsigned int temp;;./lcd_8bit.h: 54:         int a[16];;./lcd
      +                          _8bit.h: 55:         int count = 0;
  1044     0565  1283               	bcf	3,5	;RP0=0, select bank0
  1045     0566  1303               	bcf	3,6	;RP1=0, select bank0
  1046     0567  01C2               	clrf	lcd_number@count
  1047     0568  01C3               	clrf	lcd_number@count+1
  1048                           
  1049                           ;./lcd_8bit.h: 56:         while (num >= 10) {
  1050     0569  2DA1               	goto	l1125
  1051     056A                     l1117:
  1052                           
  1053                           ;./lcd_8bit.h: 57:             temp = num % 10;
  1054     056A  300A               	movlw	10
  1055     056B  00F0               	movwf	___lwmod@divisor
  1056     056C  3000               	movlw	0
  1057     056D  00F1               	movwf	___lwmod@divisor+1
  1058     056E  0878               	movf	lcd_number@num+1,w
  1059     056F  00F3               	movwf	___lwmod@dividend+1
  1060     0570  0877               	movf	lcd_number@num,w
  1061     0571  00F2               	movwf	___lwmod@dividend
  1062     0572  120A  118A  24D6  120A  118A  	fcall	___lwmod
  1063     0577  0871               	movf	?___lwmod+1,w
  1064     0578  1283               	bcf	3,5	;RP0=0, select bank0
  1065     0579  1303               	bcf	3,6	;RP1=0, select bank0
  1066     057A  00C1               	movwf	lcd_number@temp+1
  1067     057B  0870               	movf	?___lwmod,w
  1068     057C  00C0               	movwf	lcd_number@temp
  1069     057D                     l1119:
  1070                           
  1071                           ;./lcd_8bit.h: 58:             a[count] = temp;
  1072     057D  0842               	movf	lcd_number@count,w
  1073     057E  00F9               	movwf	??_lcd_number
  1074     057F  0779               	addwf	??_lcd_number,w
  1075     0580  3E20               	addlw	(low (lcd_number@a| 0))& (0+255)
  1076     0581  0084               	movwf	4
  1077     0582  0840               	movf	lcd_number@temp,w
  1078     0583  1383               	bcf	3,7	;select IRP bank0
  1079     0584  0080               	movwf	0
  1080     0585  0A84               	incf	4,f
  1081     0586  0841               	movf	lcd_number@temp+1,w
  1082     0587  0080               	movwf	0
  1083     0588                     l1121:
  1084                           
  1085                           ;./lcd_8bit.h: 59:             num /= 10;
  1086     0588  300A               	movlw	10
  1087     0589  00F0               	movwf	___lwdiv@divisor
  1088     058A  3000               	movlw	0
  1089     058B  00F1               	movwf	___lwdiv@divisor+1
  1090     058C  0878               	movf	lcd_number@num+1,w
  1091     058D  00F3               	movwf	___lwdiv@dividend+1
  1092     058E  0877               	movf	lcd_number@num,w
  1093     058F  00F2               	movwf	___lwdiv@dividend
  1094     0590  120A  118A  2510  120A  118A  	fcall	___lwdiv
  1095     0595  0871               	movf	?___lwdiv+1,w
  1096     0596  00F8               	movwf	lcd_number@num+1
  1097     0597  0870               	movf	?___lwdiv,w
  1098     0598  00F7               	movwf	lcd_number@num
  1099     0599                     l1123:
  1100                           
  1101                           ;./lcd_8bit.h: 60:             count++;
  1102     0599  3001               	movlw	1
  1103     059A  1283               	bcf	3,5	;RP0=0, select bank0
  1104     059B  1303               	bcf	3,6	;RP1=0, select bank0
  1105     059C  07C2               	addwf	lcd_number@count,f
  1106     059D  1803               	skipnc
  1107     059E  0AC3               	incf	lcd_number@count+1,f
  1108     059F  3000               	movlw	0
  1109     05A0  07C3               	addwf	lcd_number@count+1,f
  1110     05A1                     l1125:
  1111                           
  1112                           ;./lcd_8bit.h: 56:         while (num >= 10) {
  1113     05A1  3000               	movlw	0
  1114     05A2  0278               	subwf	lcd_number@num+1,w
  1115     05A3  300A               	movlw	10
  1116     05A4  1903               	skipnz
  1117     05A5  0277               	subwf	lcd_number@num,w
  1118     05A6  1803               	skipnc
  1119     05A7  2DA9               	goto	u561
  1120     05A8  2DAA               	goto	u560
  1121     05A9                     u561:
  1122     05A9  2D6A               	goto	l1117
  1123     05AA                     u560:
  1124     05AA                     l1127:
  1125                           
  1126                           ;./lcd_8bit.h: 62:         a[count] = num;
  1127     05AA  0842               	movf	lcd_number@count,w
  1128     05AB  00F9               	movwf	??_lcd_number
  1129     05AC  0779               	addwf	??_lcd_number,w
  1130     05AD  3E20               	addlw	(low (lcd_number@a| 0))& (0+255)
  1131     05AE  0084               	movwf	4
  1132     05AF  0877               	movf	lcd_number@num,w
  1133     05B0  1383               	bcf	3,7	;select IRP bank0
  1134     05B1  0080               	movwf	0
  1135     05B2  0A84               	incf	4,f
  1136     05B3  0878               	movf	lcd_number@num+1,w
  1137     05B4  0080               	movwf	0
  1138                           
  1139                           ;./lcd_8bit.h: 63:         while (count >= 0) {
  1140     05B5  2DCB               	goto	l1133
  1141     05B6                     l1129:
  1142                           
  1143                           ;./lcd_8bit.h: 64:             lcd_data(a[count] + 48);
  1144     05B6  0842               	movf	lcd_number@count,w
  1145     05B7  00F9               	movwf	??_lcd_number
  1146     05B8  0779               	addwf	??_lcd_number,w
  1147     05B9  3E20               	addlw	(low (lcd_number@a| 0))& (0+255)
  1148     05BA  0084               	movwf	4
  1149     05BB  1383               	bcf	3,7	;select IRP bank0
  1150     05BC  0800               	movf	0,w
  1151     05BD  3E30               	addlw	48
  1152     05BE  120A  118A  23FD  120A  118A  	fcall	_lcd_data
  1153     05C3                     l1131:
  1154                           
  1155                           ;./lcd_8bit.h: 65:             count--;
  1156     05C3  30FF               	movlw	255
  1157     05C4  1283               	bcf	3,5	;RP0=0, select bank0
  1158     05C5  1303               	bcf	3,6	;RP1=0, select bank0
  1159     05C6  07C2               	addwf	lcd_number@count,f
  1160     05C7  1803               	skipnc
  1161     05C8  0AC3               	incf	lcd_number@count+1,f
  1162     05C9  30FF               	movlw	255
  1163     05CA  07C3               	addwf	lcd_number@count+1,f
  1164     05CB                     l1133:
  1165                           
  1166                           ;./lcd_8bit.h: 63:         while (count >= 0) {
  1167     05CB  1FC3               	btfss	lcd_number@count+1,7
  1168     05CC  2DCE               	goto	u571
  1169     05CD  2DCF               	goto	u570
  1170     05CE                     u571:
  1171     05CE  2DB6               	goto	l1129
  1172     05CF                     u570:
  1173     05CF                     l52:
  1174     05CF  0008               	return
  1175     05D0                     __end_of_lcd_number:
  1176                           
  1177                           	psect	text4
  1178     03FD                     __ptext4:	
  1179 ;; *************** function _lcd_data *****************
  1180 ;; Defined at:
  1181 ;;		line 23 in file "./lcd_8bit.h"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  Data            1    wreg     unsigned char 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  Data            1    1[COMMON] unsigned char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1195 ;;      Params:         0       0       0       0       0
  1196 ;;      Locals:         1       0       0       0       0
  1197 ;;      Temps:          1       0       0       0       0
  1198 ;;      Totals:         2       0       0       0       0
  1199 ;;Total ram usage:        2 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_lcd_string
  1205 ;;		_lcd_number
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209     03FD                     _lcd_data:	
  1210                           ;psect for function _lcd_data
  1211                           
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in _lcd_data: [wreg]
  1215                           ;lcd_data@Data stored from wreg
  1216     03FD  00F1               	movwf	lcd_data@Data
  1217     03FE                     l1017:
  1218                           
  1219                           ;./lcd_8bit.h: 24:     PORTCbits.RC0 = 1;
  1220     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1221     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1222     0400  1407               	bsf	7,0	;volatile
  1223                           
  1224                           ;./lcd_8bit.h: 25:     PORTCbits.RC1 = 0;
  1225     0401  1087               	bcf	7,1	;volatile
  1226                           
  1227                           ;./lcd_8bit.h: 26:     PORTCbits.RC2 = 1;
  1228     0402  1507               	bsf	7,2	;volatile
  1229     0403                     l1019:
  1230                           
  1231                           ;./lcd_8bit.h: 27:     PORTD = Data;
  1232     0403  0871               	movf	lcd_data@Data,w
  1233     0404  0088               	movwf	8	;volatile
  1234     0405                     l1021:
  1235                           
  1236                           ;./lcd_8bit.h: 28:     PORTCbits.RC2 = 0;
  1237     0405  1107               	bcf	7,2	;volatile
  1238                           
  1239                           ;./lcd_8bit.h: 29:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1240     0406  30C7               	movlw	199
  1241     0407  00F0               	movwf	??_lcd_data
  1242     0408                     u637:
  1243     0408  2C09               	nop2
  1244     0409  0BF0               	decfsz	??_lcd_data,f
  1245     040A  2C08               	goto	u637
  1246     040B  2C0C               	nop2
  1247     040C  2C0D               	nop2
  1248     040D                     l32:
  1249     040D  0008               	return
  1250     040E                     __end_of_lcd_data:
  1251                           
  1252                           	psect	text5
  1253     04D6                     __ptext5:	
  1254 ;; *************** function ___lwmod *****************
  1255 ;; Defined at:
  1256 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  divisor         2    0[COMMON] unsigned int 
  1259 ;;  dividend        2    2[COMMON] unsigned int 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  counter         1    4[COMMON] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  2    0[COMMON] unsigned int 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, btemp+1
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         4       0       0       0       0
  1272 ;;      Locals:         1       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0
  1274 ;;      Totals:         5       0       0       0       0
  1275 ;;Total ram usage:        5 bytes
  1276 ;; Hardware stack levels used: 1
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_lcd_number
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284     04D6                     ___lwmod:	
  1285                           ;psect for function ___lwmod
  1286                           
  1287     04D6                     l1079:	
  1288                           ;incstack = 0
  1289                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1290                           
  1291     04D6  0870               	movf	___lwmod@divisor,w
  1292     04D7  0471               	iorwf	___lwmod@divisor+1,w
  1293     04D8  1903               	btfsc	3,2
  1294     04D9  2CDB               	goto	u481
  1295     04DA  2CDC               	goto	u480
  1296     04DB                     u481:
  1297     04DB  2D0B               	goto	l1097
  1298     04DC                     u480:
  1299     04DC                     l1081:
  1300     04DC  01F4               	clrf	___lwmod@counter
  1301     04DD  0AF4               	incf	___lwmod@counter,f
  1302     04DE  2CEA               	goto	l1087
  1303     04DF                     l1083:
  1304     04DF  3001               	movlw	1
  1305     04E0                     u495:
  1306     04E0  1003               	clrc
  1307     04E1  0DF0               	rlf	___lwmod@divisor,f
  1308     04E2  0DF1               	rlf	___lwmod@divisor+1,f
  1309     04E3  3EFF               	addlw	-1
  1310     04E4  1D03               	skipz
  1311     04E5  2CE0               	goto	u495
  1312     04E6                     l1085:
  1313     04E6  3001               	movlw	1
  1314     04E7  00FF               	movwf	btemp+1
  1315     04E8  087F               	movf	btemp+1,w
  1316     04E9  07F4               	addwf	___lwmod@counter,f
  1317     04EA                     l1087:
  1318     04EA  1FF1               	btfss	___lwmod@divisor+1,7
  1319     04EB  2CED               	goto	u501
  1320     04EC  2CEE               	goto	u500
  1321     04ED                     u501:
  1322     04ED  2CDF               	goto	l1083
  1323     04EE                     u500:
  1324     04EE                     l1089:
  1325     04EE  0871               	movf	___lwmod@divisor+1,w
  1326     04EF  0273               	subwf	___lwmod@dividend+1,w
  1327     04F0  1D03               	skipz
  1328     04F1  2CF4               	goto	u515
  1329     04F2  0870               	movf	___lwmod@divisor,w
  1330     04F3  0272               	subwf	___lwmod@dividend,w
  1331     04F4                     u515:
  1332     04F4  1C03               	skipc
  1333     04F5  2CF7               	goto	u511
  1334     04F6  2CF8               	goto	u510
  1335     04F7                     u511:
  1336     04F7  2CFE               	goto	l1093
  1337     04F8                     u510:
  1338     04F8                     l1091:
  1339     04F8  0870               	movf	___lwmod@divisor,w
  1340     04F9  02F2               	subwf	___lwmod@dividend,f
  1341     04FA  0871               	movf	___lwmod@divisor+1,w
  1342     04FB  1C03               	skipc
  1343     04FC  03F3               	decf	___lwmod@dividend+1,f
  1344     04FD  02F3               	subwf	___lwmod@dividend+1,f
  1345     04FE                     l1093:
  1346     04FE  3001               	movlw	1
  1347     04FF                     u525:
  1348     04FF  1003               	clrc
  1349     0500  0CF1               	rrf	___lwmod@divisor+1,f
  1350     0501  0CF0               	rrf	___lwmod@divisor,f
  1351     0502  3EFF               	addlw	-1
  1352     0503  1D03               	skipz
  1353     0504  2CFF               	goto	u525
  1354     0505                     l1095:
  1355     0505  3001               	movlw	1
  1356     0506  02F4               	subwf	___lwmod@counter,f
  1357     0507  1D03               	btfss	3,2
  1358     0508  2D0A               	goto	u531
  1359     0509  2D0B               	goto	u530
  1360     050A                     u531:
  1361     050A  2CEE               	goto	l1089
  1362     050B                     u530:
  1363     050B                     l1097:
  1364     050B  0873               	movf	___lwmod@dividend+1,w
  1365     050C  00F1               	movwf	?___lwmod+1
  1366     050D  0872               	movf	___lwmod@dividend,w
  1367     050E  00F0               	movwf	?___lwmod
  1368     050F                     l509:
  1369     050F  0008               	return
  1370     0510                     __end_of___lwmod:
  1371                           
  1372                           	psect	text6
  1373     0510                     __ptext6:	
  1374 ;; *************** function ___lwdiv *****************
  1375 ;; Defined at:
  1376 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  divisor         2    0[COMMON] unsigned int 
  1379 ;;  dividend        2    2[COMMON] unsigned int 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  quotient        2    4[COMMON] unsigned int 
  1382 ;;  counter         1    6[COMMON] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  2    0[COMMON] unsigned int 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0, btemp+1
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1392 ;;      Params:         4       0       0       0       0
  1393 ;;      Locals:         3       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0
  1395 ;;      Totals:         7       0       0       0       0
  1396 ;;Total ram usage:        7 bytes
  1397 ;; Hardware stack levels used: 1
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_lcd_number
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405     0510                     ___lwdiv:	
  1406                           ;psect for function ___lwdiv
  1407                           
  1408     0510                     l1053:	
  1409                           ;incstack = 0
  1410                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1411                           
  1412     0510  01F4               	clrf	___lwdiv@quotient
  1413     0511  01F5               	clrf	___lwdiv@quotient+1
  1414     0512                     l1055:
  1415     0512  0870               	movf	___lwdiv@divisor,w
  1416     0513  0471               	iorwf	___lwdiv@divisor+1,w
  1417     0514  1903               	btfsc	3,2
  1418     0515  2D17               	goto	u411
  1419     0516  2D18               	goto	u410
  1420     0517                     u411:
  1421     0517  2D4F               	goto	l1075
  1422     0518                     u410:
  1423     0518                     l1057:
  1424     0518  01F6               	clrf	___lwdiv@counter
  1425     0519  0AF6               	incf	___lwdiv@counter,f
  1426     051A  2D26               	goto	l1063
  1427     051B                     l1059:
  1428     051B  3001               	movlw	1
  1429     051C                     u425:
  1430     051C  1003               	clrc
  1431     051D  0DF0               	rlf	___lwdiv@divisor,f
  1432     051E  0DF1               	rlf	___lwdiv@divisor+1,f
  1433     051F  3EFF               	addlw	-1
  1434     0520  1D03               	skipz
  1435     0521  2D1C               	goto	u425
  1436     0522                     l1061:
  1437     0522  3001               	movlw	1
  1438     0523  00FF               	movwf	btemp+1
  1439     0524  087F               	movf	btemp+1,w
  1440     0525  07F6               	addwf	___lwdiv@counter,f
  1441     0526                     l1063:
  1442     0526  1FF1               	btfss	___lwdiv@divisor+1,7
  1443     0527  2D29               	goto	u431
  1444     0528  2D2A               	goto	u430
  1445     0529                     u431:
  1446     0529  2D1B               	goto	l1059
  1447     052A                     u430:
  1448     052A                     l1065:
  1449     052A  3001               	movlw	1
  1450     052B                     u445:
  1451     052B  1003               	clrc
  1452     052C  0DF4               	rlf	___lwdiv@quotient,f
  1453     052D  0DF5               	rlf	___lwdiv@quotient+1,f
  1454     052E  3EFF               	addlw	-1
  1455     052F  1D03               	skipz
  1456     0530  2D2B               	goto	u445
  1457     0531  0871               	movf	___lwdiv@divisor+1,w
  1458     0532  0273               	subwf	___lwdiv@dividend+1,w
  1459     0533  1D03               	skipz
  1460     0534  2D37               	goto	u455
  1461     0535  0870               	movf	___lwdiv@divisor,w
  1462     0536  0272               	subwf	___lwdiv@dividend,w
  1463     0537                     u455:
  1464     0537  1C03               	skipc
  1465     0538  2D3A               	goto	u451
  1466     0539  2D3B               	goto	u450
  1467     053A                     u451:
  1468     053A  2D42               	goto	l1071
  1469     053B                     u450:
  1470     053B                     l1067:
  1471     053B  0870               	movf	___lwdiv@divisor,w
  1472     053C  02F2               	subwf	___lwdiv@dividend,f
  1473     053D  0871               	movf	___lwdiv@divisor+1,w
  1474     053E  1C03               	skipc
  1475     053F  03F3               	decf	___lwdiv@dividend+1,f
  1476     0540  02F3               	subwf	___lwdiv@dividend+1,f
  1477     0541                     l1069:
  1478     0541  1474               	bsf	___lwdiv@quotient,0
  1479     0542                     l1071:
  1480     0542  3001               	movlw	1
  1481     0543                     u465:
  1482     0543  1003               	clrc
  1483     0544  0CF1               	rrf	___lwdiv@divisor+1,f
  1484     0545  0CF0               	rrf	___lwdiv@divisor,f
  1485     0546  3EFF               	addlw	-1
  1486     0547  1D03               	skipz
  1487     0548  2D43               	goto	u465
  1488     0549                     l1073:
  1489     0549  3001               	movlw	1
  1490     054A  02F6               	subwf	___lwdiv@counter,f
  1491     054B  1D03               	btfss	3,2
  1492     054C  2D4E               	goto	u471
  1493     054D  2D4F               	goto	u470
  1494     054E                     u471:
  1495     054E  2D2A               	goto	l1065
  1496     054F                     u470:
  1497     054F                     l1075:
  1498     054F  0875               	movf	___lwdiv@quotient+1,w
  1499     0550  00F1               	movwf	?___lwdiv+1
  1500     0551  0874               	movf	___lwdiv@quotient,w
  1501     0552  00F0               	movwf	?___lwdiv
  1502     0553                     l499:
  1503     0553  0008               	return
  1504     0554                     __end_of___lwdiv:
  1505                           
  1506                           	psect	text7
  1507     0439                     __ptext7:	
  1508 ;; *************** function _lcd_init *****************
  1509 ;; Defined at:
  1510 ;;		line 32 in file "./lcd_8bit.h"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, pclath, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 1
  1531 ;; This function calls:
  1532 ;;		_lcd_command
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538     0439                     _lcd_init:	
  1539                           ;psect for function _lcd_init
  1540                           
  1541     0439                     l1101:	
  1542                           ;incstack = 0
  1543                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1544                           
  1545                           
  1546                           ;./lcd_8bit.h: 34:     lcd_command(0x0C);
  1547     0439  300C               	movlw	12
  1548     043A  120A  118A  23EC  120A  118A  	fcall	_lcd_command
  1549                           
  1550                           ;./lcd_8bit.h: 35:     lcd_command(0x38);
  1551     043F  3038               	movlw	56
  1552     0440  120A  118A  23EC  120A  118A  	fcall	_lcd_command
  1553                           
  1554                           ;./lcd_8bit.h: 36:     lcd_command(0x80);
  1555     0445  3080               	movlw	128
  1556     0446  120A  118A  23EC  120A  118A  	fcall	_lcd_command
  1557                           
  1558                           ;./lcd_8bit.h: 37:     lcd_command(0x01);
  1559     044B  3001               	movlw	1
  1560     044C  120A  118A  23EC  120A  118A  	fcall	_lcd_command
  1561     0451                     l35:
  1562     0451  0008               	return
  1563     0452                     __end_of_lcd_init:
  1564                           
  1565                           	psect	text8
  1566     03EC                     __ptext8:	
  1567 ;; *************** function _lcd_command *****************
  1568 ;; Defined at:
  1569 ;;		line 14 in file "./lcd_8bit.h"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  cmd             1    wreg     unsigned char 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  cmd             1    1[COMMON] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       0       0       0       0
  1584 ;;      Locals:         1       0       0       0       0
  1585 ;;      Temps:          1       0       0       0       0
  1586 ;;      Totals:         2       0       0       0       0
  1587 ;;Total ram usage:        2 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_lcd_init
  1593 ;;		_lcd_setCursor
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598     03EC                     _lcd_command:	
  1599                           ;psect for function _lcd_command
  1600                           
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _lcd_command: [wreg]
  1604                           ;lcd_command@cmd stored from wreg
  1605     03EC  00F1               	movwf	lcd_command@cmd
  1606     03ED                     l1011:
  1607                           
  1608                           ;./lcd_8bit.h: 15:     PORTCbits.RC0 = 0x00;
  1609     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1610     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1611     03EF  1007               	bcf	7,0	;volatile
  1612                           
  1613                           ;./lcd_8bit.h: 16:     PORTCbits.RC1 = 0x00;
  1614     03F0  1087               	bcf	7,1	;volatile
  1615                           
  1616                           ;./lcd_8bit.h: 17:     PORTCbits.RC2 = 0x01;
  1617     03F1  1507               	bsf	7,2	;volatile
  1618     03F2                     l1013:
  1619                           
  1620                           ;./lcd_8bit.h: 18:     PORTD = cmd;
  1621     03F2  0871               	movf	lcd_command@cmd,w
  1622     03F3  0088               	movwf	8	;volatile
  1623     03F4                     l1015:
  1624                           
  1625                           ;./lcd_8bit.h: 19:     PORTCbits.RC2 = 0;
  1626     03F4  1107               	bcf	7,2	;volatile
  1627                           
  1628                           ;./lcd_8bit.h: 20:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1629     03F5  30C7               	movlw	199
  1630     03F6  00F0               	movwf	??_lcd_command
  1631     03F7                     u647:
  1632     03F7  2BF8               	nop2
  1633     03F8  0BF0               	decfsz	??_lcd_command,f
  1634     03F9  2BF7               	goto	u647
  1635     03FA  2BFB               	nop2
  1636     03FB  2BFC               	nop2
  1637     03FC                     l29:
  1638     03FC  0008               	return
  1639     03FD                     __end_of_lcd_command:
  1640                           
  1641                           	psect	text9
  1642     06AB                     __ptext9:	
  1643 ;; *************** function _i2c_readTime *****************
  1644 ;; Defined at:
  1645 ;;		line 50 in file "./ds1307.h"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1659 ;;      Params:         0       0       0       0       0
  1660 ;;      Locals:         0       0       0       0       0
  1661 ;;      Temps:          0       0       0       0       0
  1662 ;;      Totals:         0       0       0       0       0
  1663 ;;Total ram usage:        0 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 2
  1666 ;; This function calls:
  1667 ;;		_BCD_To_Decimal
  1668 ;;		_i2c_read
  1669 ;;		_i2c_repeat_start
  1670 ;;		_i2c_start
  1671 ;;		_i2c_stop
  1672 ;;		_i2c_write
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678     06AB                     _i2c_readTime:	
  1679                           ;psect for function _i2c_readTime
  1680                           
  1681     06AB                     l1155:	
  1682                           ;incstack = 0
  1683                           ; Regs used in _i2c_readTime: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1684                           
  1685                           
  1686                           ;./ds1307.h: 65:     i2c_start();
  1687     06AB  120A  118A  23BB  120A  118A  	fcall	_i2c_start
  1688     06B0                     l1157:
  1689                           
  1690                           ;./ds1307.h: 66:     i2c_write(0xD0);
  1691     06B0  30D0               	movlw	208
  1692     06B1  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1693     06B6                     l1159:
  1694                           
  1695                           ;./ds1307.h: 67:     i2c_write(0x00);
  1696     06B6  3000               	movlw	0
  1697     06B7  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1698                           
  1699                           ;./ds1307.h: 68:     i2c_repeat_start();
  1700     06BC  120A  118A  23CB  120A  118A  	fcall	_i2c_repeat_start
  1701     06C1                     l1161:
  1702                           
  1703                           ;./ds1307.h: 69:     i2c_write(0xD1);
  1704     06C1  30D1               	movlw	209
  1705     06C2  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1706     06C7                     l1163:
  1707                           
  1708                           ;./ds1307.h: 70:     second = BCD_To_Decimal(i2c_read(1));
  1709     06C7  3001               	movlw	1
  1710     06C8  120A  118A  2452  120A  118A  	fcall	_i2c_read
  1711     06CD  120A  118A  2423  120A  118A  	fcall	_BCD_To_Decimal
  1712     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1713     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1714     06D4  00C9               	movwf	_second
  1715     06D5                     l1165:
  1716                           
  1717                           ;./ds1307.h: 71:     i2c_stop();
  1718     06D5  120A  118A  23C3  120A  118A  	fcall	_i2c_stop
  1719     06DA                     l1167:
  1720                           
  1721                           ;./ds1307.h: 73:     i2c_start();
  1722     06DA  120A  118A  23BB  120A  118A  	fcall	_i2c_start
  1723     06DF                     l1169:
  1724                           
  1725                           ;./ds1307.h: 74:     i2c_write(0xD0);
  1726     06DF  30D0               	movlw	208
  1727     06E0  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1728     06E5                     l1171:
  1729                           
  1730                           ;./ds1307.h: 75:     i2c_write(0x01);
  1731     06E5  3001               	movlw	1
  1732     06E6  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1733     06EB                     l1173:
  1734                           
  1735                           ;./ds1307.h: 76:     i2c_repeat_start();
  1736     06EB  120A  118A  23CB  120A  118A  	fcall	_i2c_repeat_start
  1737     06F0                     l1175:
  1738                           
  1739                           ;./ds1307.h: 77:     i2c_write(0xD1);
  1740     06F0  30D1               	movlw	209
  1741     06F1  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1742                           
  1743                           ;./ds1307.h: 78:     minute = BCD_To_Decimal(i2c_read(1));
  1744     06F6  3001               	movlw	1
  1745     06F7  120A  118A  2452  120A  118A  	fcall	_i2c_read
  1746     06FC  120A  118A  2423  120A  118A  	fcall	_BCD_To_Decimal
  1747     0701  1283               	bcf	3,5	;RP0=0, select bank0
  1748     0702  1303               	bcf	3,6	;RP1=0, select bank0
  1749     0703  00C8               	movwf	_minute
  1750     0704                     l1177:
  1751                           
  1752                           ;./ds1307.h: 79:     i2c_stop();
  1753     0704  120A  118A  23C3  120A  118A  	fcall	_i2c_stop
  1754     0709                     l1179:
  1755                           
  1756                           ;./ds1307.h: 81:     i2c_start();
  1757     0709  120A  118A  23BB  120A  118A  	fcall	_i2c_start
  1758     070E                     l1181:
  1759                           
  1760                           ;./ds1307.h: 82:     i2c_write(0xD0);
  1761     070E  30D0               	movlw	208
  1762     070F  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1763     0714                     l1183:
  1764                           
  1765                           ;./ds1307.h: 83:     i2c_write(0x02);
  1766     0714  3002               	movlw	2
  1767     0715  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1768     071A                     l1185:
  1769                           
  1770                           ;./ds1307.h: 84:     i2c_repeat_start();
  1771     071A  120A  118A  23CB  120A  118A  	fcall	_i2c_repeat_start
  1772     071F                     l1187:
  1773                           
  1774                           ;./ds1307.h: 85:     i2c_write(0xD1);
  1775     071F  30D1               	movlw	209
  1776     0720  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1777     0725                     l1189:
  1778                           
  1779                           ;./ds1307.h: 86:     hour = BCD_To_Decimal(i2c_read(1));
  1780     0725  3001               	movlw	1
  1781     0726  120A  118A  2452  120A  118A  	fcall	_i2c_read
  1782     072B  120A  118A  2423  120A  118A  	fcall	_BCD_To_Decimal
  1783     0730  1283               	bcf	3,5	;RP0=0, select bank0
  1784     0731  1303               	bcf	3,6	;RP1=0, select bank0
  1785     0732  00C7               	movwf	_hour
  1786     0733                     l1191:
  1787                           
  1788                           ;./ds1307.h: 87:     i2c_stop();
  1789     0733  120A  118A  23C3  120A  118A  	fcall	_i2c_stop
  1790     0738                     l1193:
  1791                           
  1792                           ;./ds1307.h: 89:     i2c_start();
  1793     0738  120A  118A  23BB  120A  118A  	fcall	_i2c_start
  1794     073D                     l1195:
  1795                           
  1796                           ;./ds1307.h: 90:     i2c_write(0xD0);
  1797     073D  30D0               	movlw	208
  1798     073E  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1799     0743                     l1197:
  1800                           
  1801                           ;./ds1307.h: 91:     i2c_write(0x03);
  1802     0743  3003               	movlw	3
  1803     0744  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1804     0749                     l1199:
  1805                           
  1806                           ;./ds1307.h: 92:     i2c_repeat_start();
  1807     0749  120A  118A  23CB  120A  118A  	fcall	_i2c_repeat_start
  1808                           
  1809                           ;./ds1307.h: 93:     i2c_write(0xD1);
  1810     074E  30D1               	movlw	209
  1811     074F  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1812     0754                     l1201:
  1813                           
  1814                           ;./ds1307.h: 94:     weekDay = BCD_To_Decimal(i2c_read(1));
  1815     0754  3001               	movlw	1
  1816     0755  120A  118A  2452  120A  118A  	fcall	_i2c_read
  1817     075A  120A  118A  2423  120A  118A  	fcall	_BCD_To_Decimal
  1818     075F  00FD               	movwf	_weekDay
  1819     0760                     l1203:
  1820                           
  1821                           ;./ds1307.h: 95:     i2c_stop();
  1822     0760  120A  118A  23C3  120A  118A  	fcall	_i2c_stop
  1823     0765                     l1205:
  1824                           
  1825                           ;./ds1307.h: 97:     i2c_start();
  1826     0765  120A  118A  23BB  120A  118A  	fcall	_i2c_start
  1827     076A                     l1207:
  1828                           
  1829                           ;./ds1307.h: 98:     i2c_write(0xD0);
  1830     076A  30D0               	movlw	208
  1831     076B  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1832     0770                     l1209:
  1833                           
  1834                           ;./ds1307.h: 99:     i2c_write(0x04);
  1835     0770  3004               	movlw	4
  1836     0771  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1837     0776                     l1211:
  1838                           
  1839                           ;./ds1307.h: 100:     i2c_repeat_start();
  1840     0776  120A  118A  23CB  120A  118A  	fcall	_i2c_repeat_start
  1841     077B                     l1213:
  1842                           
  1843                           ;./ds1307.h: 101:     i2c_write(0xD1);
  1844     077B  30D1               	movlw	209
  1845     077C  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1846     0781                     l1215:
  1847                           
  1848                           ;./ds1307.h: 102:     day = BCD_To_Decimal(i2c_read(1));
  1849     0781  3001               	movlw	1
  1850     0782  120A  118A  2452  120A  118A  	fcall	_i2c_read
  1851     0787  120A  118A  2423  120A  118A  	fcall	_BCD_To_Decimal
  1852     078C  1283               	bcf	3,5	;RP0=0, select bank0
  1853     078D  1303               	bcf	3,6	;RP1=0, select bank0
  1854     078E  00C6               	movwf	_day
  1855                           
  1856                           ;./ds1307.h: 103:     i2c_stop();
  1857     078F  120A  118A  23C3  120A  118A  	fcall	_i2c_stop
  1858                           
  1859                           ;./ds1307.h: 105:     i2c_start();
  1860     0794  120A  118A  23BB  120A  118A  	fcall	_i2c_start
  1861     0799                     l1217:
  1862                           
  1863                           ;./ds1307.h: 106:     i2c_write(0xD0);
  1864     0799  30D0               	movlw	208
  1865     079A  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1866     079F                     l1219:
  1867                           
  1868                           ;./ds1307.h: 107:     i2c_write(0x05);
  1869     079F  3005               	movlw	5
  1870     07A0  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1871                           
  1872                           ;./ds1307.h: 108:     i2c_repeat_start();
  1873     07A5  120A  118A  23CB  120A  118A  	fcall	_i2c_repeat_start
  1874     07AA                     l1221:
  1875                           
  1876                           ;./ds1307.h: 109:     i2c_write(0xD1);
  1877     07AA  30D1               	movlw	209
  1878     07AB  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1879     07B0                     l1223:
  1880                           
  1881                           ;./ds1307.h: 110:     month = BCD_To_Decimal(i2c_read(1));
  1882     07B0  3001               	movlw	1
  1883     07B1  120A  118A  2452  120A  118A  	fcall	_i2c_read
  1884     07B6  120A  118A  2423  120A  118A  	fcall	_BCD_To_Decimal
  1885     07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1886     07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1887     07BD  00C5               	movwf	_month
  1888     07BE                     l1225:
  1889                           
  1890                           ;./ds1307.h: 111:     i2c_stop();
  1891     07BE  120A  118A  23C3  120A  118A  	fcall	_i2c_stop
  1892     07C3                     l1227:
  1893                           
  1894                           ;./ds1307.h: 113:     i2c_start();
  1895     07C3  120A  118A  23BB  120A  118A  	fcall	_i2c_start
  1896     07C8                     l1229:
  1897                           
  1898                           ;./ds1307.h: 114:     i2c_write(0xD0);
  1899     07C8  30D0               	movlw	208
  1900     07C9  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1901     07CE                     l1231:
  1902                           
  1903                           ;./ds1307.h: 115:     i2c_write(0x06);
  1904     07CE  3006               	movlw	6
  1905     07CF  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1906     07D4                     l1233:
  1907                           
  1908                           ;./ds1307.h: 116:     i2c_repeat_start();
  1909     07D4  120A  118A  23CB  120A  118A  	fcall	_i2c_repeat_start
  1910     07D9                     l1235:
  1911                           
  1912                           ;./ds1307.h: 117:     i2c_write(0xD1);
  1913     07D9  30D1               	movlw	209
  1914     07DA  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  1915                           
  1916                           ;./ds1307.h: 118:     year = BCD_To_Decimal(i2c_read(1));
  1917     07DF  3001               	movlw	1
  1918     07E0  120A  118A  2452  120A  118A  	fcall	_i2c_read
  1919     07E5  120A  118A  2423  120A  118A  	fcall	_BCD_To_Decimal
  1920     07EA  1283               	bcf	3,5	;RP0=0, select bank0
  1921     07EB  1303               	bcf	3,6	;RP1=0, select bank0
  1922     07EC  00C4               	movwf	_year
  1923     07ED                     l1237:
  1924                           
  1925                           ;./ds1307.h: 119:     i2c_stop();
  1926     07ED  120A  118A  23C3  120A  118A  	fcall	_i2c_stop
  1927     07F2                     l123:
  1928     07F2  0008               	return
  1929     07F3                     __end_of_i2c_readTime:
  1930                           
  1931                           	psect	text10
  1932     03CB                     __ptext10:	
  1933 ;; *************** function _i2c_repeat_start *****************
  1934 ;; Defined at:
  1935 ;;		line 22 in file "./i2c.h"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		None
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1949 ;;      Params:         0       0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0
  1951 ;;      Temps:          0       0       0       0       0
  1952 ;;      Totals:         0       0       0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_i2c_readTime
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962     03CB                     _i2c_repeat_start:	
  1963                           ;psect for function _i2c_repeat_start
  1964                           
  1965     03CB                     l1029:	
  1966                           ;incstack = 0
  1967                           ; Regs used in _i2c_repeat_start: []
  1968                           
  1969                           
  1970                           ;./i2c.h: 24:     RSEN = 1;
  1971     03CB  1683               	bsf	3,5	;RP0=1, select bank1
  1972     03CC  1303               	bcf	3,6	;RP1=0, select bank1
  1973     03CD  1491               	bsf	17,1	;volatile
  1974     03CE                     l71:	
  1975                           ;./i2c.h: 25:     while(RSEN);
  1976                           
  1977     03CE  1891               	btfsc	17,1	;volatile
  1978     03CF  2BD1               	goto	u351
  1979     03D0  2BD2               	goto	u350
  1980     03D1                     u351:
  1981     03D1  2BCE               	goto	l71
  1982     03D2                     u350:
  1983     03D2                     l74:
  1984     03D2  0008               	return
  1985     03D3                     __end_of_i2c_repeat_start:
  1986                           
  1987                           	psect	text11
  1988     0452                     __ptext11:	
  1989 ;; *************** function _i2c_read *****************
  1990 ;; Defined at:
  1991 ;;		line 38 in file "./i2c.h"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  u8Ack           1    wreg     unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  u8Ack           1    0[COMMON] unsigned char 
  1996 ;;  tmp             1    1[COMMON] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      unsigned char 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2006 ;;      Params:         0       0       0       0       0
  2007 ;;      Locals:         2       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0
  2009 ;;      Totals:         2       0       0       0       0
  2010 ;;Total ram usage:        2 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_i2c_readTime
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019     0452                     _i2c_read:	
  2020                           ;psect for function _i2c_read
  2021                           
  2022                           
  2023                           ;incstack = 0
  2024                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  2025                           ;i2c_read@u8Ack stored from wreg
  2026     0452  00F0               	movwf	i2c_read@u8Ack
  2027     0453                     l1035:
  2028                           
  2029                           ;./i2c.h: 39:     uint8_t tmp;;./i2c.h: 41:     SSPCON2bits.RCEN = 1;
  2030     0453  1683               	bsf	3,5	;RP0=1, select bank1
  2031     0454  1303               	bcf	3,6	;RP1=0, select bank1
  2032     0455  1591               	bsf	17,3	;volatile
  2033     0456                     l89:	
  2034                           ;./i2c.h: 42:     while(BF == 0);
  2035                           
  2036     0456  1C14               	btfss	20,0	;volatile
  2037     0457  2C59               	goto	u381
  2038     0458  2C5A               	goto	u380
  2039     0459                     u381:
  2040     0459  2C56               	goto	l89
  2041     045A                     u380:
  2042     045A                     l1037:
  2043                           
  2044                           ;./i2c.h: 43:     tmp = SSPBUF;
  2045     045A  1283               	bcf	3,5	;RP0=0, select bank0
  2046     045B  1303               	bcf	3,6	;RP1=0, select bank0
  2047     045C  0813               	movf	19,w	;volatile
  2048     045D  00F1               	movwf	i2c_read@tmp
  2049     045E                     l1039:
  2050                           
  2051                           ;./i2c.h: 44:     SSPCON2bits.RCEN = 0;
  2052     045E  1683               	bsf	3,5	;RP0=1, select bank1
  2053     045F  1303               	bcf	3,6	;RP1=0, select bank1
  2054     0460  1191               	bcf	17,3	;volatile
  2055     0461                     l1041:
  2056                           
  2057                           ;./i2c.h: 45:     if (u8Ack) {
  2058     0461  0870               	movf	i2c_read@u8Ack,w
  2059     0462  1903               	btfsc	3,2
  2060     0463  2C65               	goto	u391
  2061     0464  2C66               	goto	u390
  2062     0465                     u391:
  2063     0465  2C68               	goto	l92
  2064     0466                     u390:
  2065     0466                     l1043:
  2066                           
  2067                           ;./i2c.h: 46:         SSPCON2bits.ACKDT = 1;
  2068     0466  1691               	bsf	17,5	;volatile
  2069                           
  2070                           ;./i2c.h: 47:     } else {
  2071     0467  2C69               	goto	l93
  2072     0468                     l92:
  2073                           
  2074                           ;./i2c.h: 48:         SSPCON2bits.ACKDT = 0;
  2075     0468  1291               	bcf	17,5	;volatile
  2076     0469                     l93:	
  2077                           ;./i2c.h: 49:     }
  2078                           
  2079                           
  2080                           ;./i2c.h: 51:     SSPCON2bits.ACKEN = 1;
  2081     0469  1611               	bsf	17,4	;volatile
  2082     046A                     l1045:
  2083                           
  2084                           ;./i2c.h: 54:     return tmp;
  2085     046A  0871               	movf	i2c_read@tmp,w
  2086     046B                     l94:
  2087     046B  0008               	return
  2088     046C                     __end_of_i2c_read:
  2089                           
  2090                           	psect	text12
  2091     0423                     __ptext12:	
  2092 ;; *************** function _BCD_To_Decimal *****************
  2093 ;; Defined at:
  2094 ;;		line 24 in file "./ds1307.h"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  number          1    wreg     unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  number          1    5[COMMON] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      unsigned char 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         0       0       0       0       0
  2109 ;;      Locals:         1       0       0       0       0
  2110 ;;      Temps:          2       0       0       0       0
  2111 ;;      Totals:         3       0       0       0       0
  2112 ;;Total ram usage:        3 bytes
  2113 ;; Hardware stack levels used: 1
  2114 ;; Hardware stack levels required when called: 1
  2115 ;; This function calls:
  2116 ;;		___bmul
  2117 ;; This function is called by:
  2118 ;;		_i2c_readTime
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122     0423                     _BCD_To_Decimal:	
  2123                           ;psect for function _BCD_To_Decimal
  2124                           
  2125                           
  2126                           ;incstack = 0
  2127                           ; Regs used in _BCD_To_Decimal: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2128                           ;BCD_To_Decimal@number stored from wreg
  2129     0423  00F5               	movwf	BCD_To_Decimal@number
  2130     0424                     l1049:
  2131                           
  2132                           ;./ds1307.h: 25:     return ((number >> 4)*10 + (number & 0x0F));
  2133     0424  300F               	movlw	15
  2134     0425  0575               	andwf	BCD_To_Decimal@number,w
  2135     0426  00F3               	movwf	??_BCD_To_Decimal
  2136     0427  300A               	movlw	10
  2137     0428  00F0               	movwf	___bmul@multiplicand
  2138     0429  0875               	movf	BCD_To_Decimal@number,w
  2139     042A  00F4               	movwf	??_BCD_To_Decimal+1
  2140     042B  3004               	movlw	4
  2141     042C                     u405:
  2142     042C  1003               	clrc
  2143     042D  0CF4               	rrf	??_BCD_To_Decimal+1,f
  2144     042E  3EFF               	addlw	-1
  2145     042F  1D03               	skipz
  2146     0430  2C2C               	goto	u405
  2147     0431  0874               	movf	??_BCD_To_Decimal+1,w
  2148     0432  120A  118A  240E  120A  118A  	fcall	___bmul
  2149     0437  0773               	addwf	??_BCD_To_Decimal,w
  2150     0438                     l114:
  2151     0438  0008               	return
  2152     0439                     __end_of_BCD_To_Decimal:
  2153                           
  2154                           	psect	text13
  2155     040E                     __ptext13:	
  2156 ;; *************** function ___bmul *****************
  2157 ;; Defined at:
  2158 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  multiplier      1    wreg     unsigned char 
  2161 ;;  multiplicand    1    0[COMMON] unsigned char 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  multiplier      1    2[COMMON] unsigned char 
  2164 ;;  product         1    1[COMMON] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      unsigned char 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0, btemp+1
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2174 ;;      Params:         1       0       0       0       0
  2175 ;;      Locals:         2       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0
  2177 ;;      Totals:         3       0       0       0       0
  2178 ;;Total ram usage:        3 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_BCD_To_Decimal
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187     040E                     ___bmul:	
  2188                           ;psect for function ___bmul
  2189                           
  2190                           
  2191                           ;incstack = 0
  2192                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2193                           ;___bmul@multiplier stored from wreg
  2194     040E  00F2               	movwf	___bmul@multiplier
  2195     040F                     l995:
  2196     040F  01F1               	clrf	___bmul@product
  2197     0410                     l997:
  2198     0410  1C72               	btfss	___bmul@multiplier,0
  2199     0411  2C13               	goto	u321
  2200     0412  2C14               	goto	u320
  2201     0413                     u321:
  2202     0413  2C18               	goto	l1001
  2203     0414                     u320:
  2204     0414                     l999:
  2205     0414  0870               	movf	___bmul@multiplicand,w
  2206     0415  00FF               	movwf	btemp+1
  2207     0416  087F               	movf	btemp+1,w
  2208     0417  07F1               	addwf	___bmul@product,f
  2209     0418                     l1001:
  2210     0418  1003               	clrc
  2211     0419  0DF0               	rlf	___bmul@multiplicand,f
  2212     041A                     l1003:
  2213     041A  1003               	clrc
  2214     041B  0CF2               	rrf	___bmul@multiplier,f
  2215     041C                     l1005:
  2216     041C  0872               	movf	___bmul@multiplier,w
  2217     041D  1D03               	btfss	3,2
  2218     041E  2C20               	goto	u331
  2219     041F  2C21               	goto	u330
  2220     0420                     u331:
  2221     0420  2C10               	goto	l997
  2222     0421                     u330:
  2223     0421                     l1007:
  2224     0421  0871               	movf	___bmul@product,w
  2225     0422                     l245:
  2226     0422  0008               	return
  2227     0423                     __end_of___bmul:
  2228                           
  2229                           	psect	text14
  2230     048D                     __ptext14:	
  2231 ;; *************** function _ds1307_init *****************
  2232 ;; Defined at:
  2233 ;;		line 28 in file "./ds1307.h"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0, pclath, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2247 ;;      Params:         0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0
  2250 ;;      Totals:         0       0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; Hardware stack levels required when called: 1
  2254 ;; This function calls:
  2255 ;;		_i2c_init
  2256 ;;		_i2c_start
  2257 ;;		_i2c_stop
  2258 ;;		_i2c_write
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264     048D                     _ds1307_init:	
  2265                           ;psect for function _ds1307_init
  2266                           
  2267     048D                     l1145:	
  2268                           ;incstack = 0
  2269                           ; Regs used in _ds1307_init: [wreg+status,2+status,0+pclath+cstack]
  2270                           
  2271                           
  2272                           ;./ds1307.h: 29:     i2c_init();
  2273     048D  120A  118A  23DF  120A  118A  	fcall	_i2c_init
  2274     0492                     l1147:
  2275                           
  2276                           ;./ds1307.h: 30:     i2c_start();
  2277     0492  120A  118A  23BB  120A  118A  	fcall	_i2c_start
  2278     0497                     l1149:
  2279                           
  2280                           ;./ds1307.h: 31:     i2c_write(0xD0);
  2281     0497  30D0               	movlw	208
  2282     0498  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  2283     049D                     l1151:
  2284                           
  2285                           ;./ds1307.h: 32:     i2c_write(0x07);
  2286     049D  3007               	movlw	7
  2287     049E  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  2288     04A3                     l1153:
  2289                           
  2290                           ;./ds1307.h: 33:     i2c_write(0x00);
  2291     04A3  3000               	movlw	0
  2292     04A4  120A  118A  23D3  120A  118A  	fcall	_i2c_write
  2293                           
  2294                           ;./ds1307.h: 34:     i2c_stop();
  2295     04A9  120A  118A  23C3  120A  118A  	fcall	_i2c_stop
  2296     04AE                     l117:
  2297     04AE  0008               	return
  2298     04AF                     __end_of_ds1307_init:
  2299                           
  2300                           	psect	text15
  2301     03D3                     __ptext15:	
  2302 ;; *************** function _i2c_write *****************
  2303 ;; Defined at:
  2304 ;;		line 32 in file "./i2c.h"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  Data            1    wreg     unsigned char 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  Data            1    0[COMMON] unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2318 ;;      Params:         0       0       0       0       0
  2319 ;;      Locals:         1       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0
  2321 ;;      Totals:         1       0       0       0       0
  2322 ;;Total ram usage:        1 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_ds1307_init
  2328 ;;		_i2c_readTime
  2329 ;;		_ds1307_setTime
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333     03D3                     _i2c_write:	
  2334                           ;psect for function _i2c_write
  2335                           
  2336                           
  2337                           ;incstack = 0
  2338                           ; Regs used in _i2c_write: [wreg]
  2339                           ;i2c_write@Data stored from wreg
  2340     03D3  00F0               	movwf	i2c_write@Data
  2341     03D4                     l1033:
  2342                           
  2343                           ;./i2c.h: 32: void i2c_write(char Data);./i2c.h: 33: {;./i2c.h: 34:     SSPBUF = Data;
  2344     03D4  0870               	movf	i2c_write@Data,w
  2345     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2346     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2347     03D7  0093               	movwf	19	;volatile
  2348     03D8                     l83:	
  2349                           ;./i2c.h: 35:     while(BF);
  2350                           
  2351     03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2352     03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2353     03DA  1814               	btfsc	20,0	;volatile
  2354     03DB  2BDD               	goto	u371
  2355     03DC  2BDE               	goto	u370
  2356     03DD                     u371:
  2357     03DD  2BD8               	goto	l83
  2358     03DE                     u370:
  2359     03DE                     l86:
  2360     03DE  0008               	return
  2361     03DF                     __end_of_i2c_write:
  2362                           
  2363                           	psect	text16
  2364     03C3                     __ptext16:	
  2365 ;; *************** function _i2c_stop *****************
  2366 ;; Defined at:
  2367 ;;		line 27 in file "./i2c.h"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		None
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         0       0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0
  2384 ;;      Totals:         0       0       0       0       0
  2385 ;;Total ram usage:        0 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_ds1307_init
  2391 ;;		_i2c_readTime
  2392 ;;		_ds1307_setTime
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396     03C3                     _i2c_stop:	
  2397                           ;psect for function _i2c_stop
  2398                           
  2399     03C3                     l1031:	
  2400                           ;incstack = 0
  2401                           ; Regs used in _i2c_stop: []
  2402                           
  2403                           
  2404                           ;./i2c.h: 29:     PEN = 1;
  2405     03C3  1683               	bsf	3,5	;RP0=1, select bank1
  2406     03C4  1303               	bcf	3,6	;RP1=0, select bank1
  2407     03C5  1511               	bsf	17,2	;volatile
  2408     03C6                     l77:	
  2409                           ;./i2c.h: 30:     while(PEN);
  2410                           
  2411     03C6  1911               	btfsc	17,2	;volatile
  2412     03C7  2BC9               	goto	u361
  2413     03C8  2BCA               	goto	u360
  2414     03C9                     u361:
  2415     03C9  2BC6               	goto	l77
  2416     03CA                     u360:
  2417     03CA                     l80:
  2418     03CA  0008               	return
  2419     03CB                     __end_of_i2c_stop:
  2420                           
  2421                           	psect	text17
  2422     03BB                     __ptext17:	
  2423 ;; *************** function _i2c_start *****************
  2424 ;; Defined at:
  2425 ;;		line 17 in file "./i2c.h"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		None
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2439 ;;      Params:         0       0       0       0       0
  2440 ;;      Locals:         0       0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0
  2442 ;;      Totals:         0       0       0       0       0
  2443 ;;Total ram usage:        0 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; This function calls:
  2446 ;;		Nothing
  2447 ;; This function is called by:
  2448 ;;		_ds1307_init
  2449 ;;		_i2c_readTime
  2450 ;;		_ds1307_setTime
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454     03BB                     _i2c_start:	
  2455                           ;psect for function _i2c_start
  2456                           
  2457     03BB                     l1027:	
  2458                           ;incstack = 0
  2459                           ; Regs used in _i2c_start: []
  2460                           
  2461                           
  2462                           ;./i2c.h: 19:     SEN = 1;
  2463     03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2464     03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2465     03BD  1411               	bsf	17,0	;volatile
  2466     03BE                     l65:	
  2467                           ;./i2c.h: 20:     while(SEN);
  2468                           
  2469     03BE  1811               	btfsc	17,0	;volatile
  2470     03BF  2BC1               	goto	u341
  2471     03C0  2BC2               	goto	u340
  2472     03C1                     u341:
  2473     03C1  2BBE               	goto	l65
  2474     03C2                     u340:
  2475     03C2                     l68:
  2476     03C2  0008               	return
  2477     03C3                     __end_of_i2c_start:
  2478                           
  2479                           	psect	text18
  2480     03DF                     __ptext18:	
  2481 ;; *************** function _i2c_init *****************
  2482 ;; Defined at:
  2483 ;;		line 9 in file "./i2c.h"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2497 ;;      Params:         0       0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0
  2500 ;;      Totals:         0       0       0       0       0
  2501 ;;Total ram usage:        0 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_ds1307_init
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510     03DF                     _i2c_init:	
  2511                           ;psect for function _i2c_init
  2512                           
  2513     03DF                     l1023:	
  2514                           ;incstack = 0
  2515                           ; Regs used in _i2c_init: [wreg]
  2516                           
  2517                           
  2518                           ;./i2c.h: 11:     TRISCbits.TRISC4 = 1;
  2519     03DF  1683               	bsf	3,5	;RP0=1, select bank1
  2520     03E0  1303               	bcf	3,6	;RP1=0, select bank1
  2521     03E1  1607               	bsf	7,4	;volatile
  2522                           
  2523                           ;./i2c.h: 12:     TRISCbits.TRISC3 = 1;
  2524     03E2  1587               	bsf	7,3	;volatile
  2525     03E3                     l1025:
  2526                           
  2527                           ;./i2c.h: 14:     SSPCON = 0b00101000;
  2528     03E3  3028               	movlw	40
  2529     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2530     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2531     03E6  0094               	movwf	20	;volatile
  2532                           
  2533                           ;./i2c.h: 15:     SSPADD = 4000000/(100000*4)-1;
  2534     03E7  3009               	movlw	9
  2535     03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2536     03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2537     03EA  0093               	movwf	19	;volatile
  2538     03EB                     l62:
  2539     03EB  0008               	return
  2540     03EC                     __end_of_i2c_init:
  2541     007E                     btemp	set	126	;btemp
  2542     007E                     wtemp0	set	126
  2543                           
  2544                           	psect	config
  2545                           
  2546                           ;Config register CONFIG1 @ 0x2007
  2547                           ;	Oscillator Selection bits
  2548                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2549                           ;	Watchdog Timer Enable bit
  2550                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2551                           ;	Power-up Timer Enable bit
  2552                           ;	PWRTE = OFF, PWRT disabled
  2553                           ;	RE3/MCLR pin function select bit
  2554                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2555                           ;	Code Protection bit
  2556                           ;	CP = OFF, Program memory code protection is disabled
  2557                           ;	Data Code Protection bit
  2558                           ;	CPD = OFF, Data memory code protection is disabled
  2559                           ;	Brown Out Reset Selection bits
  2560                           ;	BOREN = ON, BOR enabled
  2561                           ;	Internal External Switchover bit
  2562                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2563                           ;	Fail-Safe Clock Monitor Enabled bit
  2564                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2565                           ;	Low Voltage Programming Enable bit
  2566                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2567                           ;	In-Circuit Debugger Mode bit
  2568                           ;	DEBUG = 0x1, unprogrammed default
  2569     2007                     	org	8199
  2570     2007  23F2               	dw	9202
  2571                           
  2572                           ;Config register CONFIG2 @ 0x2008
  2573                           ;	Brown-out Reset Selection bit
  2574                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2575                           ;	Flash Program Memory Self Write Enable bits
  2576                           ;	WRT = OFF, Write protection off
  2577     2008                     	org	8200
  2578     2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     36      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@string_data	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[3]), STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_lcd_number
    _lcd_string->_lcd_data
    _lcd_setCursor->_lcd_command
    _lcd_number->___lwdiv
    _lcd_init->_lcd_command
    _i2c_readTime->_BCD_To_Decimal
    _BCD_To_Decimal->___bmul
    _ds1307_init->_i2c_write

Critical Paths under _main in BANK0

    _main->_lcd_number

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2579
                                             10 COMMON     3     3      0
                        _ds1307_init
                       _i2c_readTime
                        _lcd_command
                           _lcd_init
                         _lcd_number
                      _lcd_setCursor
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           3     3      0     377
                                              2 COMMON     3     3      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_setCursor                                        2     1      1     360
                                              2 COMMON     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_number                                          39    37      2    1497
                                              7 COMMON     3     1      2
                                              0 BANK0     36    36      0
                            ___lwdiv
                            ___lwmod
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_readTime                                         0     0      0     279
                     _BCD_To_Decimal
                           _i2c_read
                   _i2c_repeat_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_repeat_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BCD_To_Decimal                                       3     3      0     212
                                              3 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     168
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _ds1307_init                                          0     0      0      22
                           _i2c_init
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ds1307_init
     _i2c_init
     _i2c_start
     _i2c_stop
     _i2c_write
   _i2c_readTime
     _BCD_To_Decimal
       ___bmul
     _i2c_read
     _i2c_repeat_start
     _i2c_start
     _i2c_stop
     _i2c_write
   _lcd_command
   _lcd_init
     _lcd_command
   _lcd_number
     ___lwdiv
     ___lwmod
     _lcd_data
   _lcd_setCursor
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jun 15 12:16:13 2024

            lcd_data@Data 0071                         pc 0002            ?_lcd_setCursor 0072  
          ___bmul@product 0071                        _BF 04A0                        l32 040D  
                      l41 04D5                        l35 0451                        l52 05CF  
                      l29 03FC                        l62 03EB                        l71 03CE  
                      l80 03CA                        l65 03BE                        l74 03D2  
                      l83 03D8                        l59 048C                        l68 03C2  
                      l92 0468                        l77 03C6                        l93 0469  
                      l86 03DE                        l94 046B                        l89 0456  
    BCD_To_Decimal@number 0075                        fsr 0004                       l114 0438  
                     l130 066B                       l123 07F2                       l117 04AE  
                     l245 0422                       l509 050F                       l499 0553  
                     l995 040F                       l997 0410                       l999 0414  
                     u320 0414                       u321 0413                       u330 0421  
                     u410 0518                       u331 0420                       u411 0517  
                     u340 03C2                       u500 04EE                       u341 03C1  
                     u405 042C                       u501 04ED                       u350 03D2  
                     u430 052A                       u510 04F8                       u351 03D1  
                     u431 0529                       u511 04F7                       u360 03CA  
                     u600 0485                       _PEN 048A                       u361 03C9  
                     u425 051C                       u601 0484                       u370 03DE  
                     u450 053B                       u530 050B                       u610 0652  
                     u371 03DD                       u451 053A                       u531 050A  
                     u515 04F4                       u611 0651                       u380 045A  
                     u540 04D5                       u381 0459                       u445 052B  
                     u525 04FF                       u541 04D4                       u390 0466  
                     u470 054F                       u550 055D                       u391 0465  
                     u471 054E                       u455 0537                       u551 055C  
                     u480 04DC                       u560 05AA                       u465 0543  
                     u481 04DB                       u561 05A9                       u570 05CF  
                     u571 05CE                       u627 05F5                       u580 0473  
                     _SEN 0488                       u637 0408                       u581 0472  
                     u590 0478                       u647 03F7                       u495 04E0  
                     u591 0477                       _day 0046                       fsr0 0004  
                     indf 0000                      l1001 0418                      l1003 041A  
                    l1011 03ED                      l1005 041C                      l1013 03F2  
                    l1101 0439                      l1021 0405                      l1023 03DF  
                    l1031 03C3                      l1007 0421                      l1015 03F4  
                    l1111 0554                      l1103 04B0                      l1025 03E3  
                    l1033 03D4                      l1041 0461                      l1201 0754  
                    l1017 03FE                      l1121 0588                      l1113 055D  
                    l1105 04B5                      l1027 03BB                      l1043 0466  
                    l1035 0453                      l1211 0776                      l1203 0760  
                    l1019 0403                      l1131 05C3                      l1123 0599  
                    l1115 0565                      l1107 04C2                      l1045 046A  
                    l1037 045A                      l1029 03CB                      l1221 07AA  
                    l1213 077B                      l1205 0765                      l1061 0522  
                    l1053 0510                      l1133 05CB                      l1117 056A  
                    l1125 05A1                      l1141 0480                      l1109 04C8  
                    l1301 0671                      l1151 049D                      l1039 045E  
                    l1231 07CE                      l1223 07B0                      l1215 0781  
                    l1207 076A                      l1071 0542                      l1063 0526  
                    l1055 0512                      l1127 05AA                      l1119 057D  
                    l1143 0485                      l1135 046D                      l1303 067F  
                    l1153 04A3                      l1145 048D                      l1049 0424  
                    l1233 07D4                      l1225 07BE                      l1217 0799  
                    l1209 0770                      l1161 06C1                      l1073 0549  
                    l1065 052A                      l1057 0518                      l1081 04DC  
                    l1129 05B6                      l1137 0473                      l1305 0693  
                    l1147 0492                      l1235 07D9                      l1227 07C3  
                    l1219 079F                      l1171 06E5                      l1163 06C7  
                    l1155 06AB                      l1067 053B                      l1059 051B  
                    l1075 054F                      l1091 04F8                      l1083 04DF  
                    l1139 0478                      l1307 0699                      l1149 0497  
                    l1237 07ED                      l1229 07C8                      l1181 070E  
                    l1173 06EB                      l1165 06D5                      l1157 06B0  
                    l1069 0541                      l1093 04FE                      l1085 04E6  
                    l1261 05D0                      l1191 0733                      l1183 0714  
                    l1175 06F0                      l1167 06DA                      l1159 06B6  
                    l1095 0505                      l1087 04EA                      l1079 04D6  
                    l1271 05E9                      l1263 05D7                      l1193 0738  
                    l1185 071A                      l1177 0704                      l1169 06DF  
                    l1089 04EE                      l1097 050B                      l1281 060E  
                    l1273 05EF                      l1265 05D8                      l1195 073D  
                    l1187 071F                      l1179 0709                      l1291 0644  
                    l1283 061C                      l1275 05FC                      l1267 05DD  
                    l1197 0743                      l1189 0725                      l1293 064C  
                    l1285 0622                      l1277 0602                      l1269 05E2  
                    l1199 0749                      l1295 0652                      l1287 0630  
                    l1279 0607                      l1297 0658                      l1289 0636  
                    l1299 0665                      STR_1 0009                      STR_2 001D  
                    STR_3 001D                      STR_4 001F                      STR_5 0016  
                    STR_6 0019                      STR_7 001B                      STR_8 001B  
                    _RSEN 0489               lcd_number@a 0020                      _main 05D0  
        ??_BCD_To_Decimal 0073                      _hour 0047                      _year 0044  
                    btemp 007E             ?_i2c_readTime 0070                      start 0000  
             lcd_string@i 0072         ?_i2c_repeat_start 0070         ___bmul@multiplier 0072  
      ??_i2c_repeat_start 0070                     ?_main 0070           __end_of___lwdiv 0554  
             i2c_read@tmp 0071           __end_of___lwmod 0510                     _PORTD 0008  
                   _TRISD 0088                     _month 0045                     pclath 000A  
          ??_i2c_readTime 0076                     status 0003                     wtemp0 007E  
           ??_ds1307_init 0071           __initialization 07F3           ??_lcd_setCursor 0073  
            __end_of_main 06AB          __end_of_i2c_init 03EC          __end_of_i2c_read 046C  
        __end_of_i2c_stop 03CB                    ??_main 007A            lcd_command@cmd 0071  
                  _SSPADD 0093                    _SSPCON 0014                    _SSPBUF 0013  
           lcd_number@num 0077          __end_of_lcd_data 040E          __end_of_lcd_init 0452  
                  ___bmul 040E                 ??___lwdiv 0074                 ??___lwmod 0074  
     __end_of_ds1307_init 04AF                    _minute 0048                    _second 0049  
 __end_of__initialization 07FC       ___bmul@multiplicand 0070            __pcstackCOMMON 0070  
    __end_of_i2c_readTime 07F3         __end_of_i2c_start 03C3         __end_of_i2c_write 03DF  
              __pbssBANK0 0044                 ?_i2c_init 0070                 ?_i2c_read 0070  
               ?_i2c_stop 0070            lcd_setCursor@x 0073            lcd_setCursor@y 0072  
             _ds1307_init 048D                __pmaintext 05D0                   ?___bmul 0070  
           i2c_read@u8Ack 0070                _lcd_number 0554                 ?_lcd_data 0070  
              _lcd_string 04AF                 ?_lcd_init 0070                __stringtab 0003  
          lcd_number@temp 0040                ??_i2c_init 0070                ??_i2c_read 0070  
              ??_i2c_stop 0070                   ___lwdiv 0510                   ___lwmod 04D6  
                 __ptext1 04AF                   __ptext2 046C                   __ptext3 0554  
                 __ptext4 03FD                   __ptext5 04D6                   __ptext6 0510  
                 __ptext7 0439                   __ptext8 03EC                   __ptext9 06AB  
                 _weekDay 007D                ??_lcd_data 0070                ??_lcd_init 0072  
    end_of_initialization 07FC     lcd_string@string_data 0074     __end_of_lcd_setCursor 048D  
               _PORTCbits 0007             i2c_write@Data 0070                 _TRISCbits 0087  
             ?_lcd_number 0077               ?_lcd_string 0070             ??_lcd_command 0070  
            _i2c_readTime 06AB            __end_of___bmul 0423          _i2c_repeat_start 03CB  
     start_initialization 07F3                 _i2c_start 03BB                 _i2c_write 03D3  
            ?_ds1307_init 0070                  ??___bmul 0071       __end_of_lcd_command 03FD  
             __pbssCOMMON 007D                 ___latbits 0002             __pcstackBANK0 0020  
              ?_i2c_start 0070                ?_i2c_write 0070          ___lwdiv@dividend 0072  
          _BCD_To_Decimal 0423                  ?___lwdiv 0070                  ?___lwmod 0070  
               __pstrings 0003          ___lwdiv@quotient 0074               _lcd_command 03EC  
  __end_of_BCD_To_Decimal 0439               __stringbase 0008           lcd_number@count 0042  
             ??_i2c_start 0070              ??_lcd_number 0079               ??_i2c_write 0070  
            ??_lcd_string 0072                  _i2c_init 03DF                  _i2c_read 0452  
                _i2c_stop 03C3  __end_of_i2c_repeat_start 03D3           ?_BCD_To_Decimal 0070  
      __end_of_lcd_number 05D0        __end_of_lcd_string 04D6        __end_of__stringtab 0009  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0076                  __ptext10 03CB  
                __ptext11 0452                  __ptext12 0423                  __ptext13 040E  
                __ptext14 048D                  __ptext15 03D3                  __ptext16 03C3  
                __ptext17 03BB                  __ptext18 03DF                  _lcd_data 03FD  
                _lcd_init 0439          ___lwmod@dividend 0072                 stringcode 0003  
           _lcd_setCursor 046C           ___lwmod@divisor 0070           ___lwmod@counter 0074  
                stringdir 0003                  stringtab 0003               _SSPCON2bits 0091  
            ?_lcd_command 0070  
